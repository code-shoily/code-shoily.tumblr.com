<?xml version="1.0" encoding="UTF-8"?>
        <tumblr version="1.0"><posts><post id="112294712350" url="http://code-shoily.tumblr.com/post/112294712350" url-with-slug="http://code-shoily.tumblr.com/post/112294712350/ক-ড-শ-ল-প-ও-শ-ল-প-পর-ব-১" type="regular" date-gmt="2015-02-28 07:01:04 GMT" date="Sat, 28 Feb 2015 13:01:04" unix-timestamp="1425106864" format="html" reblog-key="dS5GaiCu" slug="ক-ড-শ-ল-প-ও-শ-ল-প-পর-ব-১" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>কোড- শিল্প ও শিল্পী, পর্ব ১</regular-title><regular-body>&lt;blockquote&gt;“When you don&amp;rsquo;t create things, you become defined by your tastes rather than ability. Your tastes only narrow &amp;amp; exclude people. So create.”&lt;br/&gt;- Why the Lucky Stiff&lt;/blockquote&gt;&lt;h2&gt;বড় এক ডিস্ক্লেইমার&lt;/h2&gt;&lt;p&gt;অনেকদিন পর আজ লিখতে বসেছি, হয়ত ২০১৫ তে সাবস্টানসিয়াল কিছু আজকেই প্রথম, কিন্তু আমি প্রথমেই বলে দিচ্ছি যে এখানে বলা সমস্ত কথা, মত আর তত্ত্ব (!) আমার ব্যক্তিগত; আমি কোডিং ও সে সংক্রান্ত বিষয়কে যে নজরে দেখি এবং প্রোগ্রামিং শিখা, অ্যাপ্লাই করা, এবং কমিউনিটি আটিটুডকে আমি যে মনস্তত্ত্ব নিয়ে অ্যাপ্রোচ করি আমি সেটিকে তুলে ধরার চেষ্টা করছি। &lt;br/&gt;&lt;/p&gt;&lt;p&gt;এই পোস্টের টাইটেল সহজে হতে পারত, &amp;ldquo;কি করে ভালো প্রোগ্রামার হওয়া যায়&amp;rdquo; অথবা &amp;ldquo;কিভাবে প্রোগ্রামিং শিখবেন&amp;rdquo; টাইপের কিছু, কিন্তু যেহেতু মতামত আমার, আর আপনি হয়ত আমার থেকে ভিন্ন দৃষ্টিতে কোড কালচারকে দেখেন, এবং আমি যেহেতু এখনও মনে করি যে আমার ভালো প্রোগ্রামার হতে আরও টাইম লাগবে, তাই ওইসব টাইটেল রাখা থেকে বিরত থেকেছি। ভালো প্রোগ্রামার হতে শেখা না, প্রোগ্রামিংকে ভালভাবে শেখা হওয়া উচিৎ আপনার প্রাথমিক লক্ষ, আর সেই লক্ষ্যভেদ বিজ্ঞান নয়, কলা (দুটোর মধ্যে কি বেশী একটা পার্থক্য আছে আজকাল?)। যেহেতু কলা ও দর্শনে কোনও &amp;ldquo;এক অ্যাবসোলুট পন্থা&amp;rdquo; নেই, আমি আমার ক্ষুদ্র মতবাদকে বড় করে লিখার চেষ্টা করব এই পোস্টে। &lt;/p&gt;&lt;h2&gt;ম্যানেজার ও অর্থোপার্জন&lt;/h2&gt;&lt;p&gt;প্রোগ্রামারদের স্যালারি নাকি বেশী, অনেককেই দেখি লিঙ্ক শেয়ার করেন যে ইউ এস এ তে নাকি টেক প্রোফেসনালদের বেতন সব থেকে বেশী (তাই কি?), অস্ট্রেলিয়াতে যেতে হলে যদি আপনি আই টি প্রোফেসনাল হন তাহলে নাকি ভিসা তাড়াতাড়ি পাওয়া যায়। ভালো তো, ভালো না? এইসব খবর হয়ত আপনাকে মোটিভেট করবে, কিন্তু যদি ওইগুলিই আপনার একমাত্র (এমনকি মুখ্য) মোটিভেটর হয়, তাহলে বিপদ, প্রাইড দিতে পারে এই সমস্ত সংবাদ, মোটিভেশন না। আপনি প্রোগ্রামিং শিখবেন একি কারণে যে কারণে কেউ গীটার শিখবে, আর আমার জানা মতে গীটার খুব কম লোকই শিখে অর্থোপার্জনের জন্যে, অনেক ভালো গিটারিস্ট হলে হয়ত আসে অনেক টাকা, ঠিক যেমন, অনেক ভালো প্রোগ্রামার হতে পারলে আসে অনেক ডলার। কিন্তু, মেইন্সট্রিম হওয়ার এবং কম্পিউটার সায়েন্স সাবজেক্ট হিসেবে আমাদের ও আমাদের হবু জীবন-সঙ্গী(নি)র বাবা মার কাছে অ্যাকসেপ্টেবল (এমনকি অ্যাট্রাক্টিভ) মেজর হওয়াতে, প্রোগ্রামিং মিউজিকের মত প্যাশন থেকে প্রফেসন এর আরাম পায়নি। কাজেই, নিয়তের ডিফারেন্সটা বেশী, আর আমি এখানে প্যাসনকে প্রাধান্য দিব, পয়সাকে নয় (একেবারেই নয়)। কাজেই, অনেকের কাছেই হয়ত সময় নষ্ট মনে হবে এ আর্টিকল পরা। আবার, আমাকে অনেকেই বলে, &amp;ldquo;আর কতদিন প্রোগ্রামিং করবেন?&amp;rdquo;, আবার অনেকেই মনে করেন যে &amp;ldquo;২/৩ বছর প্রোগ্রামিং করার পর হয়ত সব জানা হয়ে যায়, ম্যানেজার হয়ে অন্য প্রোগ্রামার খাটাব, সারাজীবন কি প্রোগ্রামিং করব নাকি?&amp;rdquo;, ম্যানেজার হওয়া খারাপ না (অত্যন্ত আন-আট্রাক্টিভ একটা শব্দ আমার মতে, যদিও আমার ডেসিগনেশনেও লেজ আকারে আছে), কিন্তু ম্যানেজার হইলে প্রোগ্রামিং না করলেও চলবে, এরকম মানসিকতা হলে আপনার জন্য জবরদস্ত কিছু বই আছে, &amp;ldquo;Sam&amp;rsquo;s Learn &amp;lt;X&amp;gt; in &amp;lt;Y&amp;gt; Days&amp;rdquo;, ধন্যবাদ, আল্লাহ হাফেয। কোডিং বিষয়ক অনেক দর্শনের মধ্যে আমি প্যাশন ড্রিভেন দর্শনকে সাপোর্ট করি, আর আমার ওই লিখা রেফ্লেক্ট করবে এই পোস্টে, এখানে কোডিং শিখার কোনও শর্টকাট দিব না, Peter Norvig-ই দিতে পারেন নাই, আমি কে (এমন কোনও শর্টকাট হয়ত Sam&amp;rsquo;s সাহেবই দিতে পেরেছেন)। কিন্তু আমি নিজে যেভাবে মোটিভেটেড সেই &amp;ldquo;ভাব&amp;rdquo; টা ডিসকাস করব, যদি আপনার আর আমার মানসিকতা মিলে যায়, তাহলে হয়ত আপনি একটা নতুন মাত্রায় অগ্রসর হতে পারবেন আপনার কোড জার্নিতে। অতএব, প্রোগ্রামিং আপনি ম্যানেজার হওইয়ার জন্য শিখবেন না, সহজে, কোন কাজ করে, এমনকি ঘরে বসেও টাকা কামানোর জন্য শিখবেন না, আপনি প্রোগ্রামিং শিখবেন কারণ আপনি সৃষ্টি করতে ভালোবাসেন, আবস্ট্রাক্ট বিষয় ঘাটতে মজা পান, আর আপনি গিক টাইপ মেন্টালিটির অধিকারী। &lt;/p&gt;&lt;h2&gt;তো প্রোগ্রামিং কেন?&lt;/h2&gt;&lt;blockquote&gt;“Programmers are not to be measured by their ingenuity and their logic but by the completeness of their case analysis.” &lt;br/&gt;- Alan J Perlis&lt;/blockquote&gt;&lt;p&gt;প্রোগ্রামিংয়ের মাধ্যমে আপনি কিছু সৃষ্টি করেন। ঠিক যেমন ঘরবাড়ি, গাড়ি, উড়োজাহাজ ইত্যাদি ইঞ্জিনিয়ার্ড হয়, আপনার সফটওয়্যারও ইঞ্জিনিয়ার্ড হয় আপনার দ্বারা, পার্থক্য হল, সফটওয়্যার নির্মানে আপনার মাল-মশলা লাগে (আপাতদৃষ্টে) কম, একটা কম্পিউটার, কিছু সফটওয়ার নির্মান সফটওয়্যার (মেটা সফটওয়্যার?) আর এক বা একাধিক উর্বর মস্তিষ্ক। কিন্তু ধরুন আপনি একটি টেবল নির্মান করবেন, যদিও আপনার কোনও মেন্টাল মডেল না থাকে কিভাবে টেবিল বানাতে হয়, কিন্তু আপনাকে যদি, একটা ফ্ল্যাট কাঠের টুকরো আর চারটা পায়া আর হাতুড়ি পেরেক দিয়ে দেই, আপনি জানবেন কিভাবে একে অ্যাসেম্বল করবেন। বড়জোর আপনাকে শিখাতে হবে হাতুড়ি দিয়ে পেরেকে বারি মারলে ওই পেরেকটা দুই পিস কাঠকে যুক্ত করে (যুক্তির খাতিরে না হয় মানলাম আপনি তাও জানেন না, কিন্তু আমাদের ৫,০০০ বছর আগেকার পুর্ব পুরুষেরা কিন্তু পারত), আপনার টুলকে যখন স্পর্শ করা যাবে, ওইটাকে স্পর্শ করে, ঘুরিয়ে পেচিয়ে পরখ করাও কিন্তু টিউটোরিয়ালের কাজ করবে, আপনার প্রোডাক্ট ও ডিসিপ্লিনের জটিলতানুযায়ী। কিন্তু প্রোগ্রামিং এ কি তা সম্ভব? একটা প্রোগ্রাম কে, একটা সফটওয়্যারকে দেখে কিন্তু আপনি মেন্টালি একে ডাইসেক্ট করতে পারবেন না কমন সেন্সানুযায়ি, আপনাকে কিছুটা হইলেও প্রোগ্রামিং ও প্রোগ্রামারকে জানতে হবে, আপনি একটা প্লেন দেখে বলতে পারেন যে এতে অন্তত মেটাল ইউজ করা হয়েছে, এতে ইঞ্জিন আছে, গোলাকার চাক্কা আছে যা তলা থেকে বের হয়, কাজেই হয়ত স্প্রিং আছে, কিন্তু সফটওয়্যার প্রোডাক্ট হিসেবেও আবস্ট্রাক্ট, আর প্রোগ্রামিং ইঙ্গিনিয়ারিং/কলা হিসেবেও (আরও) আবস্ট্রাক্ট। আর আবস্ট্রাক্ট কিন্তু প্রথম প্রথম জটিল মনে হয়, আর ওই জটিলকে সহজভাবে আপনার মস্তিষ্ক এবং সেখান থেকে আপনার কম্পিউটার এ প্রকাশ করার মজা পাওয়ার জন্যেই প্রোগ্রামিং। আমার ক্ষেত্রে এই কারণটিই যথেষ্ট ছিল। আপনি পারছেন সৃষ্টি করতে, তাও আবার (আপাতদৃষ্টিতে) শূন্য থেকে, তার উপর আপনার টুল আপনার ল্যাপটপ আর আপনার মেধা ও চিন্তাশক্তি (অতঃপর অনেক অনেক খাটুনি আর ধৈর্য) আপনার একমাত্র বাহন, তো কেন নয়? আরও রয়েছে অত্যন্ত পাওয়ারফুল এক কমিউনিটি আর আরও শক্তিশালী একটা কনসেপ্ট (ওপেন সোর্স)। &lt;/p&gt;&lt;h2&gt;কমিউনি&amp;hellip;কি?&lt;/h2&gt;&lt;p&gt; অন্য কোন বিষয়ে হয়ত কমিউনিটি এমন ভূমিকা রাখেনি যতটা প্রোগ্রামিং ও কম্পিউটার সায়েন্স এ রেখেছে। খুব কম ডিসিপ্লিনের ভিতর আমরা অন্যতম যেখানে ওপেন সোর্স কালচার অ্যাক্টিভ এবং শক্তিশালীভাবে অ্যাক্টিভ। আপনি যদি কোন লাইব্রেরী ব্যবহার করতে চান অথবা কোন প্রোগ্রামিং ল্যাঙ্গুয়েজ শিখতে চান, আপনার কোন টাকা থাকতে হবে না, সব ফ্রি-তে তো পাবেনই, তদুপরি অনেক কেইসেই, ওই প্রোগ্রাম এর আবিষ্কর্তা নিজেই হয়ত আপনার প্রশ্নোত্তর দিবে, আর আপনিও হতে পারবেন ওই প্রজেক্টের অংশ, আবার আপনার কাজের উপর আলোচনা সমালোচনাও হবে, এই কমিউনিটিতে নেই খুব বেশী একটা &amp;ldquo;হামবড়া&amp;rdquo; ভাব, আর আপনার &amp;ldquo;ব্যারিয়ার টু এন্ট্রি&amp;rdquo; অনেক কম, সবাই কিছুটা হলে সময় বের করি আমরা কমিউনিটির জন্য, যা বিরল অন্য প্রফেসনে। &lt;/p&gt;&lt;h2&gt;ঠিক আছে, এখন কিভাবে? &lt;/h2&gt;&lt;blockquote&gt;“A computer is like a violin. You can imagine a novice trying ﬁrst a phonograph and then a violin. The latter, he says, sounds terrible. That is the argument we have heard from our humanists and most of our computer scientists. Computer programs are good, they say, for particular purposes, but they aren’t ﬂexible. Neither is a violin, or a typewriter, until you learn how to use it.” &lt;br/&gt;- Marvin Minsky&lt;/blockquote&gt;&lt;p&gt;এইত পরলাম প্যাঁচে। অনেকভাবেই আপনি প্রোগ্রামিং শিখতে পারেন। কিন্তু জেনে রাখুন, অনেক অনেক সময় লাগবে, অধ্যবসায় এর উপর কিছু নাই, আর অতিরিক্ত কিছু মেন্টাল ট্রেনিং লাগবে কারণ প্রোগ্রামিং হল আবস্ট্রাকশনের খেলা। আপনি প্রথমে প্রব্লেম কে জানবেন, বুঝবেন, ও তারপর ওই প্রবলেম কে এক নির্দিষ্ট ভঙ্গিমায় গঠন করে ওই গঠনের উপর অপেরশন চালাবেন। &lt;/p&gt;&lt;p&gt;অর্থাৎ প্রথমে আপনি আপনার প্রব্লেমকে ভাঙবেন সহজে সমাধান-সম্ভব কিছু ভগ্নাংশে, ওই ভগ্নাংশকে নাম দিবেন একটা যেন আপনার ওই সাব-প্রব্লেম এর সাথে যথাসম্ভব মিল থাকে, আর সম-প্রোটোকল ফলো করা (মানে, একি ভাষা বা প্যাটার্নে পারদর্শী) কলিগ যেন দেখেই বুঝতে পারে যে কী হচ্ছে, তারপর গঠন করবেন এক কাঠামো এবং দিবেন তাকে একটা নাম, এরপর আপনি নির্ধারণ করবেন সে কাঠামোর উপর কি কি অপারেশান চালাবেন এবং ওই অপারেশানকেও দিবেন নাম, তারপর একটা সেকুএন্সে আপনি আপনার কাঠামো এবং তার উপর অপারেশান চালিয়ে ইনপুটকে পরিণত করবেন আউটপুটে, হয়ত এর মাঝে কিছু গ্রাফিক্স আসবে, কিছু কঠিন মেনিপুলেশন, কিছু টেস্ট, কিছু মাথাব্যথা, অনেক কাপ কফি ইত্যাদি, কিন্তু প্রোগ্রামিং মূলত এইটাই, আর এই কাজ করার জন্যে আপনার সাথী হবে প্রোগ্রামিং ল্যাঙ্গুয়েজ, অনেকগুলিই আছে, এবং &lt;a href="http://code-shoily.tumblr.com/post/97817887935" target="_blank"&gt;একাধিক ল্যাঙ্গুয়েজ কেন শিখবেন&lt;/a&gt; তা নিয়ে আমি &lt;a href="http://code-shoily.tumblr.com/post/105534282700" target="_blank"&gt;অনেক মাথা পিটাইছি&lt;/a&gt; আগে, দেখে নিতে পারেন। আর প্রোগ্রামিং ল্যাঙ্গুয়েজ প্যারাডাইম নিয়েও আমি লিখেছি একটু, আপনি পাবেন &lt;a href="http://code-shoily.tumblr.com/post/68678334090" target="_blank"&gt;এখানে&lt;/a&gt; ও &lt;a href="http://code-shoily.tumblr.com/post/68687495458" target="_blank"&gt;এখানে&lt;/a&gt;। &lt;/p&gt;&lt;h2&gt;অনেক লিঙ্ক, কিন্তু শিখবটা কিভাবে?&lt;/h2&gt;&lt;p&gt;কী শিখবেন তার আগে জানতে হবে আপনার প্রোডাক্ট এর প্রকারভেদ সম্পর্কে, আপনি বানাতে চান কী? ওয়েব সাইট? গেম? মোবাইল অ্যাপ? যদি ওয়েব সাইট/অ্যাপ হয়, তাহলে কি টাইপ সাইট? কন্টেন্ট নির্ভর? বিজনেস অটোমেশন? গেম (আবার!)? নাকি আপনি কোন ফ্রেমওয়ার্ক বানাচ্ছেন? একেক টাইপের কাজের জন্যে কিন্তু মেন্টাল মডেল একেক রকম হয় (বেইস ঠিক থাকে অবশ্য, প্রোগ্রামিং তো প্রোগ্রামিং), তাই যদিও আপনি কোন একটি লাইন দিয়ে শুরু করেন, আপনাকে তারপরও রাখতে হবে উম্মুক্ত ও উৎসুক মন, কে জানে আপনি ওয়েব ডেভেলপার হলেও আপনার মধ্যে হয়ত এক সেইরকম গেম ডেভেলপার লুকিয়ে আছে? কাজেই আপনার প্রথম ইনগ্রিডিয়েন্ট হইল, উৎসাহ যা মরবে না। একটা কথা বলে না, Curiosity kills the cat? প্রোগ্রামিং এর কেইসে হইতে পারে Curiosity kills the code (only to revive it better)! মানে, আপনার মধ্যে উৎসাহ শ্বেই লেভেলে থাকতে হবে যে আপনি যাই দেখুন না কেন, এর ভেতর ঢুকে পরুন (লিটেরালি, সোর্স কোড ভেঙ্গে), এই কারণেই ওপেন সোর্স এর এত জয়জয়কার, ক্লোজড সোর্স আপনার মস্তিষ্ককে করে তুলবে সীমাবদ্ধ, আর গণ্ডি থেকে যদি বের হতে না পারেন, তাহলে কি লাভ এত চমৎকার একটা পেশায় থেকে? নিউটন এর থিউরি পড়তে আপনার পয়সা দেওয়া লাগবে না, আর সফটওয়্যারের ভিতরকার এল্গরিথম দেখতেও লাগা উচিৎ না, আর ওপেন সোর্স কমিউনিটি সেটাকে করেছে সক্ষম, তাই নিজেকেও সব সময়ে সক্ষম ভাববেন এবং যাই দেখবেন, ভিতর পর্যন্ত যাবেন, বুঝবেন, খেলবেন। এইটাকে বলে হ্যাকার মানসিকতা। গেল উৎসাহ, গেল হ্যাকার মানসিকতা, বলা বাহুল্য, অধ্যবসায় আর দৃঢ়তা তো সবকিছুতেই লাগে, এরপর হল বোরিং পড়াশুনা।&lt;/p&gt;&lt;p&gt;হ্যাঁ, ভাল প্রোগ্রামার হওতে হলে (ছাই ভাল না, খারাপ প্রোগ্রামার হতে হলেও) আপনাকে পড়তে হবে, লাগাতার পড়াশুনায় থাকতে হবে, কারণ, টেকনলজি পরিবর্তনশিল, আর তুলনামূলক ভাবে নতুন সাবজেক্ট হওয়ার কারণে আরও বেশী, মুরের থিউরি তো বাদই দিলাম, কাজেই, আপনার পড়াশুনা ও রিসার্চ করার মানসিকতা থাকতে হবে, অবশ্য উৎসাহের সাথে তো সেটা আসেই as a biproduct.&lt;/p&gt;&lt;h2&gt;কিন্তু প্রোগ্রামিং ল্যাঙ্গুয়েজ এর ব্যপারটা? &lt;/h2&gt;&lt;p&gt;আচ্ছা, এই মর্মে আমি এই &lt;a href="http://www.catb.org/esr/faqs/hacker-howto.html" target="_blank"&gt;আর্টিকেল দ্বারা ইন্সপায়ার্ড&lt;/a&gt;! (আর কত শেয়ার করব এইটা?) প্রোগ্রামিং মূলত আপনার চিন্তাশক্তির খেলা। আপনার চিন্তাশক্তি যত বহুমাত্রিক হবে, আপনার প্রব্লেম সল্ভিং টেকনিক হয়ে উঠবে তত প্রকট। যেমন, পাইথন আপনাকে শিখায় একভাবে চিন্তা করতে, জাভা অন্যভাবে, লিস্প/স্কালা আরেকভাবে (উপরে দেখুন আমার আর্টিকেল এর লিঙ্ক), কিন্তু কোন চিন্তাধারাই কিন্তু অ্যাবসলুট নয়, আপনি কিন্তু ফাংশনাল কনসেপ্ট ঢুকাতে পারবেন নন ফাংশনাল ল্যাঙ্গুয়েজে, আর এক ল্যাঙ্গুয়েজ থেকে ইন্সপিরাশন নিয়ে কিন্তু আরেক ল্যাঙ্গুয়েজ এর স্কিল্কে সমৃদ্ধ করতে পারবেন, যেমন, আপনি যদি স্কালা শিখেন, তাহলে কিন্তু পিএইচপি ৫ এর নতুন ট্রেট অথবা ক্লোজারকে বেশি আপ্রিসিয়েট করতে পারবেন যা আপনি একজিস্টিং পিএইচপি ইউজার থাকলে হয়ত পারবেন না, এতে হবে টা কি? ল্যাঙ্গুয়েজ এর একটা চমৎকার ফিচার মিসিং থাকবে আপনার স্কিলসেট থেকে, আর তার সাথে মিসিং থাকবে আপনার প্রব্লেম সল্ভিং এ নতুন ব্যবস্থার (হয়ত সহজতর/দ্রুততর?) প্রয়োগ। কাজেই, নতুন ল্যাঙ্গুয়েজ শিখা মানে যে আপনার পুরাতন ল্যাঙ্গুয়েজকে ছেড়ে দেওয়া তা নয়, বরং আপনার পুরাতন ল্যাঙ্গুয়েজকে নতুনভাবে দেখার ও প্রয়োগ করার পন্থা। আমি কিছুদিন আগে পিএইচপি দেখছিলাম (আমি মূলত পাইথনে কাজ বেশি করি), আমি দেখলাম, মেটাপ্রোগ্রামিং একটু বেশিই করেছি (আগে কিন্তু করতাম না, ক্লোজার শিখার ফলশ্রুতি), আবার আমি এখন পাইথনে যেভাবে প্রোগ্রামিং করি (__ম্যাজিক_মেথড__, মেটাপ্রোগ্রামিং, ডিকশনারির প্রয়োগ বেশি) সেভাবে কিন্তু আগে করতাম না (খালি ক্লাস আর ক্লাস (বোরিং!)), ফাংশনাল প্রোগ্রামিং এর উপর পড়াশুনার ফল। কাজেই, নতুন ল্যাঙ্গুয়েজকে ভয় না পেয়ে, শিখার সুযোগ ও সময় পাওয়া মাত্রই শিখে নিন! অন্তত One Programming Language Per Year (ইন্সপিরেশনঃ &lt;a href="http://pragprog.com/the-pragmatic-programmer" target="_blank"&gt;এই বইটি&lt;/a&gt;)। আরেকটা কথা, নতুন ল্যাঙ্গুয়েজটা যেন এমন হয় যা আপনাকে ভিন্নধর্মী চিন্তা করতে শিখায় (মানে, জাভা শিখলে সঙ্গে সঙ্গে সি শার্প শিখে লাভ যতটা, তার চেয়ে বেশি লাভ হবে জাভার পর এফ শার্প শিখা)। ই এস আর এর ভাষায় বলতে গেলে- &lt;/p&gt;&lt;blockquote&gt;LISP is worth learning for a different reason — the profound enlightenment experience you will have when you finally get it. That experience will make you a better programmer for the rest of your days, even if you never actually use LISP itself a lot.    &lt;br/&gt;&lt;/blockquote&gt;&lt;p&gt; কাজেই, যুগটি পলিগ্লটের, কাজেই ল্যাঙ্গুয়েজকে ভয় পেলে চলবে একেবারেই না। আরেকটা কথা, নিজেকে আপনি পিএইচপি অথবা পাইথন প্রোগ্রামার হিসাবে মার্কেটিং করতেই পারেন, কিন্তু কখনোই এই মানসিকতায় থাকবেন না যে আপনি পিএইচপি অথবা পাইথন প্রোগ্রামার, আপনি একজন &amp;ldquo;প্রোগ্রামার&amp;rdquo; পিএইচপি/জাভা/পাইথন দ্বারা সীমাবদ্ধ নয়, অনেক প্রোগ্রামিং ল্যাঙ্গুয়েজ আসছে আর গেছে, অনেক ফ্রেমওয়ার্ক পাঁচ বছরেই অবসলীট হয়ে গেছে, কিন্তু আপনার ক্যারিয়ার ও নলেজ বেইস, দুইটাই যেন তার উর্ধে থাকে। &lt;/p&gt;&lt;h2&gt;তা আমার লার্নিং রিসোর্স কি? &lt;/h2&gt;&lt;p&gt;সহজ প্রশ্ন, বই, টেলিকাস্ট, ভিডিও, বিভিন্ন কনফারেন্স, প্রোগ্রামিং গ্রুপ, কন্টেসট (অন্ সাইট ও অনলাইন সাইট), ট্রেনিং, বড় ভাই, বস, ইত্যাদি। আর সর্বোপরি, আপনার কর্মস্থল। আপনি যদি ক্যারিয়ারের প্রারম্ভে থাকেন, তাহলে এমন একটা ওয়ার্ক প্লেস নির্বাচন করুন যেখানে আপনাকে হাতে কলমে শিখাবে, টাকা পয়সার চিন্তা করবেন না সেখানে, যদি আপনি নিজেকে অনেক দুরে দেখতে চান ইন ফিউচার। কিন্তু যদি আপনি নিজে নিজে অনেক ভাল শিখতে পারেন, তাহলে এই স্টেপ না হলেও চলবে, কিন্তু এর নিরীক্ষক আপনি না হয়ে, কিছু ওপেন সোর্স অ্যাপ্লিকেশানে অন্ট্রিবিউট করুন, লেট আদার্স বি দ্বা জাজ অফ দ্যাট! আর আপনি সবসময়ে খবরাখবর রাইখেন আপনার শিল্পের। রেডিট, হ্যাকার নিউজ, নামকরা সফটওয়্যার শিল্পীদের টিউটার ফিড, গুগল গ্রুপ ইত্যাদি ভুলবেন না যেন। আর মাঝে মাঝে নিজেকে প্রকাশ করুন কোরা অথবা স্ট্যাক অভারফ্লো তে। গিট এ অ্যাকাউন্ট খোলা তো বাঞ্ছনীয়! &lt;/p&gt;&lt;h2&gt;ভাই আমি যে কম্পিউটার সায়েন্স মেজর না? &lt;/h2&gt;&lt;p&gt;তো কি হইসে? আপনার না হয় একটু বেশি কষ্ট করতে হবে। আজকাল এলগরিদম এর উপর চরম চরম টিউটোরিয়াল আছে (মনে আছে? চরম কমিউনিটি?), কাজেই আপনাকে একটু বেশি কষ্ট করে ওগুলি দেখতে হবে আরকি। যদি আপনি প্যাশনেট হন। আর যদি একটা প্রথম, অত্যন্ত কষ্টকর (মিথ্যা বলব না, অনেক খাটতে হবে, আর আপনার মেজর ইঞ্জিনিয়ারিং থেকে যত দূর, খাটনি হবে তত বেশি) ধাপ পার হয়ে গেলে কিন্তু আপনি আপনার অধ্যবসায় এর অভ্যাস ও প্যাশন বলে টেক্কা দিতে পারবেন কম্পিউটার সায়েন্স ওয়ালা লোকদেরকেও। আমার দেখা খুব ভালো কিছু প্রোগ্রামার আছেন যারা কম্পিউটার সায়েন্স মেজর না, আর কিছু খুব বিরক্তিকর কিসিমের প্রোগ্রামার আছে যারা কম্পিউটার সায়েন্স মেজর। অনেকে ইংলিশ এ মেজর করেন কিন্তু চান ব্যাঙ্কে জব করতে, মেজরই সব কিছু না। আর আপনার প্যাশনের সরলতার কাছে থিউরির জটিলতা হার মানতে বাধ্য।&lt;/p&gt;&lt;h2&gt;তো এইবার কি? &lt;/h2&gt;&lt;p&gt;আমি তো প্রোগ্রামিং শিল্প বিষয়ক আমার প্ল্যান করা সিরিজের শুরু করলাম, আর প্রথমেই আমার নিজের মেন্টালিটি চাপালাম আপনাদের ঘাড়ে। ওই যে বলে না? YMMV&amp;hellip; সেটা প্রযোজ্য এখানে, প্রোগ্রামিং অত্যন্ত রিওয়ার্ডিং একটা সাবজেক্ট। আর উপরোল্লিখিত কথাগুলি থেকে বুঝতেই পারছেন যে প্রোগ্রামিংকে ভালভাবে জানতে হলে শুধু প্রক্রিয়াকেই না, অ্যাটিটুডকেও মাথায় রাখতে হবে, আর সব সময়ে নিজেকে আপ টু ডেট রাখতে হবে। কখনই মানলে চলবে না যে অনেক জানা হয়েছে, আর টাকার পেছনে দৌরটা একটু দেরিতে দিয়েন, লার্নিং ইজ মোর ইম্পর্টান্ট ইনিশিয়ালি। আশা করি, এর সেকন্ড পর্বটাও পরবেন :) &lt;/p&gt;</regular-body><tag>programming</tag><tag>coder-mindset</tag></post><post id="110811396835" url="http://code-shoily.tumblr.com/post/110811396835" url-with-slug="http://code-shoily.tumblr.com/post/110811396835/my-presentation-slides-at-digital-world-devcon" type="link" date-gmt="2015-02-12 14:45:48 GMT" date="Thu, 12 Feb 2015 20:45:48" unix-timestamp="1423752348" format="html" reblog-key="iKjIWRSu" slug="my-presentation-slides-at-digital-world-devcon" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>My Presentation Slides at Digital World DevCon 2015</link-text><link-url>http://slides.com/mafinarkhan/django-unchained</link-url><link-description>&lt;p&gt;Title says ut all&amp;hellip;&lt;/p&gt;</link-description><tag>slides</tag><tag>devcon2015</tag><tag>django</tag><tag>python</tag></post><post id="107141422990" url="http://code-shoily.tumblr.com/post/107141422990" url-with-slug="http://code-shoily.tumblr.com/post/107141422990/ল-ইন-ঙ-গ-ন-পর-চ-ত-১" type="regular" date-gmt="2015-01-04 20:55:31 GMT" date="Mon, 05 Jan 2015 02:55:31" unix-timestamp="1420404931" format="html" reblog-key="UMqYw1wL" slug="ল-ইন-ঙ-গ-ন-পর-চ-ত-১" state="draft" is_reblog="false" tumblelog="code-shoily"><regular-title>লাইনিঙ্গেন পরিচিতি - ১</regular-title><regular-body>&lt;p&gt;[এই পোস্টটিতে আমি লাইনিঙ্গেন এর সাথে আপনাদের পরিচয় করিয়ে দিব। এই পোস্ট এবং #leiningen ট্যাগ বিশিষ্ট পোস্টগুলি মূলত আমার বইয়ের দ্বিতীয় চ্যাপ্টার এর অন্তর্ভুক্ত হবে কিছু স্যানিটাইজেশনের পর।]&lt;/p&gt;
&lt;p&gt;লাইনিঙ্গেন একটি বীল্ড টুল যা ক্লোজার প্রজেক্ট সৃষ্টি করতে সহায়তা করে। এর সমকক্ষ প্রায় সমস্ত ল্যাঙ্গুয়েজেই আছে, যেমন পাইথনে ফ্যাব্রিক, রুবীতে রেক ইত্যাদি, কিন্তু লাইনিঙ্গেনের বিশেষত্ব হল যে, এটি এতটাই সহজ এবং একে কমিউনিটি এমনভাবেই গ্রহণ করেছে যে, লাইনিঙ্গেন না শিখে আপনি ক্লোজার কোড করে যেমন মজা পাবেন না, তেমনি যদিও আপনি ক্লোজার সিনট্যাক্স খুব ভালো জেনে থাকুন, কোন প্রজেক্ট মেইন্টেইন করতে আপনার অবস্থা খারাপ হবে, কারণ লাইনিঙ্গেন ক্লোজার ল্যাঙ্গুয়েজের অলিখিত অংশ হিসেবেই কাজ করে (এমনকি আপনি যদি ম্যাক এ ক্লোজার ইন্সটল করতে চান brew এর মাধ্যমে, তাহলে রেকমেন্ডেড পন্থা হল `brew install leiningen` এবং এটা এক্সপেক্টেড যে আপনি প্রোজেক্ট নির্মাণের মাধ্যমেই ক্লোজার নিয়ে কাজ করবেন বাই ডিফল্ট।)&lt;/p&gt;
&lt;p&gt;তাহলে লাইনিঙ্গেন দিয়ে কি করা যায়? এর জন্যে চলুন কিছু প্রশ্ন উত্থাপন করি। &lt;/p&gt;
&lt;ul&gt;&lt;li&gt;আপনি একটি ক্লোজার প্রজেক্ট শুরু করতে চাচ্ছেন। এর ফাইল স্ট্রাকচার কেমন হবে? আর এতে কি কি লাইব্রেরী থাকবে?&lt;/li&gt;
&lt;li&gt;এরমত আরও প্রজেক্ট নিয়ে কাজ করতে হবে কি? হলে কি বারবার আপনি স্ট্রাকচার নিয়ে চিন্তা করতে চান?&lt;/li&gt;
&lt;li&gt;প্রজেক্টটির কি কোন স্পেশাল ডিমান্ড আছে? অর্থাৎ, ওখানে কি কোন, কফিস্ক্রিপ্ট অথবা ক্লোজার স্ক্রিপ্ট আছে যা জাভাস্ক্রিপ্টে অটোমেটিকালি রূপান্তরিত হবে বার বার আপনার কমান্ড দেওয়া ছাড়া?&lt;/li&gt;
&lt;li&gt;আপনি কি টেস্ট লিখবেন? যদি লিখেন, তাহলে টেস্ট কেইসগুলি লিখবেন কথায়? রান করবেন কিভাবে?&lt;/li&gt;
&lt;li&gt;আপনার মেইন ফাংশন কথায়? অর্থাৎ প্রোগ্রামের এন্ট্রি পয়েন্ট কি?&lt;/li&gt;
&lt;li&gt;আপনি কি কোন জাভা লাইব্রেরী ব্যবহার করবেন? আপনি কি ক্লাস-পাথ সংক্রান্ত প্যারার সাথে পরিচিত?&lt;/li&gt;
&lt;li&gt;&lt;span&gt;আপনি কি এক্সট্রা কোন মেইন্টেনেন্স টাস্ক (যেমন কোড জেনারেশন, ক্লিন-আপ, জাভা তে কম্পাইলেশন) ইত্যাদি স্ট্যান্ডার্ড ও রি-ইউজেবলভাবে সম্পন্ন করতে চান?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;ক্লোজার একটি প্রোগ্রামিং ল্যাঙ্গুয়েজ, এর কাজ আপনাকে পারদর্শী করা প্রবলেম সল্ভিং ও এল্গরিথম ডিজাইনে, আপনার প্রজেক্ট ম্যানেজমেন্টে না। লাইনিঙ্গেন কিছুটা সেই কাজ করে। উপরের প্রশ্নগুলির উত্তর দিতে গেলে একটি কমন ডিনমিনেটর বের হয়ে আসে, আর তা হল স্ট্যান্ডারডাইজেশন, যদি কোন একটি সর্বজনগৃহীত পন্থা থাকে যার মাধ্যমে আপনি আপনার কোডের এই মেটা-ম্যানেজমেন্ট করতে পারেন সহজভাবে, তাহলে একে তো আপনার মাথাব্যথা কমলো, তার উপর আপনি নিশ্চিত করতে পারেন যে সেই প্যাটার্নকে আপনি পুনঃব্যবহার করতে পারবেন এবং কমিউনিটির সাথে শেয়ার করতে পারবেন। লাইনিঙ্গেন হল টাস্ক ম্যানেজমেন্ট সংক্রান্ত একটি ফ্রেমওয়ার্ক।&lt;/p&gt;
&lt;p&gt;ধরুন লাইনিঙ্গেন বলতে কিছু বের হয়নি, এবং আপনার কমিউনিটিতে দাপট রয়েছে, তাহলে আপনি কিভাবে আপনার কোড ম্যানেজমেন্ত ফ্রেমওয়ার্ক কিভাবে সৃষ্টি করবেন?&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;span&gt;প্রথমেই আপনি একটি ফাইল স্ট্রাকচার মেইন্টেইন করবেন, যা সোর্স, টেস্ট ইত্যাদিকে আলাদাভাবে চিহ্নিত করবে।&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;একটি ব্যবস্থা করবেন যেন আপনার ক্লাস-প্যাথ সমসময়েই লোডেড থাকে&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;যদি এমন কোন ফোল্ডার থাকে যাকে আপনি সোর্স কোড পরিবর্তনের জন্য খেয়াল রাখতে চান, তাহলে সেই ফোল্ডার, এবং খেয়াল রাখা ওই চেঞ্জগুলি কথায় গিয়ে জমা হবে সেটিকে কনফিগার করবেন।&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;কী কী লাইব্রেরী এবং তাদের কোন কোন ভার্সন ব্যবহৃত হবে আপনার প্রজেক্টে তার একটি লিস্ট মেইন্টেইন করবেন এবং তাদের রিপজিটোরির সাথে কথোপকথনের ব্যবস্থা করবেন যাতে ওই লাইব্রেরী ইন্সটলেশন/আপডেট সহজ হয়।&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;এমন কিছু করবেন যাতে আপনি কিছু ফাংশন লিখতে পারেন যা আপনার কোড সংক্রান্ত কিছু কাজ, যেমন টেস্ট রান করা, কম্পাইল করা, মিনিফাই করা, ইত্যাদি করতে পারে একটি ইউনিফাইড ইন্টারফেস দিয়ে, অর্থাৎ কাস্টম কম্যান্ড, যা আপনার প্রজেক্টের বিজনেস লজিক না, কিন্তু আপনার ডেভ টুল, তা নির্মাণ করবেন&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;একটি কনফিগারেশন ফাইল যা উপরের সমস্ত কাহিনীকে, ডিক্লেয়ার করে। &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;একটি কমান্ড যা উপরের সমস্ত কনফিগারেশন, ফাইল স্ট্রাকচার, এবং ওই কনফিগারেশন ফাইল এর একটি টেম্পলেট নির্মাণ করা এবং একে নির্দিষ্ট নাম দেওয়া যাতে একই রকম প্রজেক্টের জন্য ওই নামের টেম্পলেট নির্মাণকারী কমান্ড দিলেই যাতে আপনার কোড কঙ্কাল নির্মিত হয় এবং প্রোগ্রামার &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;</regular-body></post><post id="107047660030" url="http://code-shoily.tumblr.com/post/107047660030" url-with-slug="http://code-shoily.tumblr.com/post/107047660030/in-theory-there-is-no-difference-between-theory" type="quote" date-gmt="2015-01-03 23:03:00 GMT" date="Sun, 04 Jan 2015 05:03:00" unix-timestamp="1420326180" format="html" reblog-key="IPeJxy8Z" slug="in-theory-there-is-no-difference-between-theory" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>In theory, there is no difference between theory and practice. But, in practice, there is.</quote-text><quote-source>&lt;a href="http://en.wikipedia.org/wiki/Jan_L._A._van_de_Snepscheut" target="_blank"&gt;&lt;span&gt;Jan L. A. van de Snepscheut&lt;/span&gt;&lt;/a&gt;</quote-source><tag>quotes</tag></post><post id="107047312455" url="http://code-shoily.tumblr.com/post/107047312455" url-with-slug="http://code-shoily.tumblr.com/post/107047312455/hacked-almost-all-day-today-its-been-ages-since" type="photo" date-gmt="2015-01-03 23:00:00 GMT" date="Sun, 04 Jan 2015 05:00:00" unix-timestamp="1420326000" format="html" reblog-key="PQCgdMo6" slug="hacked-almost-all-day-today-its-been-ages-since" state="published" is_reblog="false" tumblelog="code-shoily" width="960" height="1280"><photo-caption>&lt;p&gt;Hacked almost all day today&amp;hellip; it&amp;rsquo;s been ages since I had one of those!!!&lt;/p&gt;</photo-caption><photo-url max-width="1280">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_1280.jpg</photo-url><photo-url max-width="500">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_500.jpg</photo-url><photo-url max-width="400">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_400.jpg</photo-url><photo-url max-width="250">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_250.jpg</photo-url><photo-url max-width="100">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_100.jpg</photo-url><photo-url max-width="75">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_75sq.jpg</photo-url><photoset><photo offset="o1" caption="" width="960" height="1280"><photo-url max-width="1280">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_1280.jpg</photo-url><photo-url max-width="500">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_500.jpg</photo-url><photo-url max-width="400">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_400.jpg</photo-url><photo-url max-width="250">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_250.jpg</photo-url><photo-url max-width="100">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_100.jpg</photo-url><photo-url max-width="75">https://78.media.tumblr.com/b4864058bd4439433f1a98da34e094aa/tumblr_nhmik6Sljg1slcoqpo1_75sq.jpg</photo-url></photo><photo offset="o2" caption="" width="960" height="1280"><photo-url max-width="1280">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_1280.jpg</photo-url><photo-url max-width="500">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_500.jpg</photo-url><photo-url max-width="400">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_400.jpg</photo-url><photo-url max-width="250">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_250.jpg</photo-url><photo-url max-width="100">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_100.jpg</photo-url><photo-url max-width="75">https://78.media.tumblr.com/90c59ee008ae3bc0177879f9f93b0120/tumblr_nhmik6Sljg1slcoqpo2_75sq.jpg</photo-url></photo><photo offset="o3" caption="" width="710" height="960"><photo-url max-width="1280">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_1280.jpg</photo-url><photo-url max-width="500">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_500.jpg</photo-url><photo-url max-width="400">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_400.jpg</photo-url><photo-url max-width="250">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_250.jpg</photo-url><photo-url max-width="100">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_100.jpg</photo-url><photo-url max-width="75">https://78.media.tumblr.com/85ea7aab22a99e2310207034ccfb9473/tumblr_nhmik6Sljg1slcoqpo3_75sq.jpg</photo-url></photo><photo offset="o4" caption="" width="710" height="960"><photo-url max-width="1280">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_1280.jpg</photo-url><photo-url max-width="500">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_500.jpg</photo-url><photo-url max-width="400">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_400.jpg</photo-url><photo-url max-width="250">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_250.jpg</photo-url><photo-url max-width="100">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_100.jpg</photo-url><photo-url max-width="75">https://78.media.tumblr.com/27b80507483b2d25f6c89feb3dc5d420/tumblr_nhmik6Sljg1slcoqpo4_75sq.jpg</photo-url></photo></photoset><tag>images</tag><tag>weekendhacks</tag><tag>coffeeandclojure</tag></post><post id="107035748765" url="http://code-shoily.tumblr.com/post/107035748765" url-with-slug="http://code-shoily.tumblr.com/post/107035748765/আম-র-২০১৫-এর-ক-ছ-প-ল-য-ন" type="regular" date-gmt="2015-01-03 20:49:00 GMT" date="Sun, 04 Jan 2015 02:49:00" unix-timestamp="1420318140" format="html" reblog-key="e4lgDA4n" slug="আম-র-২০১৫-এর-ক-ছ-প-ল-য-ন" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>আমার  ২০১৫ এর কিছু প্ল্যান</regular-title><regular-body>&lt;p&gt;অনেক প্ল্যানই আছে আমার এই বছরের। এর মধ্যে অনেকগুলিই প্রোগ্রামিং বিশেষত ক্লোজার স্পেসিফিক। এই পোস্টে আমি সেইগুলি তুলে ধরব। বেশি কথা না বলে সরাসরি বুলেট পয়েন্টসে গেলাম। প্রথমের লিখালিখি নিয়ে কথা-&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;আমার &lt;a href="http://clojure.howtocode.com.bd/" target="_blank"&gt;ক্লোজার এর উপর বইটি&lt;/a&gt; শেষ করতে চাচ্ছি জুন নাগাদ, আমি জানি তা শেষ করার কথা ছিল এই ফেব্রুয়ারী কিন্তু ব্যস্ততার কারণে তা পারিনি।&lt;/li&gt;
&lt;li&gt;জুনের পরে আমার ইচ্ছা রয়েছে &lt;a href="http://mitpress.mit.edu/sicp/" target="_blank"&gt;স্ট্রাকচার অ্যান্ড ইন্টারপ্রিটেশন অব কম্পিউটার প্রোগ্রামস&lt;/a&gt; বইটিকে ক্লোজারের আলোকে বাংলাতে লিখার। আর সাথে সাথে স্কিম এর উপর ছোট একটি বইও শুরু করব।&lt;/li&gt;
&lt;li&gt;আমি রেগুলার বেসিসে এই ব্লগে কিছু রিকারিং থীম বিশিষ্ট পোস্ট দিব, যার মধ্যে থাকবে, &lt;strong&gt;১)&lt;/strong&gt; আমার বইয়ের সম্পূরক কিছু রাইট আপ, &lt;strong&gt;২)&lt;/strong&gt; &amp;ldquo;এই সপ্তাহের ক্লোজার লাইব্রেরি&amp;rdquo; শীর্ষক পোস্টের সঙ্কলন, &lt;strong&gt;৩)&lt;/strong&gt; টর্নেডো (পাইথন ফ্রেমওয়ার্ক) এর উপর টিউটোরিয়াল টাইপ পোস্ট, &lt;strong&gt;৪)&lt;/strong&gt; ফাংশনাল প্রোগ্রামিং, ল্যাম্বডা ক্যালকুলাস এবং কম্বিনেটরের উপর ল্যাঙ্গুয়েজ নিরপেক্ষ সিরিজ, &lt;strong&gt;৫)&lt;/strong&gt; ডাটা অ্যানালাইসিস + ক্লোজার (আমি নিজেও শিখছি, এক্সপিরিয়েন্স তুলে ধরব মূলত)। এগুলো গেল রিকারিং থীম। রেস্ট এ পি আই, জ্যাংগো, মিটিওর তো রয়েছেই, কিন্তু সারাদিন ওইসবে কাজ করার পর আর ইচ্ছা করে না কিছু লিখতে। কিন্তু &lt;a href="http://www.bdpanacea.com/" target="_blank"&gt;প্যানাসিয়া সিস্টেমস&lt;/a&gt; এর তরফ থেকে বেশ কিছু ভালো ভালো প্রজেক্ট ওপেন সোর্স করতে যাচ্ছি। &lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;এইবার কমিউনিটি অ্যাক্টিভিটি, বেশ কয়েকটি ইনফরমাল মিট আপ করেছি কিছু ফাংশন্যাল প্রোগ্রামিং ইনথুসিয়াস্টদের সাথে, চেষ্টা করব সেটি বজায় রাখার, আরও চেষ্টা করব-&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;প্রতি মাসে অন্তত একটা ওয়ার্ক-শপ পরিচালনা করতে যার থীম হবে ফাংশনাল প্রোগ্রামিং&lt;/li&gt;
&lt;li&gt;যত বেশি সম্ভব মিট-আপ/হ্যাং-আউটের ব্যবস্থা করার&lt;/li&gt;
&lt;li&gt;আই আর সি তে কিছু টাইম স্পেন্ড করা বিশেষ করে #bddevs রুমে।&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;এইবার আসা যাক কোডিং ও প্রজেক্ট নিয়ে। আমি বেশ কিছু প্রজেক্ট ওপেন সোর্স করব, এর মধ্যে রয়েছে জ্যাংগো কোড জেনারেটর, টর্নেডো রেস্ট এ পি আই ফ্রেমওয়ার্ক এবং একটি স্ট্যাটিক সাইট জেনারেটর। আরও ২/১ টি ওপেন সোর্স প্রজেক্ট নিয়ে কাজ করছি তবে আগে এই কয়টি লঞ্চ করি, এরপর সেগুলো নিয়ে আসব। কিন্তু আমার বেশিরভাগ প্রজেক্টের ফোকাস থাকবে ডেভালপমেন্ট টুল নিয়ে, যাতে করে তাতে কোডার কমিউনিটির কিছুটা হলেও সাহায্য হয়। &lt;/p&gt;
&lt;p&gt;তো আমার এই বছরে নেয়া অনেকগুলো পদক্ষেপের মধ্যে একটি তুলে ধরলাম এই পোস্টে, আশা করি লেগে থাকতে পারব। &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span&gt;&amp;ldquo;I think that it&amp;rsquo;s extraordinarily important that we in computer science keep fun in computing. When it started out, it was an awful lot of fun. Of course, the paying customers got shafted every now and then, and after a while we began to take their complaints seriously. We began to feel as if we really were responsible for the successful, error-free perfect use of these machines. I don&amp;rsquo;t think we are. I think we&amp;rsquo;re responsible for stretching them, setting them off in new directions, and keeping fun in the house. I hope the field of computer science never loses its sense of fun. Above all, I hope we don&amp;rsquo;t become missionaries. Don&amp;rsquo;t feel as if you&amp;rsquo;re Bible salesmen. The world has too many of those already. What you know about computing other people will learn. Don&amp;rsquo;t feel as if the key to successful computing is only in your hands. What&amp;rsquo;s in your hands, I think and hope, is intelligence: the ability to see the machine as more than when you were first led up to it, that you can make it more.&amp;rdquo;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Alan_Perlis" target="_blank"&gt;&lt;span&gt;Alan Perlis&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</regular-body><tag>plan</tag><tag>2015</tag></post><post id="106732081490" url="http://code-shoily.tumblr.com/post/106732081490" url-with-slug="http://code-shoily.tumblr.com/post/106732081490/স-ব-গতম-২০১৫" type="regular" date-gmt="2014-12-31 19:29:00 GMT" date="Thu, 01 Jan 2015 01:29:00" unix-timestamp="1420054140" format="html" reblog-key="wcUuADXp" slug="স-ব-গতম-২০১৫" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>স্বাগতম ২০১৫</regular-title><regular-body>&lt;p&gt;তাহলে ২০১৪ গেল, আর নতুন বছর শুরু হল, এইতো কিছক্ষণ আগেই। খারাপ যায়নি বছরটা, আর আমি এই ব্লগটিও মেইন্টেইন করা শুরু করেছি এক বছর হতে চলল। আশা করি নতুন বছর সবার ভাল যাবে। &lt;/p&gt;
&lt;p&gt;এইবার ডিসকাস করি আমার ২০১৫ এর প্ল্যান-প্রোগ্রাম (হাহা প্রোগ্রাম, নো পান ইন্টেন্ডেড)। টেকনলজিগতভাবে, আমি বেশ কিছু নতুন স্টেপ নিতে যাচ্ছি। এর মধ্যে কিছু বেশ বোল্ড, আর কিছু আমার ন্যাচারাল আচরণ থেকে একটু ভিন্ন। আর এই পোস্টে আমি সেইগুলো আলোচনা করব।&lt;/p&gt;
&lt;p&gt;বেশ কিছুদিন আগে আমি টুয়িট করেছিলাম যে আমার নতুন বছরের কেন্দ্র থাকবে, ফিটনেস আর ফাংশনাল প্রোগ্রামিং। প্রথমটা না হয় না ডিসকাস করি, কিন্তু দ্বিতীয়টির ব্যাপারে আমি বেশ সিরিয়াস। আমি যেটুকু সময়ে অফিসে দেই, তা বাদে আমি যখনি কোন প্রোগ্রামিং করব (এবং আমি তা করবই), তা হবে সম্পূর্ণ ফাংশনাল থীমের এবং জাভাস্ক্রীপ্টমুক্ত। আরও আমার প্ল্যান আছে বেশ কিছু প্রজেক্ট ওপেন সোর্স করার, আর আরও বেশি টিউটোরিয়াল নিয়ে কাজ করার। এরপর ক্লোজার(স্ক্রীপ্ট) তো আছেই।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ক্লোজার ও &lt;/strong&gt;&lt;strong&gt;ফাংশনাল প্রোগ্রামিং&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;আমার বইটি শেষ করা লাগবে। অনেকদিন হল, আর আজকাল আমি যে হারে ক্লোজারস্ক্রীপ্ট ঘাটাঘাটি করছি, মনে হচ্ছে &lt;span&gt;ক্লোজারস্ক্রীপ্ট এর উপর একধিক চ্যাপ্টার ডেডিকেট করা লাগবে। &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;গেল বছর আমি কিছু প্রোগ্রামারকে ক্লোজারে কনভার্ট করতে পেরেছি, এমনটি আরও করা লাগবে।&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;আমি প্রতি সপ্তাহে অন্তত একদিন ক্লোজার প্রগ্রাম্মার/উৎসাহীদের সাথে কাটানোর চেষ্টা করব, সামনাসামনি, গুগল হ্যাং আউট অথবা স্কাইপে। &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;আই আর সি চ্যানেলে প্রতিদিন কিছু সময় ফাংশনাল প্রোগ্রামিং নিয়ে আলোচনা করার চেষ্টা করব।&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;ব্লগিং তো রয়েছেই। &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt; &lt;strong&gt;জাভাস্ক্রীপ্টমুক্ততা &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ভাই আর কত প্যারা নিব?&lt;/li&gt;
&lt;li&gt;ইদানীং মিটিয়র ভালোই লাগছে, চেষ্টা করব ক্লোজার-স্ক্রিপ্ট দিয়ে করার, অপারগতায় আপাতত কফি-স্ক্রিপ্ট।&lt;/li&gt;
&lt;li&gt;অফিসে কফি-স্ক্রিপ্ট। লেগাসি সিস্টেমে কি আর করার, জাভাস্ক্রিপ্টেই চালাতে হবে।&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;strong&gt;টেকনোলজি&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://holmsand.github.io/reagent/" target="_blank"&gt;রিএজেন্ট&lt;/a&gt;। ক্লোজার-স্ক্রিপ্ট ও রিঅ্যাক্ট এর সেই রকম সমন্বয়! এটি নিয়ে মনে হয় সব চেয়ে বেশি লিখালিখি করব। সাথে থাকবে &lt;a href="https://github.com/gf3/secretary" target="_blank"&gt;সেক্রেটেরি&lt;/a&gt; (রাউটিং) ও &lt;a href="https://github.com/noprompt/garden" target="_blank"&gt;গার্ডেন&lt;/a&gt; (সি এস এস)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lacarmen/cryogen" target="_blank"&gt;ক্রায়জেন&lt;/a&gt;। আমার দেখা সব থেকে ভালো স্ট্যাটিক সাইট জেনারেটর। &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weavejester/compojure" target="_blank"&gt;কম্পোজার&lt;/a&gt;। ক্লোজার এর সিনাট্রা বলতে পারেন। &lt;a href="http://clojure-liberator.github.io/liberator/" target="_blank"&gt;লিবারেটর&lt;/a&gt;, খুবই শক্তিশালী রেস্ট লাইব্রেরী।&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vertx.io/" target="_blank"&gt;ভারটেক্স&lt;/a&gt;। অথবা &lt;a href="https://github.com/ztellman/aleph" target="_blank"&gt;আলেফ&lt;/a&gt;। যে কোন সার্ভার টাইপ কিছু বানাতে হলে আমি অন্য কোন দিকে তাকাব না।&lt;/li&gt;
&lt;li&gt;ডাটা সায়েন্স নিয়ে এইবার ভালভাবে খেলব। আবারো ক্লোজার এবং &lt;a href="http://incanter.org/" target="_blank"&gt;ইঙ্ক্যান্টর&lt;/a&gt;। কিছুটা পাইথন এখানে আসবে।&lt;/li&gt;
&lt;li&gt;&lt;span&gt;আমি কখনই নো-সিকুয়েলের ফ্যান ছিলাম না কিন্তু মিটিয়রের সুবাদে মংগোডিবি নিয়ে কিছুটা পড়াশুনা করা হবে। &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meteor.com/" target="_blank"&gt;মিটিয়র&lt;/a&gt; নতুন অ্যাডিশন আমার লিস্টে। স্ট্রিক্টলি কফি/ক্লোজার-স্ক্রিপ্ট দিয়ে। আর &lt;a href="https://github.com/ptaoussanis/sente" target="_blank"&gt;সেন্টে&lt;/a&gt; আর &lt;a href="http://hoplon.io/" target="_blank"&gt;হপ্লন&lt;/a&gt; বোঝা হয়ে গেলে হয়ত আর &lt;span&gt;মিটিয়র ভালো লাগবে না। &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;পোস্টগ্রেস, রেডিস, পাইথন, জ্যাংগো, টর্নেডো, টুইস্টেড থাকছে, কিন্তু ওগুলো নিয়ে কথা বলব কম। কিন্তু &lt;span&gt;জ্যাংগো ও টর্নেডোর উপর কিছু মজার মজার ওপেন সোর্স প্রজেক্ট ছাড়ছি খুব শীঘ্রয়ই। (এইগুলির লিঙ্ক দিলাম না কারণ এইগুলিকে নতুন করে ইন্ট্রোডুস করার কিই বা আছে?) &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;এই গেল আমার প্ল্যান, এর বাইরে আমি যাওয়া থেকে বিরত থাকব। অনেকগুলি লিঙ্ক দিলাম, যদি কারও ভালো লাগে তাহলে এই ব্লগটির দিকে খেয়াল রাখবেন। এই বছর বেশি বেশি করে লিখব ইনশাআল্লাহ।&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</regular-body><tag>2015</tag><tag>welcomenote</tag></post><post id="105534282700" url="http://code-shoily.tumblr.com/post/105534282700" url-with-slug="http://code-shoily.tumblr.com/post/105534282700/ক-প-র-গ-র-ম-ল-য-ঙ-গ-য়-জ-দ-য়-ক-খ-কর-য-য়" type="regular" date-gmt="2014-12-18 17:33:00 GMT" date="Thu, 18 Dec 2014 23:33:00" unix-timestamp="1418923980" format="html" reblog-key="o81dwAiL" slug="ক-প-র-গ-র-ম-ল-য-ঙ-গ-য়-জ-দ-য়-ক-খ-কর-য-য়" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>ক প্রোগ্রামিং ল্যাঙ্গুয়েজ দিয়ে কি খ করা যায়? </regular-title><regular-body>&lt;p&gt;আপনি একটি নতুন প্রোগ্রামিং ল্যাঙ্গুয়েজ শিখছেন। হয়ত ওই ল্যাঙ্গুয়েজের মাধ্যমে হবে আপনার প্রোগ্রামিং এর সাথে পরিচয়, হয়ত শুনেছেন ওই ল্যাঙ্গুয়েজ এর ডিমান্ড বেশি, হয়ত আপনার বস আপনাকে শিখতে বাধ্য করছে, অথবা হয়ত আপনি আপনার প্রোগ্রামিং স্কিলে নতুন মাত্রা যোগ করতে চাচ্ছেন। যে কারণেই আপনি নতুন ওই ল্যাঙ্গুয়েজটি শিখুন না কেন, প্রথম ধাক্কাতেই আপনার মাথায় কিছু প্রশ্ন জাগবে। আর আপনার প্রোগ্রামিং এক্সপিরিয়েন্স হবে যত বেশি, ওই প্রশ্নগুলিও হবে তত জটিল। যারা আমার আগের  &lt;a href="http://code-shoily.tumblr.com/post/97817887935" target="_blank"&gt;পোস্টটি&lt;/a&gt; পরেছেন তারা নিশ্চয়ই বুঝতে পেরেছেন যে প্রোগ্রামিং ল্যাঙ্গুয়েজ সংগ্রহ করা আমার পেশা ও শখ দুটোই। আর আমি মনেও করি যে একটি প্রোগ্রামারকে ভিন্ন ভিন্ন প্রোগ্রামিং ল্যাঙ্গুয়েজ থেকে সংগ্রহকৃত চিন্তাধারা যেই লেভেলে উপকৃত করবে, অন্য খুব কম কাজ সেই লেভেলে করবে। &lt;span&gt;আমি এই পোস্টে কিছু বিষয়ে আলোকপাত করতে চাচ্ছি যা আমি ব্যক্তিগতভাবে ফেইস করে এসেছি (এখনও করি) নতুন ল্যাঙ্গুয়েজ শিখার সময়ে।&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;তাহলে আপনি শিখতে চাচ্ছেন ব্র্যান্ড নিউ একটি ল্যাঙ্গুয়েজ। কনগ্রাচুলেশন্স। এবার বলুন কিভাবে? কেন এর উত্তর (আমার ব্যক্তিগত মতামত) লিঙ্ককৃত পোস্টে দিয়েছি, তাই এখন কিভাবে নিয়ে কথা বলি, এবারও স্ট্রিক্টলি আমার মতামত, ওইযে বলে না? YMMV&amp;hellip;&lt;/p&gt;
&lt;p&gt;আমি আগে কোন ল্যাঙ্গুয়েজের নাম শুনলেই শিখতে বসতাম, একটা &amp;ldquo;হ্যালো ওয়ার্ল্ড&amp;rdquo; তো হবেই! সি#, জাভা, পাইথন, রুবি, ক্লোজার ইত্যাদি ইত্যাদি। প্রথমে যতটা নির্বিচারে শিখতাম, আজকাল তা আর করি না, ইন ফ্যাক্ট আগেও অতটা নির্বিচারে করতাম না, কিন্তু আমার উদ্দেশ্য ছিল ডিফারেন্ট। &lt;/p&gt;
&lt;p&gt;প্রথম কিছু ল্যাঙ্গুয়েজ শিখার সময়ে, আমি প্রথমেই চিন্তা করতাম, &amp;ldquo;এই ল্যাঙ্গুয়েজ দিয়ে আমি ডেক্সটপ সফটওয়্যার বানাতে পারব তো? ভিজুয়াল বেসিকের মত টানা হেঁচড়া করার মত কিছু আছে? আমার ইউনিভারসিটির কোনও কোর্সে কি এটা পড়ায়?&amp;rdquo; সাথে সাথে শিখা হল সি#, জাভা, ডেলফি। এরপর &amp;ldquo;How to become a Hacker&amp;rdquo; আর্টিকেলটি পরার পড় প্রোগ্রামিংকে দর্শনের দৃষ্টিতে দেখা শিখলাম, আর সাথে এলো পাইথন আর লিস্প। আর এরপর থেকেই নতুন ল্যাঙ্গুয়েজর প্রতি আমার অ্যাটিটুড তা দিয়ে &amp;ldquo;ডেক্সটপ, ওয়েব ইত্যাদি করা যায় কি যায়না&amp;rdquo; সেটি দিয়ে না, বরং ল্যাঙ্গুয়েজটি কি প্যারাডাইমের, এতে কি ল্যাম্বডা আছে কি নেই, খাটি অবজেক্ট ওরিয়েন্টেড কিনা (তখন খুব বলা ভালবাসতাম যে জাভা পরপুরি অবজেক্ট ওরিয়েন্টেড না, নতুন নতুন রুবী শিখার ফসল)। তো ওই বয়সে মাথায় ঢুকল পারাডাইম (তখনো আমি প্রোগ্রামিং ল্যাঙ্গুয়েজ প্রিন্সিপলস কোর্স করিনি)। জাভা রান করতাম টার্মিনালে, তাই ডাবল ক্লিক করে রান না করা গেলে প্যারা খাইতাম না, আর প্রথম ধাক্কাতেই আমি জেনে নিতাম কয়েকটি জিনিস, ১) রান কিভাবে করে? (থ্যাংক ইয়উ জাভা) ২) শেল আছে কিনা (থ্যাংক ইয়উ পাইথন) ৩) শেল যদি থাকে তাহলে বের হতে হয় কি করে? (থ্যাংক ইয়উ লিস্প)। তখনও কিন্তু আমি জবে ঢুকি নি (দ্বিতীয়/তৃতীয় বর্ষের ছাত্র) তাই ল্যাঙ্গুয়েজের রিয়েল লাইফ ইউটিলিটি নিয়ে মাথা কম ঘামাতাম আর গুঁতাগুঁতি করতাম বেশি। ডিজাইন প্যাটার্নগুলির সংজ্ঞা পরে মজা লাগত, এইটা ওইটা বানাইতাম, আই আর সিতে ঘুরতাম, ইত্যাদি। এরপর আমার কিছু ফ্রেন্ড থেরাপ জয়েন করল আর শুরু হল ওদের নতুন কিছু বিষয় নিয়ে কথাবার্তা যা আমার মাথার উপর দিয়ে যাওয়া শুরু করেছিল প্রথমে, যেমন, স্প্রিং, হাইবেরনেট, জে এস এফ, ইত্যাদি, পরিচিত হলাম ফ্রেমওয়ার্কের সাথে, মজাই পাইলাম, কিন্তু প্রথমে বুঝে উঠতে পারিনি যে এত প্যারা খাওয়ার কি দরকার সামান্য কাজ করতে (ব্ড় প্রজেক্ট টীমের সাথে না করার কুফল), আর সাথে সাথেই অনাড়ম্বর ভাবে প্রবেশ করল পিএইচপি, কাজেও ঢুকে গেলাম, কিন্তু এত বাজে কোডবেইস যে আমি খুব শীঘ্রই ছাড়লাম জব আর খুঁজতে শুরু করলাম যে পিএইচপি ছাড়া আর কোনও উপায় আছে সহজে ওয়েব অ্যাপ্লিকেশান তৈরির, আসল (এবং গেল) রেইলস, আর তার কিছুক্ষণ পরে কেইক পিএইচপি, আর অবশেষে জ্যানগো, আর সঙ্গে সঙ্গে শুরু হল ফ্রেইমওয়ার্ক সার্চ। কিন্তু পাইথন (এবং জ্যাঙ্গো) দিয়ে বড় কিছু কাজ করার পর বুঝতে পারলাম, যে কোন ল্যাঙ্গুয়েজ দিয়ে কি করা যায় সেটি গুরুত্বপূর্ণ নয়, সব ল্যাঙ্গুয়েজ দিয়ে সব করা যায়। গুরুত্বপূর্ণ হল কোন ল্যাঙ্গুয়েজ দিয়ে কী কিভাবে করা যায় সেটি। আরও গুরুত্বপূর্ণ হল লাঙ্গুয়াজে এর ওই প্যাটার্ন কতটুকু ট্রান্সফারযোগ্য অন্য ল্যাঙ্গুয়েজে আর নতুন কি প্যাটার্ন আর ওয়ার্ক-ফ্লো এনে দেয় আপনার জ্ঞ্যান ভাণ্ডারে। যদি কোনও ল্যাঙ্গুয়েজ ও তার কালচার সেটিকে ফুলফিল না করে, আমি ফিরেও তাকাই না তার দিকে, আমার সময় নষ্ট করার কী দরকার এমন কিছুর পিছনে যা আমার মস্তিষ্ককে চ্যালেঞ্জ না করে? &lt;/p&gt;
&lt;p&gt;যাই হোক, প্রত্যেক ল্যাঙ্গুয়েজের রয়েছে নিজস্ব কালচার, আর ওই কালচার দুটো লাঙ্গুয়াজেকে ভিন্ন করে তোলে, যদিও ল্যাঙ্গুয়েজ দুটির সিনট্যাক্স সিমিলার। পাইথন আর রুবীকেই ধরুন না, চমৎকার ল্যাঙ্গুয়েজ দুটির সিনট্যাক্স হঠাত দেখলে একি রকম লাগে, কিন্তু প্রোগ্রামিং ফিলোসফি পুরোটাই ভিন্ন, পাইথন ও তার কমিউনিটি কিছুটা রক্ষণশীল, আর রুবী কমিউনিটি উদার ও রিস্ক টেকিং, একি কাজ করার একাধিক উপায় রয়েছে রুবীতে, যা পাইথন ডিস্কারেজ করে থাকে, বেশ কিছু দিক থেকে পার্ল ল্যাঙ্গুয়েজের কালচার রয়েছে রুবীতে, আর আবিষ্কারও রয়েছে ল্যাঙ্গুয়েজটির, পৃথিবীকে দেওয়া রুবীর দুটি উপহার রেইলস ও সিনাট্রা তাই বলে, যাদের দ্বারা অনুপ্রাণিত বর্তমানের প্রায় সমস্ত ফ্রেইমওয়ার্ক। আবার পাইথন কালচারে রয়েছে নিয়মের মধ্যে থাকার এক প্রবণতা, &amp;ldquo;পাইথনিক&amp;rdquo; শব্দটি সচরাচর ব্যবহৃত হয় এবং যে কোন পাইথন কোড শুধু কাজ করলেই হবে না, তাকে হতে হবে পাইথনিক, অর্থাৎ পেপ-৮ কমপ্লায়েন্ট। ওইযে, There should be one, and only one obvious way of doing things, এদিক থেকে নতুনত্বর ল্যাঙ্গুয়েজ, ক্লোজার, দুটো দ্বারা প্রভাবিত, পাইথনের মত নিয়ম ও ইডিওমাটিক কোডিং, আর রুবির মত ডী এস এল ভিত্তিক প্রোগ্রামিং (&lt;a href="http://code-shoily.tumblr.com/post/98634898840" target="_blank"&gt;ঘুরে আসুন&lt;/a&gt;) আর লিস্প হওয়াতে এটিকে আপনি যেমন খুশি তেমনভাবে সাজাতে পারেন। এমনভাবে প্রত্যেকটি ল্যাঙ্গুয়েজের মাঝে রয়েছে এমন কিছু যা ওই ল্যাঙ্গুয়েজের নিজের, আর সেটি ওই ল্যাঙ্গুয়েজর আলোকে না দেখলে ন্যাচারাল লাগবে না, ঠিক যেমন লিস্প, হ্যাস্কেল ইত্যাদি থেকে ঘুরে না আসলে আপনি পাইথনের ল্যাম্বডা, ম্যাপ/ফিল্টার ইত্যাদিকে পছন্দ করবেন না, জাভা থেকে ঘুরে না আসলে আপনি কমন লিস্পের অবজেক্ট সিস্টেমকে পাত্তা দিবেন না, আর ফাংশনাল প্রোগ্রামিং ল্যাঙ্গুয়েজর সাথে পরিচিত না হলে আপনি পিএইচপি এর অসাধারণ নতুন ফিচার, ক্লোজার (ল্যাঙ্গুয়েজ ক্লোজার না, ফিচার ক্লোজার) কে যথাযথ মর্যাদা দিতে পারবেন না। আর এক ল্যাঙ্গুয়েজের ফিচারে আপনি পাবেন অন্য ল্যাঙ্গুয়েজে উত্থাপিত প্রশ্নের উত্তর (যেমন, পাইথন শিখার পর আমার জাভা বিষয়ক কিছু প্রব্লেমের সমাধান আসে, রিফ্লেকশন/ইন্ট্রস্পেকশন হিসাবে, যার জাভা অস্তিত্ব আমি জানতাম না যদি না পাইথন ঘাঁটতাম)। আর যত বেশী এইসব ফিচার, কালচার ইত্যাদির সাথে পরিচিত হবেন, ততই আপনার প্রোগ্রামিং স্কীল হবে উন্নত, কিন্তু, আমার মতে, এর পেছনে মোটিভেশন হওয়া উচিৎ ল্যাঙ্গুয়েজ কিভাবে কাজ করে এটি, এই ল্যাঙ্গুয়েজ দিয়ে কি করা যায়, হথবা ল্যাঙ্গুয়েজটি থেকে আপনি কত দ্রুত টাকা কামাতে পারবেন সেটি নয়। যদি আপনার স্কিল থাকে, আর প্যাশন থাকে তাহলে সেটি এমনি এমনিই কামাবেন।&lt;/p&gt;
&lt;p&gt;গো দিয়ে ওয়েবসাইট বানাতে পারবেন আপনি। আপনি একটি লাইন এইচটিএমএল অথবা জাভাস্ক্রিপ্ট না লিখে শুধু ক্লোজার দিয়ে &lt;a href="http://getprismatic.com/" target="_blank"&gt;প্রিজমেটিক&lt;/a&gt; এর মত সাইট বানাতে পারবেন, জাভাস্ক্রিপ্ট দিয়ে থ্রি ডি &lt;a href="http://runtimejs.org/" target="_blank"&gt;ও এস কার্নেল&lt;/a&gt; বানাতে পারবেন।  কিন্তু কেন করবেন? হয়ত করবেন না, কিন্তু জেনে রাখা ভালো যে করা যায়, আর কিভাবে করা যায় সেটি ঘাঁটলে আপনি আপনার জানা ল্যাঙ্গুয়েজকে দেখবেন ভিন্ন আলোকে, শিখতে পারবেন নতুন কিছু, যা ওই নতুন ল্যাঙ্গুয়েজেই সীমাবদ্ধ নয়, আপনার ল্যাঙ্গুয়াজেও আছে। কাজেই, &amp;ldquo;ক&amp;rdquo; ল্যাঙ্গুয়েজ দিয়ে &amp;ldquo;খ, গ, ঘ&amp;rdquo; সবই করা যায়, কিন্তু কিভাবে করা যায় সেটি জানার জন্য নতুন ল্যাঙ্গুয়েজ শিখা উচিৎ, আর সেটি থেকে প্রাপ্ত নলেজকে আপনি যত ল্যাঙ্গুয়েজ নিরপেক্ষভাবে ব্যবহার করতে পারবেন, আপনি হবেন ততই স্কিল্ড। &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A language that doesn&amp;rsquo;t affect the way you think about programming, is not worth knowing. - &lt;a href="http://en.wikipedia.org/wiki/Alan_Perlis" target="_blank"&gt;Alan Perlis&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</regular-body><tag>programming-languages</tag><tag>polyglot</tag><tag>programming</tag></post><post id="104147290395" url="http://code-shoily.tumblr.com/post/104147290395" url-with-slug="http://code-shoily.tumblr.com/post/104147290395/i-invented-the-term-object-oriented-and-i-can" type="quote" date-gmt="2014-12-02 08:30:00 GMT" date="Tue, 02 Dec 2014 14:30:00" unix-timestamp="1417509000" format="html" reblog-key="l7hamziC" slug="i-invented-the-term-object-oriented-and-i-can" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>I invented the term object-oriented and I can tell you&lt;br/&gt;
I did not have C++ in mind.</quote-text><quote-source>Alan Kay.</quote-source><tag>quote</tag><tag>computer-science</tag></post><post id="104065934220" url="http://code-shoily.tumblr.com/post/104065934220" url-with-slug="http://code-shoily.tumblr.com/post/104065934220/edpan-training-starts-soon" type="link" date-gmt="2014-12-01 10:40:00 GMT" date="Mon, 01 Dec 2014 16:40:00" unix-timestamp="1417430400" format="html" reblog-key="V5omzOGe" slug="edpan-training-starts-soon" state="published" is_reblog="true" tumblelog="code-shoily"><link-text>EdPan: Training starts soon..</link-text><link-url>http://bdpanacea.tumblr.com/post/104065371788/edpan-training-starts-soon</link-url><link-description>&lt;p&gt;&lt;a class="tumblr_blog" href="http://bdpanacea.tumblr.com/post/104065371788/edpan-training-starts-soon" target="_blank"&gt;bdpanacea&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, we are prepping up for the Python/Django training that we were talking about for awhile now, although we had commenced a Python Foundation course earlier this year, we would like to to end this year with more solidified and fun set of programs.&lt;/p&gt;
&lt;p&gt;From the very beginning Panacea Systems Ltd has worked with Python and Django. Although we recently added Clojure to our mix of technology, we still are very much a Python shop, which are only a handful in Bangladesh. Just as handful as the quality Python programmers are. And we really like to change that. Enter EdPan.&lt;/p&gt;
&lt;p&gt;EdPan is a project of ours where we wanted to provide hands on training on the technologies we use at our work place. They are meant to be hands on, precise, and experience (our) driven. I mean, the pain we had in our path, why allow others to endure the same if we can help? And trust us when we say so, the stuff we work with is hell fun (otherwise, we wouldn’t be doing this).&lt;/p&gt;
&lt;p&gt;So, what are we offering? At this point, it’s Python, Django (duh), and AngularJS. Things should go good and we’d go more advanced, and then there’s our new love interest, Clojure, sessions on which we’ll give out just like that next year!&lt;/p&gt;
&lt;p&gt;Anyways, here are our plans in brief:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Foundation Course on Python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spend four weeks with the language and tell us it’s not amazing. The foundation course in Python takes you on a tour of Python, starting from it’s rudimentary syntax to all the way to OOP, common libraries, and our favorite: Best Practices. This is a course meant for an individual preferably with programming knowledge (you should know your If’s, for’s and while’s, for example. The “Foundation” will be laid out for Python and by the time we’re done with you, you can do loads of tricks with Python and talk Python like a Pythonista.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Full Stack Web Development with Django&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Django takes away the pain, bad practices and unreadability from web development and brings in fun and power. With this course, you would know what it feels to measure your project completion in days as opposed to months. And that to ensuring, maintainable, performant, and readable course, with loads of fun. The Django web framework is handed to you here, starting from models and working all the way up to templates (all the way = views?). We cover basic and advanced stuff here alike, and this course is designed for a programmer willing to join the web development posse. After completion, you will be able to make web applications using Django, following best practices and producing pythonic code. We will particularly focus on the ORM, templates, work-flow, design patterns, common third party apps, pitfalls and parrying thereof, and, our favorite, “best practices”. It will take you six weeks with us, followed by a long (and enlightening) time with yourself to master this amazing piece of technology.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Beginning AngularJS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Didn’t we say we work with Python and Django? Well, we figured, web development without JavaScript nowadays is like Justice League without Batman. While we don’t do BatmanJS, we do have a super-heroic JavaScript framework at our disposal: “AngularJS”. Our Beginning AngularJS course will familiarize you with AngularJS. You will be able to impress your friends with web apps that are snappy, or impress yourself with how web 2.0 you’ve gotten with so little pain killers. This course will have all the bells and whistles a foundation level AngularJS course should have, and you will start your way of having a front-row seat for the front-end, but of course, that comes with lots of hard-work which you will have to go through afterwards.&lt;/p&gt;
&lt;p&gt;Training is not a panacea, so at Panacea Systems, we aim to smoothen the path for you through EdPan, we show you how things work, how things should work, and how you should make things work, but it is solely up to you to walk the way and we can only ensure that we equip you with what you need to do so. The courses are out and here is how you can register yourselves:  &lt;a href="https://docs.google.com/forms/d/1u398Jjeit0Po1GLKwQj6lEr6pedEddW3CIoGmOgTsxE/viewform" target="_blank"&gt;By Following this Link&lt;/a&gt; or by dropping a mail to &lt;a href="mailto:info@bdpanacea.com" target="_top"&gt;info@bdpanacea.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;</link-description><tag>edpan</tag><tag>training</tag><tag>panacea</tag></post><post id="99234655930" url="http://code-shoily.tumblr.com/post/99234655930" url-with-slug="http://code-shoily.tumblr.com/post/99234655930/জ-য-ঙ-গ-ক-ম-ইক-র-ফ-র-মওয়-র-ক-র-মত-ব-যবহ-র-কর" type="regular" date-gmt="2014-10-05 16:30:00 GMT" date="Sun, 05 Oct 2014 22:30:00" unix-timestamp="1412526600" format="html" reblog-key="TWDmLmRg" slug="জ-য-ঙ-গ-ক-ম-ইক-র-ফ-র-মওয়-র-ক-র-মত-ব-যবহ-র-কর" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>জ্যাঙ্গোকে মাইক্রো-ফ্রেমওয়ার্কের মতো ব্যবহার করা</regular-title><regular-body>&lt;p&gt;&lt;u&gt;[ নোট- এভাবে ব্যবহার করলে জ্যাঙ্গোর আসল শক্তি পাবেন না, কিন্তু এক্সপেরিমেন্ট করা ভালো ]&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;অনেকেই আজকাল ফ্লাস্কের কথা বলে, খুব সহজে আপনি ওয়েব অ্যাপ্লিকেশান বানাতে পারবেন এটি দিয়ে, আবার বড় অ্যাপ্লিকেশান হলেও এর কিছু প্যাটার্ন রয়েছে যা ফলো করে আপনি ফ্লাস্ক দিয়ে মোটামোটি বড় মানের অ্যাপও তৈরী করতে পারবেন। জ্যাঙ্গো আপনার অ্যাপ্লিকেশানকে ভারী করে ফেলে এবং আপনি আটকে থাকেন খামাখা কিছু ফাইল নিয়ে যা হয়ত আপনি ব্যবহার করবেন না।&lt;/p&gt;
&lt;p&gt;কেননা, জ্যাঙ্গোকে ছোট করি? ফ্লাস্কের মতই বানাই? তা কিন্তু খুব সহজেই সম্ভব। আপনি একটি ফাইল তৈরী করবেন, এবং ওই ফাইলকে রান করলেই চলবে আপনার অ্যাপ্লিকেশান।&lt;/p&gt;
&lt;p&gt;১) প্রথমে একটি ফোল্ডার খোলা যাক, যার নাম দেই project, যথারীতি __init__.py টাচ করি।&lt;/p&gt;
&lt;p&gt;২) ওখানে, একটি ফাইল সৃষ্টি করি, main নামে।&lt;/p&gt;
&lt;p&gt;৩) ওই ফাইলটিই হবে আমাদের রানাবল ফাইল যা ক্ষুদ্র জ্যাঙ্গো প্রোগ্রাম চালাবে।&lt;/p&gt;
&lt;p&gt;৪) ওই ফাইলটিতে manage.py এর মশলা আনতে হবে এবং তাকেই রানাবল করতে হবে execute_from_commandline ফাংশন দিয়ে।&lt;/p&gt;
&lt;p&gt;৫) settings.py থাকবে না, আর এই ফাইলটিতেই থাকবে settings এর কনফিগারেশন, বার বার যাতে কনফিগার না করা হয় কাজেই configured প্রপার্টির ব্যবহার করতে হবে।&lt;/p&gt;
&lt;p&gt;৬) settings.py একটি পাইথন ফাইল, এর সব ভারিয়েবল, configure নামক ফাংশনের মাধ্যমে জ্যাঙ্গোর কাছে পরিচিত হয়, আর তা হয় মাত্র একবার। আমরা আমাদের main.py তেও তাই করব।&lt;/p&gt;
&lt;p&gt;৭) urls এর রুট আমরা এই ফাইলটিকেই বলব, এবং এর একটি লিস্ট ফাইলের প্রথমে ডিক্লেয়ার করব।&lt;/p&gt;
&lt;p&gt;৮) এরপর আমরা ইচ্ছেমত ভিউ বানাব।&lt;/p&gt;
&lt;p&gt;এখন আমাদের কোডটি দাঁড়াবে-&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
from django.core.management import execute_from_command_line
from django.conf import settings
from django.http import HttpResponse
from django.conf.urls import patterns


settings_dict = {"DEBUG": True, "ROOT_URLCONF": 'main'}
urls = ['^$', 'index'], ['^about/$', 'about']

settings.configure(**settings_dic) if not settings.configured else None
urlpatterns = patterns('main', *urls)

def index(request):
    return HttpResponse("Hello World")

def about(request):
    return HttpResponse("About")

if __name__ == '__main__':
    execute_from_command_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;এখন এটা তো গেল আমাদের প্রথম প্রচেষ্টা, এরপর যদি আপনি আরও অগ্রসর হতে চান, তাহলে এই ধরনের কিছু ইম্পোরট এবং সেটিংস্ এর ওই লাইনটিকে আরেকটি ফাইলে রাখতে পারেন, আরও তৈরী করতে পারেন কিছু ডেকোরেটর যেমন, @url, @view ইত্যাদি, এবং সেগুলিকেও সে ফাইলে রাখতে পারেন, আমরা ওই ফাইলটিকে বলতে পারি micro.py, আর সাথে সাথে INSTALLED_APPS কেও এনে নিতে পারি, তখন আমাদের কোড দাঁড়াবে-&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
from micro import *


@url("/about")
@view(render_to="about.html")
def about(request):
    return { "name": "Tiny Little Django", "content": "Lorem Ipsum.." }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;আপনি &lt;a href="https://github.com/sametmax/django-quicky" target="_blank"&gt;এখান থেকে&lt;/a&gt; এর একটি সুন্দর উপকরণ পাবেন।&lt;/p&gt;
&lt;p&gt;এইভাবে কোড করলে জ্যাঙ্গো থেকেও আপনি স্বাধীনতা পাবেন, যেমন, আপনি চাইলেই SQLAlchemy, Jinja, Mako ইত্যাদি ব্যবহার করতে পারবেন, আবার জ্যাঙ্গোর সমস্ত ব্যাটারি তো আছেই, আবার নিজে থেকে কিছু ইউটিলিটি ফাংশন লিখে আপনি নিজেই মাইক্রো-ফ্রেমওয়ার্ক বানিয়ে ফেলতে পারবেন একে, এটি তো একটি উদাহরণ মাত্র, এর উপর আপনি আপনার ইচ্ছামতো কাচি চালাতে পারবেন আর যেভাবে খুশি সেভাবে জ্যাঙ্গোকে ব্যবহার করতে পারবেন। আমি চিন্তা করছি এই পোস্টটির শেষে দেওয়া আইডিয়া কাজে লাগিয়ে একটি ফাইল বানাব যার মধ্যে থাকবে খুব তাড়াতাড়ি জ্যাঙ্গো প্রজেক্টকে মাইক্রো স্টাইলে ব্যবহার করার মশলা, দেখা যাক সময় পাই কিনা।&lt;/p&gt;</regular-body><tag>django</tag><tag>discussion</tag></post><post id="99218150690" url="http://code-shoily.tumblr.com/post/99218150690" url-with-slug="http://code-shoily.tumblr.com/post/99218150690/জ-য-ঙ-গ-কন-ট-ন-ট-ফ-র-মওয়-র-ক" type="regular" date-gmt="2014-10-05 12:14:00 GMT" date="Sun, 05 Oct 2014 18:14:00" unix-timestamp="1412511240" format="html" reblog-key="hSYAJ9Ws" slug="জ-য-ঙ-গ-কন-ট-ন-ট-ফ-র-মওয়-র-ক" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>জ্যাঙ্গো কন্টেন্ট ফ্রেমওয়ার্ক</regular-title><regular-body>&lt;p&gt;জ্যাঙ্গোর ORM আপনার ডাটাবেইজ এক্সপিরিয়েন্সকে অনেকটাই সহজতর করে তোলে। এক কথায় বলতে গেলে, জ্যাঙ্গো আপনাকে দেয় ডাটাবেইজ (SQL/রিলেশনাল ডিবি) এর উপর একটি পাইথনিক র‍্যাপার যা ডাটাবেইজের অভ্যন্তরীণ ব্যপার এমনকি SQL-কে লুকিয়ে রাখে এবং আপনি শুধুমাত্র কিছু ক্লাস লিখে ও সেই ক্লাসের মেথড কল করেই আপনার ডাটাবেইজ টেবলের সৃষ্টি, রো অ্যাড/রেমুভ, কুয়েরী ইত্যাদি করতে পারবেন। এর জন্য জ্যাঙ্গোর ব্যবহৃত কনসেপ্ট হল মডেল।&lt;/p&gt;
&lt;p&gt;মডেল আপাতদৃষ্টিতে একটি পাইথন ক্লাস যার বিশেষ কিছু ক্ষমতা রয়েছে, নিজেকে ডাটাবেইজ সিস্টেমের কাছে বোধগম্য করে তোলা এর মধ্যে অন্যতম। একবার সেটিংসে (settings.py) বলে দেওয়ার পর, বেশিরভাগ ক্ষেত্রেই আপনাকে আর জানতে হবে না যে ডাটাবেইজ ম্যানেজমেন্ট সিস্টেমটি কী ছিল। syncdb কমান্ডের পর জ্যাঙ্গো সেটিংস্‌ থেকে ডাটাবেইজ ফ্লেভার জেনে নিয়ে অতঃপর মডেলগুলিকে ট্রান্সলেট করে ওই ডাটাবেইজের ডি ডি এলে, আর যখন আপনি কোন ডাটা কোন টেবলে অ্যাড করতে চান, তাহলে তার সাথে ম্যাপড মডেলটির একটি নতুন অবজেক্ট তৈরী করুন (বিশেষ কিছু নিয়ম ফলো করে) আর ডাটাবেইজ থেকে জ্যাঙ্গোর কথা বলিয়ে দিবে ORM এবং মডেল API।&lt;/p&gt;
&lt;p&gt;কাজেই বুঝা যাচ্ছে যে, প্রতিটি SQL ফিল্ডের একটি পাইথনিক রূপ রয়েছে যার মাধ্যমে জ্যাঙ্গো মডেল পাইথন থেকে ডি বি অথবা ডি বি থেকে পাইথনে ওঠানামা করে, আবার কিছু বিশেষ মেথড রয়েছে যার মাধ্যমে পাইথন থেকে SQL ও SQL থেকে পাইথনে ওঠানামা করে। প্রথমটি হল অ্যাট্রিবিউটের ও দ্বিতীয়টি বিহেভিয়ারের মত (অবজেক্ট ওরিয়েন্টেড চিন্তা করতে গেলে)।&lt;/p&gt;
&lt;p&gt;আমার এই পোস্টের মূল বিষয় জ্যাঙ্গো ORM না। আমি আশা করব যারা জ্যাঙ্গো পারেন কিছুটা আর ORM নিয়েও কিছু ঘাটাঘাটি করেছেন তারা বেশি লাভবান হবেন এই পোস্ট থেকে। আমার এই পোস্টের মূল বক্তব্য হবে (যা টাইটেল সম্মত) &amp;ldquo;জ্যাঙ্গো কন্টেন্ট ফ্রেমওয়ার্ক&amp;quot;।&lt;/p&gt;
&lt;p&gt;কখনও কি ফেইসবুকের ডাটাবেইজ নিয়ে চিন্তা করেছেন? কিরকম হতে পারে তাদের ডাটাবেইজের স্ট্রাকচার? হয়ত বিলিয়নেরও উপর রো নিয়ে স্কেল করার জন্য ফেইসবুকের আসল স্ট্রাকচার আমাদের চিন্তা করা স্ট্রাকচারের মত হবে না, কিন্তু একটা চেষ্টা কি করা যায়? ঠিক আছে, তো আমাদের কাছে থাকল কিছু &amp;quot;পোস্ট টাইপ&amp;rdquo;, যা ইমেজ হতে পারে, স্ট্যাটাস হতে পারে, পোল হতে পারে, শেয়ার হতে পারে। যদি জ্যাঙ্গো দিয়ে এমন কিছু করার থাকে তাহলে এদের প্রত্যেকের জন্যেই একটি করে মডেল নিয়োগ করা যায়। একটি &amp;ldquo;গরিবের ফেইসবুক&amp;rdquo; চিন্তা করা যাক, যেখানে ইমেজ আর স্ট্যাটাস রয়েছে শুধু। ইমেজ হতে পারে প্রোফাইল পিকচার, আর স্ট্যাটাস তো স্ট্যাটাসই। জ্যাঙ্গো মডেল হতে পারে নিম্নরূপ (সরলতার জন্য আমি ধরে নিলাম যে সবকিছুই পাবলিক!)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
class Place(models.Model):
    name = models.CharField(max_length=127)
    description = models.TextField(blank=True, null=True)
    latitude = models.FloatField(blank=True, null=True)
    longitude = models.FloatField(blank=True, null=True)
    owner = models.ForeignKey(User)
    creation = models.DateTimeFIeld(auto_now=True)
    
class PostModel(models.Model):
    owner = models.ForeignKey(User)
    creation = models.DateTimeField(auto_now=True)
    
    class Meta:
        abstract = True

class ImagePost(PostModel):
    image = models.ImageField(upload_to="mugshot/")
    description = models.TextField(blank=True, null=True)
    place = models.ForeignKey(Place)

class Status(PostModel):
    status = models.ImageField()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ঠিক আছে, আমরা কিছু ডাটা খুব সহজেই সেইগুলিতে অ্যাড করতে পারি, আমরা সবাই জ্যাঙ্গো জানি, বড় কোনও ঘটনা নয়।&lt;/p&gt;
&lt;p&gt;এইবার কমেন্টের পালা। আপনার সমস্ত স্ট্যাটাস, আর সমস্ত ইমেজ থাকবে কমেন্টেবল। আবার লোকজন ভোটও দিতে পারবে । আর একটা টাইমলাইন থাকলেও ভাল হত, টুইটার হ্যাসট্যাগ ইউজ করে, সবাই করতেছে আজকাল, আমরাও করব! এইবার কি?&lt;/p&gt;
&lt;p&gt;আপনি যদি জ্যাঙ্গো মোটামোটি পারেন, তাহলে আপনার তাৎক্ষনিক চিন্তা থাকবে, কিছু মডেল তৈরী করা। হয়ত একটি অ্যাবস্ট্রাক্ট বেইজ ক্লাস (কমেন্ট) যেখানে কমেন্টের জেনেরিক সব উপাদান (কে করল, কি করল, কখন করল) থাকবে, আর তারপর সেই অ্যাবস্ট্রাক্ট বেইজ ক্লাস থেকে ইনহেরিট করবে ImagePostComment, StatusComment, PlaceComment ইত্যাদি। একইভাবে, একটি জেনেরিক টাইমলাইন, একটি জেনেরিক ট্যাগ, একটি জেনেরিক ভোট। কিন্তু কিছু ঝামেলা আছে।&lt;/p&gt;
&lt;p&gt;তাৎক্ষনিক ঝামেলা বোঝা যাবে টাইমলাইন ও ট্যাগের ক্ষেত্রে, আপনি চাইবেন আপনার প্রোফাইলে দেখা মাত্র আপনার সমস্ত অ্যাক্টিভিটি কেউ দেখতে পাবে। আপনি কবে কী পোস্ট করলেন, কখন কাকে অ্যাড করলেন, কবে আপনার জন্মদিন ইত্যাদি ইত্যাদি। আর টাইমলাইনের ব্যপ্তিও হবে বিশাল, কতগুলি ক্লাস বানাবেন আপনি? FriendHistoryTimeline? NotificationTimeline? StatusTimeline? একই জিনিস ট্যাগেও চলবে। আপনার ন্যাচারাল রিস্পন্স হবে যে আপনি &amp;ldquo;programming&amp;rdquo; ট্যাগে ক্লিক করলে সেই ট্যাগবিশিষ্ট সকল পোস্ট, ইমেজ, স্ট্যাটাস একই সাথে চলে আসবে, সর্ট/সার্চ হবে একত্রে। এখন করবেন কি? abstract = False করে দিবেন বেইজ ক্লাসে? তাহলে তো কয়েকশতেই কাইত! আবার কমেন্ট যদিও ওইসব ঝামেলা থেকে কিছুটা মুক্ত, তবে আগামীতে যখন আপনি &amp;ldquo;গল্প&amp;rdquo; অথবা &amp;ldquo;বিক্রয়&amp;rdquo; সেকশন খুলবেন, তখন? আবার সেই কমেন্ট মডেল, ফর্ম তৈরী, ইত্যাদি? লাইফ আরেকটু সহজ হলে কি হত না?&lt;/p&gt;
&lt;p&gt;উপরের প্রশ্নের উত্তরের জন্য জ্যাঙ্গো আপনাকে দেয় কন্টেন্ট ফ্রেমওয়ার্ক। একে আপনি বলতে পারেন ফরেন কী জগতের মিস্টিক (এক্স-মেন দেখেছেন?)। এর কাজ? একটি ইউনিভারসাল &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; টাইপের কিছু সৃষ্টি করা এবং যে কাউকে ধারণ করা সেই ইউনিভারসাল &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; তে। রুবী অন্ রেইলসে এটি আছে পলিমরফিক টাইপ হিসাবে, যা আমি মনে করি আরও ভাল একটি নাম এর ব্যবহার অনুযায়ী।&lt;/p&gt;
&lt;p&gt;পলিমরফিক, অর্থাৎ বহুরূপী। রেইলসের লোকজন নাম দিয়েছে ভালোই, কিন্তু জ্যাঙ্গো কোন দুঃখে একে কন্টেন্ট টাইপ বলতে গেল? এর পিছনে কিছু কাহিনী আছে যা পোস্টের শেষে বোঝা যাবে।&lt;/p&gt;
&lt;p&gt;চলুন টাইমলাইন/অ্যাক্টিভিটি নিয়ে ভাবি। কেমন হতে পারে ডাটাবেইজ? এক কথায়, কর্তৃকারক, কর্মকারক, করন কারক, হয়ত অধিকরণ কারক। কেউ কিছু করেছে, কারও উপর করেছে, কোনও একটি সময়ে করেছে, হয়ত কোনও একটি স্থানে করেছে। ডাটাবেইজের ভাষায় বলতে গেলে, যখন কে করেছে তা হবে ইউজারের দিকে একটি &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt;, কি করেছে? তা হতে পারে একটি &lt;strong&gt;স্ট্রিং&lt;/strong&gt; (যথা অ্যাড, রিমুভ, আপডেট), কার উপর করেছে, তা হতে পারে একটি &lt;strong&gt;পোষ্ট&lt;/strong&gt;। এইরূপ মান হলে আমরা পাব UserPostActivity, যার গঠন হতে পারে-&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
class UserPostActivity(models.Model):
    actor = models.ForeignKey(User)
    verb = models.CharField(max_length=255)
    object = models.ForeignKey(Post)
    timestamp = models.DateTimeField(auto_now=True)
    
    
    def __unicode__(self):
        """ Mafinar updated 'Django Rocks' 5 minutes ago (hint: throw some 's around?)"""
        return "{} {} {} at {}".format(actor, verb, object, _since(timestamp))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ভালো কথা, আরও ৫০ টি এমন ক্লাস তৈরী করতে হবে, আবার একটি জেনেরিক ক্লাস বানাতে হবে যা এদের সকলের রেফারেন্সকে রাখে ও একত্রিত করে দেখার একটি মাধ্যম হিসাবে কাজ করে। তাহলে সিউর থাকেন, &amp;lsquo;Django Rocks&amp;rsquo; এর পরবর্তী স্ট্যাটাস হবে 'Life is difficult'। আমার (ও আমি সিউর অনেকেরই) মতে, কোডটি হওয়া উচিত ছিল&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
class Activity(models.Model):
    actor = models.ForeignKey(models._meta.AnyModel())
    verb = models.CharField(max_length=255)
    target = models.ForeignKey(models._meta.AnyModel())
    timestamp = models.DateTimeField(auto_now=True)
    
    
    def __unicode__(self):
        """ Mafinar updated 'Django Rocks' 5 minutes ago (hint: throw some 's around?)"""
        return "{} {} {} at {}".format(actor, verb, target, _since(timestamp))

    @classmethod
    def action(cls, by_who, what, to_whom):
        Activity.objects.create(actor=who, verb=what, target=on_what)
        
    # When a status is updated
    def status_update(request, pk):
        try:
            status = Status.objects.get(id=pk)
            Activity.action(request.user, " created ", status)
        except:
            pass
            # Do whatever you want to do man!
    ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[১) উপরের কোড কাল্পনিক এবং কেমন হলে ভালো হত সেই বিষয়ে আমার অভিমত এবং ২) এইসব কেইসের জন্য সিগন্যাল ব্যবহার করা উত্তম যা আমার পরের পোস্টের মূল বিষয় হবে। ]&lt;/p&gt;
&lt;p&gt;জ্যাঙ্গো কন্টেন্ট ফ্রেমওয়ার্ক ঠিক এই কাজটিই করে থাকে, কিন্তু একটু ভিন্নভাবে। এর জন্য চলেন একটু এক্সপেরিমেন্ট করি। আপনার কে কোন জ্যাঙ্গো প্রজেক্টে গিয়ে python manage.py shell টাইপ করুন এবং লিখুন-&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
from django.contrib.contenttypes.models import ContentType

contents = ContentType.objects.all()
content_fields = [i.name for i in ContentType._meta.fields]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;কি হল? আপনি কি দেখতে পেলেন আপনার সমস্ত মডেলগুলিকে? আপনি যদি জ্যাঙ্গোর কন্টেন্ট টাইপ ফ্রেমওয়ার্কের সোর্স কোড দেখেন (যে কোন পাইথন লাইব্রেরীতে আপনার বেস্ট ফ্রেন্ড হল সোর্স কোড, বিশেষ করে জ্যাঙ্গোতে) এবং management.py ফাইলটি দেখেন (django/contrib/contenttypes/management.py) তাহলে দেখবেন যে post_syncdb সিগন্যালের পর যে হ্যান্ডলার ফাংশন কল করা হয়, তা প্রতি syncdb কলের পর নতুন করে সৃষ্ট মডেলের জন্য কন্টেন্ট টাইপে একটি এন্ট্রি দেয়, আর ডিলিট করা মডেলের এন্ট্রিকে রিমুভ করে দেয়। অর্থাৎ, কন্টেন্ট হল জ্যাঙ্গো ORM এর নিজস্ব মেটা মডেল, যেখানে সমস্ত মডেলের নাম/ঠিকানা রয়েছে।&lt;/p&gt;
&lt;p&gt;কাজ একটু সহজ হয়ে গেল না আমাদের জন্য? ধরুন আপনি &amp;ldquo;যে কোন মডেলের&amp;rdquo; পরিবর্তে বলছেন &lt;em&gt;'কন্টেন্ট টাইপ থেকে পাওয়া &amp;ldquo;ইমেজ&amp;quot;নামক মডেলের ২৫ &lt;strong&gt;&amp;quot;প্রাইমারি কী&amp;rdquo;&lt;/strong&gt; যার আছে তাকে&amp;rsquo;&lt;/em&gt;, &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; করে কি? রিলেশনশিপ স্থাপন করে অন্য &lt;u&gt;&amp;ldquo;একটি&amp;rdquo;&lt;/u&gt; মডেলের সাথে আর তার মাধ্যম হয় &lt;strong&gt;&amp;ldquo;কী&amp;rdquo;&lt;/strong&gt;, আর যদি আপনি ওই অন্য &lt;u&gt;&amp;ldquo;একটি&amp;rdquo;&lt;/u&gt; কে &lt;u&gt;&amp;ldquo;যে কোন একটি&amp;rdquo;&lt;/u&gt; তে পরিণত করতে চান, তাহলে আপনার কি লাগবে? আরও একটি এন্ট্রি, এবং সর্বসাকুল্যে একটি টুপল, অর্থাৎ (কোন মডেল?, কোন কী?) কন্টেন্ট টাইপ আপনাকে দিচ্ছে সমস্ত মডেলের একটি ভাণ্ডার, কাজেই আপনি ফরেন কী হিসাবে কন্টেন্ট টাইপকে রাখলে টুপলের প্রথম উপাদান পেয়ে যান, আর দরকার একটি ইন্টিজার ফিল্ড যা সিলেক্ট করা কন্টেন্ট টাইপ থেকে পুল করে নিয়ে আসে তার ধারণ করা নাম্বারের আই ডি কে। পেয়ে গেলেন আপনার মাথা ব্যথার ওষুধ। কিন্তু বার বার এরকম করাও তো মুশকিল, আপনাকে এখন একবার কন্টেন্ট টাইপ থেকে, আরেকবার ওই মডেল থেকে get কমান্ড দিয়ে কাজ করতে হবে, এই দুইটি মিলে &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; কে এমুলেট করা গেলে কেমন হত? একটি জেনেরিক &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt;? তা খুব ভালভাবেই সম্ভব এবং এর নামও &lt;strong&gt;&amp;ldquo;জেনেরিক ফরেন কী&amp;rdquo;&lt;/strong&gt;, যা চাইবে পূর্ব উল্লিখিত সেই টুপলকে আর আপনার কাছ থেকে অতিরিক্ত কমপ্লেক্সিটিকে লুকিয়ে রাখবে। আপনি অন্যান্য &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; এর মতই একে ব্যবহার করতে পারবেন। আমাদের Activity মডেল এখন দাঁড়াল&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
class Activity(models.Model):
    actor_content_type = models.ForeignKey(ContentType, related_name='actor')
    actor_object_id = models.CharField(max_length=255)
    actor = generic.GenericForeignKey('actor_content_type', 'actor_object_id')

    verb = models.CharField(max_length=255)

    target_content_type = models.ForeignKey(ContentType, related_name='target', blank=True, null=True)
    target_object_id = models.CharField(max_length=255, blank=True, null=True)
    target = generic.GenericForeignKey('target_content_type', 'target_object_id')
    timestamp = models.DateTimeField(default=now)

    # THE REST SHOULD BE THE SAME
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;আপনার মূল চিন্তা হবে actor, verb, target, timestamp কে নিয়ে, *_content_type ও *_object_id নিয়ে খেলা ব্যাকগ্রাউন্ডে করবে কন্টেন্ট ফ্রেমওয়ার্ক।&lt;/p&gt;
&lt;p&gt;এখন আসি এদের নিয়ে কাজ করা নিয়ে। আবার কিছু বিষয়, ১) নরমাল &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; তে যেমন উলটা রিলেশনশিপ দেয় (যদি ইমপ্লয়ী তে ডিপার্টমেন্ট ফরেন কী থাকে তাহলে ডিপার্টমেন্টে থাকবে ইমপ্লয়ি_সেট যা সেইসব ইমপ্লয়িকে টানবে যাদের ফরেন কী হিসাবে ওই ডিপার্টমেন্টটি রয়েছে) &lt;strong&gt;&amp;ldquo;জেনেরিক ফরেন কী&amp;rdquo;&lt;/strong&gt; এর ক্ষেত্রে ওরকম উলটা &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; থাকে না, আপনাকে বলে দিতে হবে, আর তা করতে হবে GenericRelation এর মাধ্যমে। অর্থাৎ,&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
from django.contrib.contenttypes import generic


class ImagePost(models.Model):
    # After all the fields
    activities = generic.GenericRelation(Activity)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;২) আপনি সরাসরি ফিল্টার/এক্সক্লিউডের মধ্যে GenericForeignKey/GenericRelation কে ব্যবহার করতে পারবেন না ৩) মডেল ফর্মে এরা আসবে না। কিন্তু ContentType আসবে, কারণ সেটি তো সাধারণ &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt;, তাহলে আপনি যদি চান Post মডেলের উপর করা সমস্ত Activity বের করতে তাহলে? আপনার জন্য এখানে একটি চমৎকার হেল্পার মেথড রয়েছে ContentType এর Manager এ (Manager এর কাজ কি জানেন তো? না জানলে ও জানতে চাইলে কমেন্টে লিখুন)। এটি যে কোন অবজেক্ট নিয়ে এর সাথে ম্যাপড কন্টেন্ট টাইপকে ফেরত দেয়, আর তা হল, get_for_model() আরও একটি রয়েছে, get_for_models() যা একাধিক মডেল/কন্টেন্ট টাইপ ম্যাপিং ফেরত দেয়। অর্থাৎ, আপনি যদি, একটি পোস্ট অবজেক্ট পান এবং এর ক্লাসের সবার Activity চান তাহলে আপনি লিখবেন,&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
post_content = ContentType.objects.get_for_model(my_post)
all_activities_of_the_class = Activity.objects.filter(target_content_type=post_content)
all_activities_of_this_model = Activity.objects.filter(target_content_type=post_content, target_object_id=my_post.id)

# Reverse
image_activities = ImagePost.activities.all()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;কাজেই দেখলাম, যদিও কন্টেন্ট টাইপের কারণে, মডেলের একটি &lt;strong&gt;&amp;ldquo;জিনেরিক ফরেন কী&amp;rdquo;&lt;/strong&gt; এবং উলটা &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; এর ব্যবস্থা করা যায়, তবে ডাটাবেইজ কুয়েরির ক্ষেত্রে আপনাকে একটু কষ্ট করে অবজেক্টের কন্টেন্ট টাইপ ও আই ডী (ID/PK) নিয়ে একটু খেলতে হবেই, &lt;strong&gt;&amp;ldquo;জিনেরিক কী&amp;rdquo;&lt;/strong&gt; শুধুমাত্র সাহায্য করে সৃষ্টি ও অ্যাসাইন্মেন্ট এর সময়ে, যা আমি মনে করি অনেক গুরুত্বপূর্ণ। আর পারফরম্যান্স? এটি আসলে আপনার সাইটের ডাটার উপর নির্ভর করে, কয়েক হাজার ডাটার জন্য আমি কোন প্রবলেম পাইনি, কিন্তু যখন ডাটা লাখের কোঠায় পৌছবে, তখন আমি মনে করি আপনার পক্ষেও সম্ভব হবে, স্কেলিংয়ের মাল-মশলা জোগাড় করার, কারণ ততক্ষণে তো আপনি বড়লোক হয়েই যাবেন। আর এরা কিন্তু আসলে একটি &lt;strong&gt;&amp;ldquo;ফরেন কী&amp;rdquo;&lt;/strong&gt; ও নাম্বার (ID/PK) এর সম্মিলিত কুয়েরি, বেশি প্রবলেম হলে আপনি SQL ব্যবহার করতে পারেন, অথবা, একটি মাইগ্রেশন স্ক্রিপ্ট লিখে ডাটাকে কোন NoSQL এ ফেলে দিতে পারেন, যেহেতু এই রকম, আন স্ট্রাকচারড ডাটা নিয়ে তারা ভাল খেলতে পারে। কিন্তু এগুলো সবই হবে যখন আপনার ডাটা মিলিয়নের কোঠায় পরবে, ওই সময়ে, অনেক ডাটা নিয়ে খেলতে অমনিতেও আপনাকে হবে।&lt;/p&gt;
&lt;p&gt;কন্টেন্ট টাইপের মাধ্যমে আপনি বহু সমস্যার সমাধান করতে পারেন। এখানে তার মধ্যে কিছু দেয়া হল, বহু অ্যাপ রয়েছে যারা একে লেভেরেজ করে থাকে, এর মধ্য থেকে জ্যাঙ্গোর নিজস্ব সাইট ফ্রেমওয়ার্ক, কমেন্ট ফ্রেমওয়ার্ক, অনেক পপুলার django-taggit, django-activity-stream, django-notification-hq, django-postman ইত্যাদি রয়েছে, বিশেষ করে django-activity-stream আমার খুবই প্রিয়। হয়ত কোন একদিন সেটি নিয়ে লিখব। আর কন্টেন্ট টাইপের সাথে আপনাকে আরও শক্তিশালী করবে জ্যাঙ্গোর সিগ্ন্যালিং ফ্রেমওয়ার্ক যা নিয়ে আমি আমার পরবর্তী জ্যাঙ্গো পোস্টে লিখব।&lt;/p&gt;
&lt;p&gt;আপনাদের সকলকে ঈদ মুবারক জানিয়ে এখানে শেষ করছি। ধন্যবাদ।&lt;/p&gt;</regular-body><tag>django</tag><tag>contenttype</tag><tag>tutorial</tag></post><post id="99045466825" url="http://code-shoily.tumblr.com/post/99045466825" url-with-slug="http://code-shoily.tumblr.com/post/99045466825/জ-য-ঙ-গ-র-একট-ক-ডব-হ-ন-স-চন" type="regular" date-gmt="2014-10-03 10:45:00 GMT" date="Fri, 03 Oct 2014 16:45:00" unix-timestamp="1412333100" format="html" reblog-key="Xwiz6ft4" slug="জ-য-ঙ-গ-র-একট-ক-ডব-হ-ন-স-চন" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>জ্যাঙ্গোর একটি কোডবিহীন সূচনা।</regular-title><regular-body>&lt;p&gt;&lt;em&gt;[ আমার পুরনো ডেক্সটপ থেকে পাওয়া। অনেকদিন আগে ভেবেছিলাম জ্যাঙ্গো নিয়ে কিছু লিখব, নেট ছিল না আর খুব বোর্ড ছিলাম একদিন, তো ভাবলাম, নেট নাই তো খই ভাজ, এই সেই খই, খাতা/পেন্সিলে তখন বাংলাতে পাইথনের উপর তেমন কোন লিখালিখি হত না সুবিন ভাইয়ের ব্লগ ছাড়া, কাজেই ভেবেছিলাম কিছু একটা লিখি, পরবর্তীতে ভুলে যাই, তাই বেশ কয়েক বছর পর পাবলিশ করছি টাইপ করে (আজকে কাজ কম, তাই সেই খইকে আবার ভাজতেছি অভ্র দিয়ে এইবার)। জ্যাঙ্গো সম্পর্কে জানতে হলে এখন বাংলায় অনেক আর্টিকেল, ভিডিও কাস্ট, এমনকি একটি বইও লিখা হচ্ছে। এটি লিখা হয়েছিল জ্যাঙ্গো ১.৩ এর সময়ে, কিন্তু যেহেতু কনসেপ্ট, তাই অত সমস্যা হওয়ার কথা না ]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;প্রথমেই বলে রাখই এটি জ্যাঙ্গো নিয়ে আমার প্রথম পোস্ট আর আমি এখানে কোন কোড লিখব না। আমার উদ্দেশ্য এই পোস্টের মাধ্যমে জ্যাঙ্গো ওয়েব ফ্রেমওয়ার্কের একটি পরিচিতি তুলে ধরা গল্পের মত করে এবং একে যথাসাধ্য পূর্ণাঙ্গভাবে উপস্থাপিত করার চেষ্টা করা। জ্যাঙ্গো দিয়ে কি কি, কিভাবে কিভাবে সম্ভব এবং কোন ধরনের কাজের জন্য জ্যাঙ্গোর কোন অংশটি জড়িত সেইগুলি নিয়ে কথা বলার চেষ্টা করব এমনভাবে যেন এর প্রতিটি অংশ একেকটি ব্যক্তিত্ব। আশা করি কেউ না কেউ এই ধরনের লিখায় ও এমনভাবে ফ্রেমওয়ার্ক নিয়ে চিন্তা করায় উপক্রিত হবেন।&lt;/p&gt;
&lt;p&gt;জ্যাঙ্গো একটি ওয়েব ফ্রেমওয়ার্ক এবং পাইথন ওয়েব ডেভেলপমেন্ট সংক্রান্ত প্রশ্নের (প্রায়) তাৎক্ষনিক জবাব। কিন্তু এই ওয়েব ফ্রেমওয়ার্ক জিনিসটা কী? এক কথায় বলতে গেলে, ওয়েব ফ্রেমওয়ার্ক একটি অবকাঠামো যা আপনার জন্য একটি পরিবেশ তৈরী করে দেয় ওয়েব সাইট অথবা অ্যাপ তৈরীতে এবং সঙ্গে সঙ্গে আপনার জন্য নিয়ে নেয় কিছু সিদ্ধান্ত এবং আপনার দিকে চুরে দেয় কিছু ডিজাইন প্যাটার্ন। যদিও এতে আপনার স্বাধীনতা কিছুটা খর্ব হয়, আপনি ও আপনার টীম তারপর উপকৃত হবেন সার্বজনীন অবকাঠামো, প্রয়োজনীয় লাইব্রেরী এবং পরীক্ষিত, কিছুটা সিকিউর, ফলপ্রসূ কোড অভ্যাস ও ডিজাইন প্যাটার্ন থেকে। ফুল স্ট্যাক ফ্রেমওয়ার্ক নামের একটি শব্দ আবার প্রচলিত, আর তা হোল সেই সব ফ্রেমওয়ার্ক (ওয়েব) যা কিনা আপনার ডাটাবেইজ থেকে শুরু করে ফ্রন্ট এন্ড পর্যন্ত সব জায়গাতেই নাক গলায়, অনেকটা জ্যাক অফ ওল ট্রেড। জ্যাঙ্গো একটি ফুল স্ট্যাক ফ্রেমওয়ার্ক, অত্যন্ত জনপ্রিয়গুলির মধ্যে একটি। কাজেই এটিও জ্যাক অফ ওল ট্রেড (হয়ত মাস্টার অফ ব্যাক-এন্ড?)। এটি শুধু আপনার ওয়েব ডেভেলপমেন্ট এক্সপিরিয়েন্সকে সহজ ও আনন্দদায়কি শুধু করে না, আপনাকে গড়ে তোলে ভালো ও দক্ষ কোডার হিসেবে কারণ পাইথন, জ্যাঙ্গোর চালিকা শক্তি, পরিচ্ছন্নতম ও শক্তিশালী একটি জেনেরাল পারপাস ল্যাঙ্গুয়েজ যা বহু নামকরা প্রোগ্রামার ও প্রতিষ্ঠান দ্বারা পরীক্ষিত।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ইতিহাস&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;জ্যাঙ্গোর ইতিহাস ও অন্যান্য ফ্রেমওয়ার্কের সাথে এক তুলনা নিয়ে আমার আরও একটি পোস্ট লিখার ইচ্ছা রয়েছে কাজেই এখানে সেগুলি তেমন টানব না। তবে এতটুকু বলে রাখি, ২০০৪ এর দিকে জ্যাঙ্গো ব্যবহৃত হতো লরেন্স এর ওয়েব সাইটে, ওখানকার কিছু প্রোগ্রামাররা তাঁদের প্রয়োজনীয়তা ও সংবাদ জগতের ডেডলাইনের মধ্যে সমন্বয় সাধনের লক্ষ্যে সৃষ্টি করেন জ্যাঙ্গোকে যার ট্যাগলাইন হলঃ &amp;ldquo;A web framework for perfectionists with deadlines&amp;rdquo; সংবাদ জগতের সান্নিধ্যে জন্ম নেওয়ার কারণেই হয়ত জ্যাঙ্গোর ডকুমেন্টেশন এত সুন্দর করে লিখা (যা অন্য যে কোন ফ্রেমওয়ার্ক থেকে নির্ভুল, সম্পূর্ণ ও আরটিকুলেটেড আমার মতে)। ২০০৫ এ একে মুক্ত সোর্স করা হয় এবং আজ অবধি ১.৩ ভার্সন চলছে। পাইথন প্রোগ্রামাররা ভার্সনের ব্যাপারে একটু রক্ষণশীল, অনেক ম্যাচিউর পাইথন লাইব্রেরি রয়েছে যাদের ভার্সন ১ ও হয়নি কিন্তু হয়ত স্ট্যাবিলিটির দিক থেকে অনেক ভার্সন ২+ থেকেও বেশি। কাজেই এতদিন পর্যন্ত জ্যাঙ্গোর ভার্সন ২ এর নীচে থাকা অবাক করা কিছু নয়, আর এর অর্থ এও নয় যে এটি কোন ভার্সন ৫/৬ এর ফ্রেমওয়ার্ক থেকে কম যায়। আরেকটি কথা, জ্যাঙ্গো হল ওয়েব ফ্রেমওয়ার্ক জগতের বিরল সেই শ্রেণিতে পরে যা রুবী অন্ রেইলস অথবা সিনাট্রা দ্বারা ইন্সপায়ারড হয়নি এবং অনেক ক্ষেত্রে সরাসরি কপি করেনি, বরং স্বকীয়তার মাধ্যমে অন্যদের ইন্সপায়ারড করেছে (রেইলস ও জ্যাঙ্গো একই সময়ে সৃষ্ট, রেইলসকে আগে ওপেন সোর্স করা হয়, আর এই দুই ফ্রেমওয়ার্কই একে অপর দ্বারা প্রভাবিত ও প্রায়শ একজন আরেকজনকে থ্যাংকস জানায়, কিন্তু একটি দেখে মনে হবে না যে তা অন্যটির মত)। Mozilla, Disqus, Pinterest, Instagram, Bitbucket, NASA ইত্যাদি প্রতিষ্ঠান জ্যাঙ্গো ব্যবহার করে থাকে তাদের ওয়েব আপ্লিকেশনগুলোতে।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;দর্শন ও কাঠামো&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;এবার কোড দর্শন নিয়ে কিছু বলা যাক। অন্য কথায়, লেটস গেট ডাঊণ টু বিজনেস। সরাসরি আমি কোন কোড এই পোস্টে লিখতে চাচ্ছি না কারণ আমি চাই এই পোস্টের মাধ্যমে আপনি জ্যাঙ্গো বান্ধব কাঠামো এবং অ্যাটিটুড সম্পর্কে জানুন। জ্যাঙ্গো কিভাবে কাজ করে (আর করায়) সেটি বুঝতে পারলে পরবর্তীতে যখন আপনি মাঠে নামবেন, অথবা টেকনিক্যাল পোস্ট পরবেন তখন আপনি বিনা বাধায় এঞ্জয় করতে পারবেন। শুরু করা যাক।&lt;/p&gt;
&lt;p&gt;প্রথমে এই পোস্ট প্রণালী। এখন থেকে এই পোস্টে কিছু ব্রাকেটবন্ধ ইংলিশ শব্দ থাকবে যার অনুবাদ আমি ইচ্ছে করেই করব না। এর কারণ, প্রোগ্রামিংয়ের সময়ে সেই শব্দগুলো কাজে আসবে। কাজেই এগুলো তাত্ত্বিকভাবে এখনি জেনে রাখা ভালো হবে। আর এইগুলি আপনি আরও ভালভাবে বুঝতে পারবেন যখন (ও যদি) আপনি কখনো কিছু জ্যাঙ্গো প্রোগ্রামিং করে আবার এই পোস্টে ফিরে আসেন। এবার কাজের কথায় আসি (আসলেই)।&lt;/p&gt;
&lt;p&gt;তাহলে আপনি একটি ওয়েব অ্যাপ্লিকেশন বানাচ্ছেন, তাও জ্যাঙ্গোতে। আপনার প্রথমে জ্যাঙ্গোর মত করে নির্মাণ প্রণালী ও কোড কাঠামো রাখতে হবে। জ্যাঙ্গোর জগতে আপনার সম্পূর্ণ প্রজেক্ট হোল একটি, [Project] এবং প্রতিটি প্রজেক্ট হল ছোট ছোট অ্যাপের সমষ্টি। প্রতিটি অ্যাপ কোন না কোন কাজ করে, একই ধরনের কাজ। আর এরা প্রত্যেকেই প্রজেক্ট ফোল্ডারের ভিতরে নিজ নামের একটি ফোল্ডারে বাস করে। উদাহরণস্বরূপ, আপনি যদি একটি সসিয়াল নেটওয়ার্কিং সাইট বানান তাহলে ফ্রেন্ড লিস্ট সঙ্ক্রান্ত ডাটাবেইস টেবল, লজিক, লুক এন্ড ফিল, সব্ই থাকবে &amp;ldquo;ফ্রেন্ড&amp;rdquo; নামক অ্যাপ এ, আপনার প্রজেক্ট নামক ফোল্ডারের ভিতরে। ব্লগ ও কমেন্ট একই ভাবে নিজ নিজ অ্যাপে থাকবে। ভালভাবে ডিজাইন করা হলে আপনি হয়ত একটি অ্যাপকে নিয়ে আরেকটি প্রজেক্টে ফেললে সেই প্রজেক্টও অনুরূপ ক্ষমতা পাবে, যেহেতু সব লজিক অ স্ট্রাকচার সেই একই অ্যাপ এর মধ্যে আছে।&lt;/p&gt;
&lt;p&gt;আপনার প্রজেক্টে কি কি অ্যাপ থাকবে, ডাটাবেইজে কি থাকবে, CSS/JS কোথায় থাকবে, লজিক কিভাবে মেইন্টেইন করবেন, কোন [URL] এর ম্যাপিং কিরকম [VIEW] এর সাথে ঘটবে এবং আপনার HTML [TEMPLATE] কিভাবে নির্মিত হবে, সবই আপনাকে জানিয়ে দিতে হবে জ্যাঙ্গোকে, না, আসলে জ্যাঙ্গোই আপনাকে বলে দিবে কোথায় কি রাখতে হবে (তা না হলে ফ্রেমওয়ার্ক হওয়ার সার্থকতা কোথায়?)। জ্যাঙ্গোর বেশিরভাগ সেটিংস হয় [SETTINGS] ফাইলে যা একটি পাইথন প্রোগ্রাম, ওখানকার ভেরিয়েবল পরিবর্তিত করে আপনি আপনার প্রজেক্টের বিভিন্ন বিষয়, যেমন ডাটাবেইজ, ল্যাঙ্গুয়েজ, ডেট ফরম্যাট, কোথায় HTML থাকবে, কোথায় CSS/JS/IMG থাকবে, আর কি কি অ্যাপ রেজিস্টার্ড আছে ইত্যাদি বলতে পারবেন।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;কমান্ড&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;জ্যাঙ্গো কিছু কমান্ড দিয়ে দেয় যা দিয়ে আপনি নতুন অ্যাপ তৈরী করতে পারবেন যা পূর্ব নির্মিত হয়ে আসে অন্যান্য জ্যাঙ্গো স্পেসিফিক ফাইল নিয়ে (অন্যান্য ফ্রেমওয়ার্ক থেকে জ্যাঙ্গোর কাঠামো সরলতর)। আবার আরেকটি কমান্ড দিয়ে আপনি আপনার শেলে ঢুকতে পারবেন, আরও একটি থেকে আপনি ডাটাবেইজ টেবল নির্মাণ করতে পারবেন। এরকম কমান্ডের মাধ্যমে আপনি কিছু সুবিধা পাবেন যা অনেক খাটনি কমাবে আপনার। আবার আপনি নিজের জন্যও কমান্ড তৈরী করতে পারবেন জ্যাঙ্গোতে। যেমন, python manage.py notify_stock_end কমান্ডটি হয়ত আপনার স্টকে যা শেষ হয়ে আসছে সেইগুলির লিস্ট পাঠাবে স্টক ম্যানেজারের কাছে। আর এই কমান্ডকে আপনি চালাতে পারেন ক্রনজবে, যা কিছু সময় পর পর রান করবে। [manage.py] হল dispatcher যা আপনার জ্যাঙ্গো স্পেসিফিক কমান্ডকে চালায়।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ইউ আর এল ও ভিউ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;পৃথিবীর সাথে জ্যাঙ্গোর মূল কানেকশন ঘটে [URL] এর মাধ্যমে। একটি উপায় হল, ফাইল স্ট্রাকচার ও URL কে ম্যাপ করে। অর্থাৎ, /x/y/z URL ও ফাইল একই জিনিস। এটি যদিও কমন সেন্স বান্ধব, কিন্তু সিকিউরিটি বান্ধব নয়। জ্যাঙ্গো পলিসি হল, প্রতিটি URL একটি ফাংশনের সাথে ম্যাপড। আর এখানে নামকরণের কিছুই নেই, আপনার URL হতে পারে এক নামের, এক মডুলের, আর ফাংশন হতে পারে সম্পূর্ণ ভিন্ন নামের, ভিন্ন ফোল্ডারের। আর আপনাকে সরাসরি বলতে দিতে হবে কোন URL কোন ফাংশনের সাথে জড়িত, আর এই কাজটি করবে [urls.py] ফাইল। এই ফাইলে একদিকে প্যাটার্ন আর অন্য দিকে ফাংশনের মিলন ঘটে যার মাধ্যমে জ্যাঙ্গো জেনে নেয় যে কখন কাকে ডাকা লাগবে। urls.py অনেকটা গেট-কীপারের কাজ করে জ্যাঙ্গো জগতে, আর প্রতিটি অ্যাপ এর নিজস্ব urls.py থাকতে পারে, যা সেই অ্যাপের একটি ফাংশনকে চিহ্নিত করে। আর রয়েছে একটি মাস্টার urls.py, যা সেই প্রজেক্টের সমস্ত অ্যাপের url কে চিনিয়ে থাকে। বলতে পারেন, যেন কোন বইয়ের টেবল অফ কন্টেন্ট।&lt;/p&gt;
&lt;p&gt;তাহলে আমরা জানলাম যে জ্যাঙ্গোতে প্রতিটি URL একটি ফাংশনকে চিনে, /about/ ডাকবে about() ফাংশনকে, তাহলে about হল সেই url এর [VIEW]। ভিউ মানে এখানে যতটা &amp;ldquo;দেখা&amp;rdquo; বুঝায়, তার চেয়ে বেশি বুঝায় উদ্দেশ্য (with a &amp;lsquo;view&amp;rsquo; to, my point of 'view&amp;rsquo;, what is your 'view&amp;rsquo; on this?), আর সেই ভিউ মূলত সব কাজ করে, কোন টেমপ্লেটকে দিতে হবে, ওই টেমপ্লেটকে কী দিতে হবে, ডাটাবেইজকে কী বলতে হবে ইত্যাদি। যখন কোন ইউজার কোন URL ভ্রমণ করেন, তখন সেই ইউজারের সব ইনফরমেশন, সেশন, কুকি ইত্যাদি সম্পর্কে ত ভিউকে জানাতে হবে, কাজেই, ভিউ ফাংশনের একটি নিয়ম আছে, ভিউ ফাংশনের প্রথম আর্গুমেন্ট নির্ধারিত থাকবে [request] প্যারামিটারের জন্য যা জ্যাঙ্গোর মিডলওয়্যার দিয়ে দিবে, ঠিক যেমন পাইথন মেথড লিখতে প্রথম আর্গুমেন্ট self থাকা লাগে, ভিউ ফাংশনের প্রথম আর্গুমেন্টও request যার মধ্যে থাকে এক্সটারনাল বিশ্ব সম্পৃক্ত উপরোক্ত তথ্য।&lt;/p&gt;
&lt;p&gt;একটি request URL এর মাধ্যমে জ্যাঙ্গো ভিউতে আসে, আর জ্যাঙ্গো ভিউ এর বিজনেস লজিক চালিয়ে response প্রদান করে, এর মাঝামাঝি যদি request অথবা response এর কোন পরিবর্তন আনতে হয় তাহলে [MIDDLEWARE] এর আশ্রয় নিতে হবে। উদাহরনঃ আপনি যদি আপনার ইউজারের সকল পেইজ ভিজিট টাইমসহ লিখে রাখতে চান (অর্থাৎ ডাটাবেইজে সেভ করতে চান), তাহলে আপনি একটি মিডলওয়্যার লিখবেন যা কিনা request কে ইন্টারসেপ্ট করবে ভিউতে যাওয়ার আগে এবং রিকুয়েস্টের মধ্যে থাকা ইউজার ইনফর্মেশন স্টোর করবে ডাটাবেইজে, ভিউ তৈরির সময়ে আপনার সেটা না জানলেও চলবে।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;টেম্পলেট ও কন্টেক্সট&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;বুঝলাম যে URL থেকে প্যাটার্ন ম্যাচ করে ভিউ ফাংশনের কাছে যাওয়া, কিন্তু ইউজারকে তো কিছু একটা প্রেসেন্ট করতে হবে, আর ঠিক সেই কাজটিই হয় টেম্পলেটে। টেমপ্লেট লেয়ার হল একটি পেইজের ডিজাইন, অথবা একটি ইমেইলের ফরম্যাট, যার মাঝে রয়েছে ছোট কিছু গ্যাপ, যা ভিউ থেকে আসে। যদি আপনি পি এইচ পি প্রোগ্রামার হয়ে থাকেন, তাহলে টেমপ্লেটকে বলতে পারেন পি এইচ পি পেইজ, যা এইচ টি এম এল চিনে, আবার চিনে কিছু লজিক। কিন্তু জ্যাঙ্গো টেমপ্লেট পিএইচপি থেকে কম বুদ্ধিমান, অর্থাৎ এখানে আপনি শুধু গুটিকয়েক লজিক পাচ্ছেন, পুরো প্রোগ্রামিং ল্যাঙ্গুয়েজ না। ধরুন আপনি একটি পেইজ বানাচ্ছেন যা সমস্ত ব্লগ পোস্টের লিস্ট দেখাবে এইচটিএমএলে, তখন আপনি রিকুয়েস্ট পাঠাবেন, যা ইউ আর এল দিবে ভিউকে, ভিউ একটা লিস্ট পাঠাবে একটি ভেরিয়েবলে ভরে এবং তাকে বেধে দিবে একটি টেম্পলেটের সাথে, টেম্পলেটে থাকবে টেবল নির্মাণের সব এইচটিএমএল, কিন্তু টেবলের &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt; এর মাঝে থাকবে একটি শূন্য মার্কার, যা হল ভিউ ও টেম্পলেটের মধ্যে শেয়ার করা ডাটা, একে আমরা বলি কন্টেক্সট ভেরিয়েবল [CONTEXT], ভিউ হল খাটি পাইথন, পাইথনের সব কাজ আপনি ভিউতে করতে পারবেন, আর টেমপ্লেট হল একটি স্ট্রিং এর ভাণ্ডার যা পুরপুরি স্ট্যাটিক, ভিউ থেকে পাওয়া কন্টেক্সট ব্যতিরেকে, আর এরা বাস করে ১) তার অ্যাপ এর ভিতর [Templates] ফোল্ডারের ভিতর ওই অ্যাপ এর নামে ফোল্ডারের ভিতর (উদাহরণ- /student/templates/students/&amp;lt;?&amp;gt;.html) অথবা settings.py তে উল্লেখ্ করা ফোল্ডার লিস্টের কোন একটিতে। এই উদ্ভট (&amp;lt;app&amp;gt;/templates/&amp;lt;app&amp;gt;) নাম কেন? কারণ, যদি দুইটি অ্যাপে list.html নামক দুইটি টেমপ্লেট থাকে তাহলে তাদের আলাদা কিভাবে করবেন?&lt;/p&gt;
&lt;p&gt;টেমপ্লেট ব্যবহার করে কিছু নন-পাইথন কোড, যেমন, CSS, JavaScript ইত্যাদি, এদের বেশিরভাগই স্ট্যাটিক, আর সেগুলোর জন্য রয়েছে বিশেষ ব্যবস্থা, টেম্পলেটের মতই, এরা থাকে (&amp;lt;app&amp;gt;/static/&amp;lt;app&amp;gt;) ফোল্ডারের ভিতর অথবা settings.py যেখানে বলে সেখানে, এরা আবার স্ট্যাটিক বিধায় ভিন্ন সার্ভার দ্বারাও সারভড হতে পারে, কাজেই এদেরকে সব জায়গা থেকে টেনে এক জায়গায় আনাটাও দরকার হয়ে পড়ে, (অর্থাৎ, /static/ ফোল্ডারটি হয়ত ভিন্ন কোন হাল্কা সার্ভার দ্বারা সারভড হবে), সেই কাজের জন্যেও রয়েছে জ্যাঙ্গোর বেশ কিছু ব্যবস্থা।&lt;/p&gt;
&lt;p&gt;টেমপ্লেট এর ভিতর আপনি সাব-টেমপ্লেট ইঞ্জেক্ট করতে পারেন, তাহলে আপনার comment.html শুধু কমেন্ট ফর্ম রাখবে এবং অন্য সমস্ত পেইজে আপনি সেই সাব-টেমপ্লেটকে ইনক্লুড করে দিবেন। আবার, এর উলটাও হয়, অর্থাৎ, আপনি একটি মহা টেমপ্লেট বানাতে পারেন যার ভিতর কিছু ব্লক খালি থাকবে, আর কিছু পাটি টেমপ্লেট বানিয়ে ওই মহা টেম্পলেটের সাথে এমনভাবে বেধে দিবেন যেন পাটি টেমপ্লেট শুধু অই ব্লকের ভিতরেই থাকে, আর বাদবাকি সব ওই মহা টেমপ্লেট থেকেই আসবে। অর্থাৎ আপনার base.html যদি থাকে যেখানে আপনি হেডার, ফুটার, জাভাস্ক্রিপ্ট ইত্যাদি লিখেন এবং ভিতরে কিছু এলাকা মার্ক করে রাখেন কন্টেন্টের জন্য, তাহলে বিভিন্ন পেইজ টেমপ্লেট শুধু অই মার্ক করা এলাকাই লিখবে, আর উপর নিচ, ডাইন বামের সমস্ত কথা বার্তা সেই টেমপ্লেট থেকে আসবে। এক বলে টেমপ্লেট ইনহেরিট্যান্স, অত্যন্ত শক্তিশালী একটি কনসেপ্ট।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ডাটাবেইজ ও ফর্ম&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ফর্ম থেকে মনে পরল, ডাটাবেইজ সম্পর্কে তো এখনো বলা হয়নি। জ্যাঙ্গো একটি ফুল স্ট্যাক ফ্রেমওয়ার্ক, অর্থাৎ আপনার ডাটাবেইজ ডিজাইনেও এর কিছু বলার আছে। আর সে কাজে আপনাকে জ্যাঙ্গো সাহায্য করে ও আর এম এর মাধ্যমে। [ORM] কি? জ্যাঙ্গোর ক্ষেত্রে এটি হল এস কিউ এলের উপর একটি র‍্যাপার যা আপনার পাইথন কোডকে এস কিউ এলে পরিণত করে ডাটাবেইজের সাথে কথা বলতে সহায়তা করবে, তা সৃষ্টি/বিনাশ হোক, আর খোজ হোক। আর ওই settings.py তে আপনি যেই ডাটাবেইজের কথা বলবেন, জ্যাঙ্গো সেই ডাটাবেইজের ফ্লেভারের এস কিউ এল ব্যবহার করবে, মানে আপনি পোস্টগ্রেস, মাই এস কিউ এল অথবা অরাকল যাই ব্যবহার করুন না কেন, পাইথন কোড একটিই হবে। এদেরকেই আমরা বলি [MODEL] যা থাকে models.py এর ভিতর।&lt;/p&gt;
&lt;p&gt;অন্যভাবে, মডেলের মাধ্যমে আপনার ডাটাবেইজ টেবল হয় পাইথন ক্লাস, কুয়েরী হয় মেথড আর সৃষ্টি/ধ্বংস হয় কমান্ড। তা যেই ডাটাবেইজ (স্ট্রাকচারড) হোক না কেন, জ্যাঙ্গো সাপোর্ট করলেই হবে। জ্যাঙ্গো ব্যাকগ্রাউন্ডে পাইথন থেকে এস কিউ এলে পরিণত করে আপনার কাজ করে নেয়, এবং রেজাল্টের ক্ষেত্রে উলটাটাও করে। এর অর্থ, আপনি যদি আপনার সব পোষ্ট দেখতে চান কোন সাইটে, তাহলে যান এর জন্য অ্যাসাইন করা URL এ, URL ডাকবে ভিউকে, ভিউ তখন মডেলের সাহায্য নিয়ে একটি মেথড কল করবে যা কিনা ডাটাবেইজ থেকে ডাটা পুল করে তাকে পাইথনিয় করে ভিউকে দিবে এবং ভিউ সে ডাটাকে কন্টেক্সট এ ভরে দিয়ে দিবে টেম্পলেটকে।&lt;/p&gt;
&lt;p&gt;জ্যাঙ্গো যে শুধু এস কিউ এলকে ঢেকে আপনাকে পাইথন বাইন্ডিং দেয় তা নয়, আপনি সরাসরি এস কিউ এলেও কাজ করতে পারবেন। ওই, একটি ফাংশনকে র‍্যাপ করে দিলেই হবে। ডাটাবেইজের সাথেই জড়িত একটি উপাদান হল ফর্ম। ফর্ম আপনি এইচটিএমএল এ লিখতে পারেন। ঠিক যেমন ডাটাবেইজ বানাতে পারবেন এস কিউ এলে, কিন্তু জ্যাঙ্গো যেমন এস কিউ এল/পাইথন বাইন্ডিং করে [ORM] এর মাধ্যমে, ঠিক তেমনি এইচটিএমএল ফরম/পাইথন বাইন্ডিং ঘটায় এর ফর্ম এ পি আই দিয়ে। এর কাজ একটাই, ক্লাস থেকে এইচটিএমএল, আর ইনটেলিজেন্টলি বুঝে উঠা যে কাকে কি ফিল্ড দিবে, যদিও আপনি একে ওভার রাইড করতে পারেন খুব সহজেই, কিন্তু আমি মনে করি, এইচটিএমএল বড় ফর্মকে ময়লা করে দেয়, পাইথন ব্যবহার করা অনেক সহজতর। এমনকি যদি আপনি একাধিক ফর্মকে একত্রে বানাতে চান অথবা একটি ফর্মের পেটের ভিতর একাধিক সাব-ফরম চান, তাহলে তাও সম্ভব formseter মাধ্যমে। আপনি শুধু চিন্তা করবেন অবজেক্ট ওরিয়েন্টেড ভাবে, তা ডাটাবেইজ হোক, আর ফর্ম হোক, অথবা ফরমসেট হোক, জ্যাঙ্গো সব ম্যানেজ করে দিবে এবং আপনার ওয়ার্ক ফ্লো থাকবে একমুখী।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;টেম্পলেট ট্যাগ ও ফিল্টার&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;আমি একটু আগে বলেছি যে জ্যাঙ্গো টেম্পলেট অনেক কিছুই চিনে না, এর লজিক খুব সীমিত, তাহলে কি? ভালো প্র্যাকটিস হল, ভিউ কেই সব দায়িত্ব ও কর্তব্য দিয়ে দেওয়া এবং টেম্পলেটকে শুধু মাত্র প্রেজেন্টেশনের কাজে নিয়জিত করা। কিন্তু যদি আপনি চান, তাহলে টেম্পলেট ট্যাগ ও ফিল্টার দিয়ে আপনি পারবেন টেম্পলেটের ভিতর ফাংশন লিখতে, এমনকি নিজের তৈরী ট্যাগ বানাতে, যদিও এগুলোর প্রয়োজনীয়তা অতটা না, তবে বেশ মজার কাজই করা যায় সেগুলো দিয়ে। {% recent_posts 5 2005 %} হয়ত আপনাকে ২০০৫ সালের সর্বশেষ পাঁচটি পোস্ট দিবে।&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;strong&gt;এডমিন ও কিছু ব্যবহৃত অ্যাপ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;এতক্ষণ তো অনেক কথাই বলা হল মডেল নিয়ে, ভিউ নিয়ে, টেম্পলেট নিয়ে, কিন্তু খুবই ভালো কি হত না যদি আপনি আপনার অ্যাপ এর প্রোটোটাইপ করতেন শুধু মডেল দিয়ে, আর আপনার জন্য অটোমেটিক সব তৈরী হয়ে যেত? কারণ এত যখন গঠন ও অবকাঠামো, তা তো হতেই পারে। আর ঠিক সেই কাজটিই করে জ্যাঙ্গো এডমিন, গুটি কয়েক কোড থেকে আপনাকে দিবে সুন্দর একটি অ্যাপ, যা অ্যাড, রিমুভ, আপডেট, সার্চ, ফিল্টার, ব্যাচ অ্যাকশান তো করেই, সাথে সাথে আপনাকে দেয় সাইট ম্যানেজমেন্ট সিস্টেম, টাইমলাইন ও অথেন্টিকেশন/অথরাইজেশন আর একটি সুন্দর থীম। আপনার অ্যাপকে প্রোটোটাইপের জন্য এটি অত্যন্ত উপযোগী।&lt;/p&gt;
&lt;p&gt;যেহেতু জ্যাঙ্গো অ্যাপ দ্বারা মডিউলারিটি আনে, কাজেই আপনি অন্যের তৈরী অ্যাপের মাধ্যমে কাজ কমিয়ে নিতে পারবেন আপনার। উদাহরণসরূপ, জ্যাঙ্গো এডমিন একটি অ্যাপ, অথেন্টিকেশন অ্যাপ, কমেন্টিং অ্যাপ, জিও-জ্যাঙ্গো (GIS এর জন্য বেশ ভালো একটি অ্যাপ)। বাহ্যিক অ্যাপ রয়েছে, জ্যাঙ্গো ট্যাগ, জ্যাঙ্গো রেজিস্ট্রেশন, জ্যাঙ্গো কমান্ড এক্সটেনশন ইত্যাদি। আপনি নিজেই হয়ত নিজের অ্যাপকে রি-ইউজ করতে পারবেন। শুধু ফোল্ডারকে ফেলে দিন পাইথন ক্লাস পাথে, settings.py তে রেজিস্টার করুন, মাস্টার URL ফাইলে অ্যাড করুন, আর কাজ শেষ!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;সিগন্যাল&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;শেষ করার আগে আমার নতুন করে শিখা একটি বিষয় নিয়ে কথা বলতে চাইব, আর তা হল সিগনাল। সিগনাল হল জ্যাঙ্গো পাব/সাব প্রণালি। অর্থাৎ, ধরুন আপনি চান যে যখনি কেউ কোন কমেন্ট সেইভ করবে, তখন যার পোস্টে কমেন্ট করা হল তার কাছে মেইল চলে যাবে। এটা সোজা যদি আপনি ওভার রাইড করেন কমেন্টের সেইভ মেথডকে, কিন্তু যদি সেই কমেন্ট অ্যাপটি আপনার না হয় তাহলে? আপনি কি কষ্ট করবেন আবার সেই টেস্ট কেইস রান করে কাজ করার? ভালো হত না যদি আপনি জ্যাঙ্গোকে বলতেন, &amp;ldquo;যখনি কোন কমেন্ট সেইভ হয়, তখন অই সেইভ করার কমেন্ট যার উপর করা হয়েছে সেই অবজেক্টের মালিককে একটি মেইল করে দিন&amp;rdquo; আর জ্যাঙ্গো শুনবে কখন কোন কমেন্টে সেইভ হয়, আর হওয়া মাত্রই মেইল! এই প্যাটার্নকে বলে অবজারভার প্যাটার্ন এবং জ্যাঙ্গোতে এটি আসে বিল্টিন অবস্থাতে, শুধু সেইভ না, আপনি টেম্পলেট রেন্ডারিং, রিকুয়েস্ট প্রাপ্তি, নতুন টেবল সৃষ্টি, সব জায়গাতেই সিগনাল ব্যবহার করতে পারবেন। শুধু মনে রাখতে হবে, &amp;ldquo;কি হতে হবে?&amp;rdquo;, &amp;ldquo;যাকে হতে হবে তা হলে কি করতে হবে?&amp;rdquo;, কি হতে হবে হল সিগনাল, আর কি করতে হবে হল একটি ফাংশন যা জ্যাঙ্গো নিজেই ম্যানেজ করে নেয়। আর আপনি নিজেও সিগন্যাল বানাতে পারবেন। যেমন &amp;ldquo;স্টক কমে গেল&amp;rdquo;, &amp;ldquo;ইউজার ১০০ তম পোষ্ট প্রদান করল&amp;rdquo;, &amp;ldquo;পিজা রেডি হল&amp;rdquo; ইত্যাদি।&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;শুভ নববর্ষ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;আমি এই লম্বা পোস্টটিতে কোড থেকে যথা সম্ভব দুরে থেকে জ্যাঙ্গোকে চিনাবার চেষ্টা করেছি। সব ঠিক থাকলে এর একটি কোডেড ভার্সন বের করব খুব শীঘ্র। তখন হয়ত কোড বেশি প্যাঁচাল কম ধারা ফলো করব, আশা করি এটি পড়ে কেউ না কেউ উপকৃত হবেন, সকলকে শুভ নববর্ষ!&lt;/p&gt;</regular-body><tag>django</tag></post><post id="98953659190" url="http://www.tumblr.com/blog/code-shoily/submissions?98953659190" url-with-slug="http://www.tumblr.com/blog/code-shoily/submissions?98953659190" type="answer" date-gmt="2014-10-02 05:31:52 GMT" date="Thu, 02 Oct 2014 11:31:52" unix-timestamp="1412227912" format="html" reblog-key="NzeXA1x8" slug="where-would-you-most-like-to-visit-on-your-planet" state="submission" is_reblog="false" tumblelog="code-shoily"><question>WHERE WOULD YOU MOST LIKE TO VISIT ON YOUR PLANET?</question></post><post id="98634898840" url="http://code-shoily.tumblr.com/post/98634898840" url-with-slug="http://code-shoily.tumblr.com/post/98634898840/ম-য-ক-র-অথব-ল-য-ঙ-গ-য়-জ-র-প-ল-স-ট-ক-স-র-জ-র" type="regular" date-gmt="2014-09-28 14:17:00 GMT" date="Sun, 28 Sep 2014 20:17:00" unix-timestamp="1411913820" format="html" reblog-key="imwg8wsN" slug="ম-য-ক-র-অথব-ল-য-ঙ-গ-য়-জ-র-প-ল-স-ট-ক-স-র-জ-র" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>ম্যাক্রো, অথবা ল্যাঙ্গুয়েজের প্লাস্টিক সার্জারি [ পর্ব ০ (মোটিভেশন) ]  </regular-title><regular-body>&lt;p&gt;[ আমি এখানে লিস্প ম্যাক্রো নিয়ে কথা বলছি, সি অথবা ভিজুয়াল বেসিক ম্যাক্রো না। এটা লিস্প ম্যাক্রো, যা অনেকটা ভিন্ন, আর প্রচণ্ড শক্তিশালী। ] &lt;/p&gt;
&lt;p&gt;একটি নির্দিষ্ট ডোমেইনের প্রব্লেমকে ট্যাকল করার জন্য মাঝে মাঝে ল্যাঙ্গুয়েজের সিনট্যাক্স নিয়ে এমনভাবে খেলাধুলা করা হয় যেন মনে হয় যে ওই ল্যাঙ্গুয়েজটির জন্মই হয়েছে ওই প্রব্লেমকে ট্যাকল করার জন্য। অথচ আপনি কিন্তু আপনার জানা ল্যাঙ্গুয়েজটির ফাংশন, ক্লাস, লুপ ইত্যাদি ব্যবহার করছেন, হয়ত একটু অস্বাভাবিকভাবে মাঝে মাঝে, কিন্তু ওরকম করে প্রোডুস করা কোড দেখেই বুঝা যায় তা কি করতে যাচ্ছে, হয়ত প্রচলিতভাবে আপনার ল্যাঙ্গুয়েজকে ইউজ করলে অতটা ন্যাচারাল লাগত না। এভাবে এক হাত দু'হাত করে আপনার ল্যাঙ্গুয়েজকে ওভাবে &amp;ldquo;আনন্যাচারালি&amp;rdquo; ব্যবহার করে ওই ডোমেইনের কাছে ন্যাচারাল/রীডাবল কোড প্রস্তুত করার প্যাটার্ন যখন আরও মজবুত ও প্রচলিত হয়ে ওঠে, তখন আপনি কাজ করলেন একটি ডি এস এল (ডোমেইন স্পেসিফিক ল্যাঙ্গুয়েজ) এর উপর। &lt;/p&gt;
&lt;p&gt;নীচের রুবী কোডটি দেখা যাক&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;class CreateComments &amp;lt; ActiveRecord::Migration
  def change
    create_table :comments do |t|
      t.string :commenter
      t.text :body
 
      # this line adds an integer column called `article_id`.
      t.references :article, index: true
 
      t.timestamps
    end
  end
end&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;আমি রেইলস পারি না, রুবী পারি এক আধটু, কিন্তু এই কোডটি দেখেই বুঝা যাচ্ছে যে ডাটাবেইজ টেবল সংক্রান্ত কিছু হচ্ছে। মাঝখানের অংশটি দেখে মনে হচ্ছে যে টাইপ ডিক্লেয়ার করা হচ্ছে :commenter, :body ইত্যাদি, এখন যদি ওই অংশটুকু t.string(&amp;ldquo;commenter&amp;rdquo;) অথবা t.text(&amp;ldquo;body&amp;rdquo;) লিখা হতো তাহলে কিন্তু নরমাল মেথড কল বুঝা যেত, নিঃসন্দেহে, কিন্তু এই কেইসে কি ন্যাচারাল লাগত? ডাইনামিকালি টাইপড রুবী কোডকে এমনভাবে উপস্থাপন করা হয়েছে যেন মনে হয় প্রায় এস কিউ এল। আর এমনটি সক্ষম হয়েছে রুবীর একটি বিশেষত্বের কারণে, এর মেথড কল করতে ব্রাকেট না দিলে চলে। কোড হয়ে ফ্লুয়েন্ট। এমনটি দেখা যায় অনেক রুবী ফ্রেমওয়ার্কে, রেইলস তার মধ্যে জনপ্রিয়তম।&lt;/p&gt;
&lt;p&gt;পাইথনেও এমন কিছু প্র্যাকটিস আছে, যদিও পাইথনপ্রেমীরা ওই প্র্যাকটিস কম করে (PEP8 অনেকটা তাদের বাধ্য করে কম করতে) , নীচের কোডঃ &lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
import numpy as np

ar55 = np.arange(25).reshape(5, 5)

print ar[2, 3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;কি হল? পাইথনে আবার কবে থেকে সি# এর মত জ্যাগড অ্যারে ইন্ডেক্সিং করা যায়? (না!) আরেকটু মনোযোগ দিলে বুঝা যাবে, যে এটি কোন নরমাল লিস্ট না, নামপাই এর নিজস্ব অ্যারে (নাম পাই সম্পর্কে জানতে দেখুন &lt;a href="http://goo.gl/gMkxo2" title="আমার পুরাতন এই পোস্টটি" target="_blank"&gt;http://goo.gl/gMkxo2&lt;/a&gt; ) আর যদি আপনি ar[(2,3)] টাইপ করেন তাহলে একই জবাব পাবেন। অর্থাৎ [] &lt;span&gt;অপারেটরকে ওভারলোডিং করে আপনার জন্য ন্যাচারাল একটি ফিল আনা হয়েছে নামপাই তে। পাইথন টুপল এ আপনি প্রথম ব্রাকেট না দিলেও পারেন (অর্থাৎ (&amp;ldquo;ক&amp;rdquo;, &amp;ldquo;খ&amp;rdquo;, &amp;ldquo;গ&amp;rdquo;) আর &lt;span&gt;&amp;ldquo;ক&amp;rdquo;, &amp;ldquo;খ&amp;rdquo;, &amp;ldquo;গ&amp;rdquo; একি হবে)&lt;/span&gt;, আর [] ইনডেক্সকে ওভারলোড করা যায় পাইথনে (__getitem__ দিয়ে), কাজেই [] কে টুপল চিনিয়ে ওতে দেওয়া টুপলটিকে ব্রাকেট ছাড়া ব্যবহার করে এই সিনট্যাক্সকে সিমুলেট করেছে নামপাই। &lt;/span&gt; আবার ওই অপারেটর ওভারলোডিংয়ের  মাধ্যমে ar**2 যদি আপনি টাইপ করেন, তাহলে প্রত্যেকটি এলিমেন্টকে স্কয়ার করা হয়, আপনার লিস্ট কম্প্রিহেনশন করার প্রয়োজন পরে না।&lt;/p&gt;
&lt;p&gt;আচ্ছা, ভাল কথা। এখন, আরেকটু আউট অফ দা বক্স চিন্তা করি, আপনি এই টাইপ কোড হয়ত অনেক দেখেন &lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt; 
var dropWhile = function(predicate, list) {
    var i = 0;
    while(!predicate(list[i])) {
        i += 1;
    }
    
    return list.slice(i)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;এইবার কল করা যাক&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
dropWhile(function(n) {
    if (n%2 != 0) {
        return true;
    }
    return false;
}, [12, 34, 14, 41, 5, 7, 8]);
// =&amp;gt; [41, 5, 7, 8]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;তাহলে আমরা একটি ফাংশন তৈরি করলাম যা একটি ক্লোজার (Clojure ল্যাঙ্গুয়েজ না, Closure ল্যাঙ্গুয়েজ ফিচার) নিবে, আরেকটি লিস্ট নিবে এবং ওই ক্লোজারটিকে লিস্টের একটি একটি করে এলিমেণ্ট নিয়ে নিয়ে টেস্ট করবে যে এরা বেজোড় সংখ্যা কিনা, বেজোড় না হলে ফেলে দিবে,আর প্রথম বেজোড় সংখ্যা পাওয়া মাত্রই লিস্টের পরবর্তী সমস্ত এলিমেন্ট ফিরিয়ে দিবে।&lt;/p&gt;
&lt;p&gt;জাভাস্ক্রিপ্ট এই পোস্টের মুল বিষয় নয়, কিন্তু চলুন দেখি একে কিভাবে আরও সৌন্দর্য করা যায় :p &lt;/p&gt;
&lt;p&gt;প্রথমে, প্রেডিকেট ফাংশনটিকে আমরা এক লাইনে নিতে পারতাম সরাসরি n%2 != 0 কে রিটার্ন করিয়ে। ঠিক আছে, হয়ত ম্যাপ ইউজ করা যেত লুপ এর পরিবর্তে।&lt;/p&gt;
&lt;p&gt;আচ্ছা, কোডকে কি নিচের মতো করা যাবে? (না)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt; 
var dropWhile = function(list)(predicate_code) { 
    i = 0 
    until((predicate_code with list injected) == true) { 
        i += 1 
    } return list.slice(i) 
} 
// and call it like 
dropWhile [12, 34, 14, 5, 7, 8] unless (_ % 2) == false 
    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;কোড দেখে তো একে জাভাস্ক্রিপ্ট মনে হয় না, মনে হয় স্কালা ও রুবীর অবৈধ সন্তান :p কিন্তু আমাদের এই কাজ করতে হবে জাভাস্ক্রিপ্টের মধ্যে থেকে, নতুন কোন ল্যাঙ্গুয়েজ আবিষ্কার না করে। সম্ভব? (না)&lt;/p&gt;
&lt;p&gt;জাভাস্ক্রিপ্ট সরাসরি কোড গ্রহণ করে না, তাই আমরা ফাংশন সিনট্যাক্স ব্যবহার করে ক্লোজারকে পাঠাই, আর যেহেতু ফাংশন প্রথম শ্রেণীর নাগরিক (অর্থাৎ ফাংশনকে আপনি অন্য ফাংশনের আর্গুমেন্ট হিসাবে পাঠাতে পারবেন) কাজেই তাকে পাঠিয়ে দেওয়া যে কোন ফাংশনকে কল করে dropWhile ফাংশন এবং ওই কল থেকে পাওয়া আউটপুটকে নিয়ে কাজ করে। কিন্তু আপনি কি পারবেন শুধু কোডকে পাঠাতে ফাংশন আর্গুমেন্ট হিসাবে? আর দ্বিতীয়ত, unless ও until statement যা if ও while এর ওপিঠ, Perl কিংবা Ruby তে থাকলে জাভাস্ক্রিপ্টে নেই, ঠিক যেমন when/whenever অথবা জাভা স্টাইলের forloop সিনট্যাক্স লেভেলে পাইথন অথবা রুবীতে নেই (পাইথনে enumerate আছে, কিন্তু ওটা দেখে আরটিফিসিয়াল মনে হয়, রুবীতে কি আছে এমন কিছু?) &lt;/p&gt;
&lt;p&gt;এইবার নিচের কল্পনাতিটে যাওয়া যাক&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
def unless(|body|, |if-true|, |if-false|):
    if not |body|:
       execute |if-true|
    else:
       execute |if-false|

//Afterwards...
def odd(n):
    unless i%2 == 1:
        return False

    return True
    
//This actually runs
unless(`i%2 == 1`, `return False`, `return True`)

// and places the arguments inside the code body like
"if not" + `i%2 == 1`:
    execute `return False`
"else:"
    execute `return True`
    
// The ultimate result
if not i%2 == 1:
    return False
else:
    return True
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;eval টাইপ হয়ে গেল না ব্যপার তা? আর আমরা শুনি eval is evil?&lt;/p&gt;
&lt;p&gt;আমরা কিন্তু এই সময় পর্যন্ত এমন এক প্রকার সিনট্যাক্স ও প্রোগ্রামিং প্রাকটিস নিয়ে কথা বলছি যা ল্যাঙ্গুয়েজে অনুপস্থিত, কাজেই আমরা ইভাল এর লাইনে চিন্তা করছি, ইভাল কাজ করে মূলত অগঠিত স্ট্রিং নিয়ে, আর সেখানেই যত গলদ। যদি আপনার প্রোগ্রামিং ল্যাঙ্গুয়েজ এর মুল স্ট্রাকচারি হয় এমন, যে আপনার কোডই হয় আপনার ডাটা, তাহলে কিন্তু ইভালের প্রশ্ন আসে না। তখন সিনট্যাক্স হয়ে ওঠে মূলত ডাটা স্ট্রাকচার, আর সিনট্যাক্সকে এক্সটেন্ড করা ওই ডাটার গঠনকে এক্সটেন্ড করার মতই, আর এর চেকটাও খুব সহজে সম্ভব কম্পাইলের সময়ে, রানটাইমে না। কাজেই,  এইভাবে চিন্তা করা এভিল না, বরং আপনার প্রোগ্রামিং চিন্তাকে দিবে নতুন মাত্রা। কিন্তু এর পূর্বশর্ত হল, প্রথমত, আপনার ল্যাঙ্গুয়েজকে সাপোর্ট করতে হবে ওই রকম কুংফু, আর দ্বিতীয়ত ল্যাঙ্গুয়েজটিকে হতে হবে এমন, যে এর কোডই এর ডাটা, অর্থাৎ আপনার কোডই আপনার এ এস টি (আবস্ট্রাক্ট সিনট্যাক্স ট্রি)। &lt;/p&gt;
&lt;p&gt;ওগুলো নিয়ে পরবর্তী পোস্টে বলব যখন লিস্পের একটি সূচনা দিব। &lt;/p&gt;
&lt;p&gt;ফিরে আসি ম্যাক্রোতে, ম্যাক্রো হল এমন একটি প্রক্রিয়া জার মাধ্যমে আপনি সাপোর্ট করা ল্যাঙ্গুয়েজটিকে নিজের মতো করে সাজাতে পারবেন। কোডের মধ্যে কোড করতে পারবেন, আরও পরিষ্কারভাবে বলতে গেলে, মনে করুন আপনার একাধিক কোড স্নিপেটে কিছু কমন এলিমেন্ট আছে, যা হয়ত অপারেটর, অথবা ভেরিয়েবল, ফাংশন কল ইত্যাদি, হয়ত ক্লাস অথবা ফাংশন দিয়ে এক্সটেন্ড করতে গেলে &lt;a href="http://c2.com/cgi/wiki?RavioliCode" target="_blank"&gt;রাভিওলি কোড&lt;/a&gt; হয়ে যাবে। কাজেই আপনি আটকা পরে থাকেন অনেক বেশি বয়লারপ্লেট নিয়ে। কিন্তু, ম্যাক্রো আপনাকে সক্ষম করে কোডের টেম্পলেটে কোড ইঞ্জেক্ট করে ওই কোডকে কম্পাইল করে ফাংশনের মত ব্যবহার করতে। ঠিক যেমন আপনি টেম্পলেট ব্যবহার করেন রুবী অন্ রেইলস অথবা সিম্ফনি ফ্রেমওয়ার্কে, কিন্তু কোড জেনারেশনের জন্য, স্ট্রিং নয়। মনে করুন পুরা ল্যাঙ্গুয়েজই আপনার জিনজা অথবা টুঈগ, তাও এক্সেকিউটেবল।  &lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
mail_template = """
Date: {{date|else:"now"}}

Dear {{recipients-name}},

Assalamualaikum. {{ body }}.

Sincerely-
{{sender-name}}
"""

render(template, :recipient-name "X", :sender-name "Y", :body "Macro's Rule")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;উপরের টেম্পলেটকে দেখেই বুঝা যাচ্ছে ওটা কি করবে, কিন্তু এমনটি যদি কোডিং এ, তাহলে? অনেক কিছুই কিন্তু করা যাবে। কিন্তু এই ধরনের কাজের পূর্বশর্তের জন্যে সব ল্যাঙ্গুয়েজ এমন কিছু করতে পারে না, স্কালাতে সম্ভব ২ ১০ ভার্শনের পর, হ্যাস্কেল এ করা যায়, কিন্তু সবচেয়ে ভালভাবে ও জনপ্রিয়ভাবে করে লিস্প পরিবারের ল্যাঙ্গুয়েজগুলি, আর তাও করে আসছে ১৯৬০ সাল থেকেই। আর এভাল এর এভিল দুর্নাম লিস্পের উপর পরে না কারণ এর হোমো-আইকনিসিটি, অর্থাৎ কোড = ডাটা। আর কম্পাইল টাইমেই এরর চেক হয়ে যায়। &lt;/p&gt;
&lt;p&gt;আমার আজকের পোষ্ট মূলত মোটিভেশন দেয়া ম্যাক্রো বিষয়ে। লিস্পের এই কালচার অন্য ল্যাঙ্গুয়েজে অনুপস্থিত তাই শুধু এই কনসেপটের উপস্থিতিই যথেষ্ট লিস্প শিখার জন্য (আরও অনেক অনেক কারণ আছে আপনাকে লিস্প শিখানর জন্যে) । আমার পরবর্তী পোস্ট থাকবে লিস্পের বেসিক টিউটোরিয়াল নিয়ে, আমি একটি পুরাতন লিস্প (স্কিম) ও নতুন লিস্প (ক্লোজার, এইবার ল্যাঙ্গুয়েজ Clojure) নিয়ে মূলত আগাবো। &lt;/p&gt;
&lt;p&gt;শেষ করার আগে কিছু লিস্প কোড দেখিয়ে যাই (Clojure)&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
;; SQL Korma: &lt;a href="http://sqlkorma.com/" target="_blank"&gt;http://sqlkorma.com/&lt;/a&gt;

(select users
 (fields :first)
 (with email
   (fields :email) ;; the context is now email.*
   (where {:email [like "%_test%"]})))

(update users
  (set-fields {:status "active"
               :beta false})
  (where {:visits [&amp;gt; 10]}))
  
(intersect
  (queries (subselect users
             (where {:id [in [1 7]]}))
           (subselect users
             (where {:id 1}))
           (subselect users
             (where {:id 1})))
  (order :first))

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
;; Hiccup: &lt;a href="https://github.com/weavejester/hiccup" target="_blank"&gt;https://github.com/weavejester/hiccup&lt;/a&gt;
(defn hello []
  [:div {:class "well"}
    [:h1 {:class "text-info"} "Hello Hiccup and AngularJS"]
    [:div {:class "row"}
      [:div {:class "col-lg-2"}
      (label "name" "Name:")]
    [:div {:class "col-lg-4"}
      (text-field {:class "form-control" 
                   :ng-model "yourName" 
                   :placeholder "Enter a name here"} 
        "your-name")]]
   [:hr]
   [:h1 {:class "text-success"} 
        "Hello {{yourName}}!"]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
(defproject algorithms-in-clojure "0.1.0-SNAPSHOT"
  :description "Implementation of various algorithms with Clojure"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :main algorithms-in-clojure.core
  :profiles {:dev {:plugins [[lein-midje "LATEST"]
                             [codox "LATEST"]]}}
  :dependencies [[org.clojure/clojure "1.6.0"]
                 [midje "LATEST"]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="prettyprint"&gt;
(fact "2 * 2 equals 4"
  (* 2 2) =&amp;gt; 4)

(fact "Insertion sort is done right"
  (insertion-sort '(2 4 0 2 1 0 0) &amp;lt;) =&amp;gt; '(0 0 0 1 2 2 4)
  (insertion-sort '(2 4 0 2 1 0 0) &amp;gt;) =&amp;gt; '(4 2 2 1 0 0 0))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;সবই কিন্তু একটি ল্যাঙ্গুয়েজেই করা।&lt;/p&gt;</regular-body><tag>Lisp</tag><tag>macro</tag><tag>programming</tag><tag>polyglot</tag></post><post id="98634305870" url="http://code-shoily.tumblr.com/post/98634305870" url-with-slug="http://code-shoily.tumblr.com/post/98634305870/lisp-has-jokingly-been-called-the-most" type="quote" date-gmt="2014-09-28 14:08:00 GMT" date="Sun, 28 Sep 2014 20:08:00" unix-timestamp="1411913280" format="html" reblog-key="uenLsoeZ" slug="lisp-has-jokingly-been-called-the-most" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>Lisp has jokingly been called &amp;ldquo;the most intelligent way to misuse a computer&amp;rdquo;. I think that description is a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts.</quote-text><quote-source>&lt;a href="http://www.cs.utexas.edu/~EWD/" target="_blank"&gt;&lt;em&gt;&lt;u&gt;Edsger Dijkstra&lt;/u&gt;&lt;/em&gt;&lt;/a&gt;</quote-source><tag>quote</tag><tag>lisp</tag><tag>computer-science</tag></post><post id="98377556475" url="http://code-shoily.tumblr.com/post/98377556475" url-with-slug="http://code-shoily.tumblr.com/post/98377556475/its-a-bit-late-but-my-talk-at-pycon-2014" type="video" date-gmt="2014-09-25 09:31:00 GMT" date="Thu, 25 Sep 2014 15:31:00" unix-timestamp="1411637460" format="html" reblog-key="jEUYrqdM" slug="its-a-bit-late-but-my-talk-at-pycon-2014" state="published" is_reblog="false" tumblelog="code-shoily"><video-source>https://www.youtube.com/watch?v=OcSrJTdNlPQ&amp;feature=youtu.be</video-source><video-caption>&lt;p&gt;It&amp;rsquo;s a bit late but.. my talk at PyCon 2014.&lt;/p&gt;</video-caption><video-player>&lt;iframe width="400" height="225"  id="youtube_iframe" src="https://www.youtube.com/embed/OcSrJTdNlPQ?feature=oembed&amp;amp;enablejsapi=1&amp;amp;origin=http://safe.txmblr.com&amp;amp;wmode=opaque" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;</video-player><video-player max-width="500">&lt;iframe width="500" height="281"  id="youtube_iframe" src="https://www.youtube.com/embed/OcSrJTdNlPQ?feature=oembed&amp;amp;enablejsapi=1&amp;amp;origin=http://safe.txmblr.com&amp;amp;wmode=opaque" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;</video-player><video-player max-width="250">&lt;iframe width="250" height="141"  id="youtube_iframe" src="https://www.youtube.com/embed/OcSrJTdNlPQ?feature=oembed&amp;amp;enablejsapi=1&amp;amp;origin=http://safe.txmblr.com&amp;amp;wmode=opaque" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;</video-player><tag>talk</tag><tag>pycondhaka2014</tag><tag>python</tag><tag>video</tag></post><post id="97817887935" url="http://code-shoily.tumblr.com/post/97817887935" url-with-slug="http://code-shoily.tumblr.com/post/97817887935/এক-ধ-ক-ল-য-ঙ-গ-য়-জ-ক-ন-শ-খব-ন" type="regular" date-gmt="2014-09-18 16:40:00 GMT" date="Thu, 18 Sep 2014 22:40:00" unix-timestamp="1411058400" format="html" reblog-key="KUmnzJKj" slug="এক-ধ-ক-ল-য-ঙ-গ-য়-জ-ক-ন-শ-খব-ন" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>একাধিক ল্যাঙ্গুয়েজ কেন শিখবেন?</regular-title><regular-body>&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;A language that doesn&amp;rsquo;t affect the way you think about programming is not worth knowing.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;- Alan Perlis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;প্রোগ্রামিং ল্যাঙ্গুয়েজ হল কম্পিউটারকে দেওয়া ইন্সট্রাকশন যা ফলো করে কম্পিউটার আপনার উদ্দেশ্যপূর্ণ করে। আপনি যা ইন্সট্রাকশন দিবেন কম্পিউটার সেই অনুযায়ীই কাজ করবে, কতটুকু দ্রুততার সাথে অথবা কতটুকু নির্ভুলতার সাথে করবে তা নির্ভর করে মূলত প্রবলেম ডোমেইনের উপর এবং আপনি কিভাবে আপনার এলগরিদমকে অনুবাদ করেছেন প্রোগ্রামিং ল্যাঙ্গুয়েজে তার উপর। কিছু কিছু সময়ে আপনার ব্যবহার করা প্রোগ্রামিং ল্যাঙ্গুয়েজও ভূমিকা পালন করে সমাধানের দ্রুততা ও নির্ভুলতার উপর। দ্রুততার উপর এ কারণে যে গঠনতান্ত্রিকভাবে কিছু ল্যাঙ্গুয়েজ খুব দ্রুত প্রোগ্রামের জন্ম দেয় এবং কিছু ল্যাঙ্গুয়েজ আপনার স্বাচ্ছন্দ্যকে অথবা কোন নির্দিষ্ট ডোমেইনের সমস্যা সমাধানের জন্য দ্রুততাকে ত্যাগ করে সহজবোধ্যতার দিকে ঝুঁকে। সেই কারণেই হয়ত আপনি পি এইচ পি দিয়ে তৈরী সিস্টেম প্রোগ্রাম অথবা সি দিয়ে তৈরী ওয়েব আপ্লিকেশন দেখবেন কম। যদিও এই দুই ল্যাঙ্গুয়েজই হয়ত কিছুটা ভূমিকা পালন করতে পারে উভয় ডোমেইনেই, কিন্তু সিংহভাগ ভূমিকা খুবই কম।&lt;/p&gt;
&lt;p&gt;তাহলে যদি আপনি জানেন যে আপনি একজন দক্ষ সিস্টেম প্রোগ্রামার এবং আপনি কখনই হয়ত ওয়েব প্রোগ্রামিং করবেন না, অথবা আপনি স্ক্রিপ্ট লিখতে ভালবাসেন এবং তুখড় দ্রুতি আপনার প্রয়োজন নেই, তাহলে আপনার কতটুকু প্রয়োজন পি এইচ পি/পাইথন (প্রথম ক্ষেত্রে) অথবা সি/সি++ অথবা গো (দ্বিতীয় ক্ষেত্রে) শিখার? আপনার ইন্সট্রাকশনকে ফীড করার একটি মাধ্যম পেলেই তো হল।&lt;/p&gt;
&lt;p&gt;আসলে প্রোগ্রামিং ল্যাঙ্গুয়েজ শুধু ওই ইন্সট্রাকশন প্রকাশের উপায় আপনাকে শিখায় না, আপনার মস্তিষ্ককে প্রস্তুত করে একটি নির্দিষ্টভাবে চিন্তা করতে। তাত্ত্বিকভাবে কম্পিউটার চিনে ০ আর ১। আপনি যেভাবেই প্রোগ্রাম লিখুন না কেন, সেই ০ আর ১ এর বিভিন্ন বিন্যাস ও সমাবেশেই আপনার পরিশ্রমের ফলশ্রুতি শেষ পর্যন্ত দাঁড়ায়। আর আপনি কিভাবে চিন্তা করে, সম্পূর্ণ সমস্যাকে কিভাবে বিভাজন, বিন্যস্ত, সজ্জিত ও যুক্ত করে বোধগম্য (যে জানে তাঁর কাছে) করে কিছু ফাইলের সমষ্টির সৃষ্টি করবেন এবং তা কিভাবে ০ ও ১ এর কোন একটি বিকট সমাবেশে পরিণত হবে, সেই কলাই আপনাকে আপনার প্রোগ্রামিং ল্যাঙ্গুয়েজ শিখায়। আর একেকটি প্রোগ্রামিং ল্যাঙ্গুয়েজের দর্শন একেক রকম। আর আপনি যত বেশি দর্শনের সাথে পরিচিত হবেন, আপনার কলাও হবে তত প্রাচুর্যময়।&lt;/p&gt;
&lt;p&gt;উদাহরণস্বরূপ বলা যায়, অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং আপনাকে শিখায়, বিশেষ্য পদ নিয়ে খেলা করতে, প্রোগ্রামিং করবেন আপনি আপনার ডাটাকে অবজেক্ট হিসাবে বিবেচনা করে, যার থাকবে প্রপেরটি ও আচরণ, যাকে আপনি পাঠাতে পারবেন বার্তা। ওই বার্তার প্রেক্ষিতে অবজেক্ট এর অবস্থার পরিবর্তন হবে ও আপনার প্রোগ্রাম হবে অগ্রসর। যেমনঃ একটি গেম এ যদি প্লেয়ার অবজেক্ট থাকে এবং এর থাকে লাইফ, পাওয়ার এবং পয়েন্ট নামে তিনটি প্রপার্টি, তাহলে, এর উপর আট্যাক নামে একটি বার্তা পাঠান যায় যা একটি প্লেয়ারকে পাঠান হবে অন্য প্লেয়ার থেকে, আর অই বার্তার ভিতরকার এলগরিদম হবে এমনটি, যে দুই প্লেয়ারের পাওয়ার অনুযায়ী, দুই প্লেয়ারের লাইফ কমতে থাকবে, এবং যার লাইফ আগে শূন্য হবে, তার সমপরিমাণ পয়েন্ট যাবে অন্য প্লেয়ারের কাছে।&lt;/p&gt;
&lt;p&gt;ফাংশনাল প্রোগ্রামিং সবকিছুকে দেখে ক্রিয়া অনুযায়ী, বিশেষ্য এখানে গৌণ। এবং কারও কোন প্রপার্টি পরিবর্তন হয় না। আট্যাক এখানে মুখ্য, যা দুইটি ডাটা স্ট্রাকচার নিবে এবং একই এলগরিদমের মাধ্যমে বাড়াবে/কমাবে কাঠাম দুইটিকে, কেবলমাত্র, তাঁদের অবস্থা সরাসরি পরিবর্তন না করে, তাঁদের অবস্থা পরিবর্তিত হলে কেমন হত সেই হিসাবে একটি ক্লোন পাঠাবে, আসল ডাটা থাকবে অপরিবর্তিত। আর ওই ফিরে পাওয়া নতুন অবকাঠামো হবে নতুন ডাটা। এমন করে সর্বশেষ যে কাঠামো থাকবে সেটি হবে আমাদের দুই প্লেয়ারের সর্বশেষ অবস্থা।&lt;/p&gt;
&lt;p&gt;অনেকটা এরকম, ১৯৮৮ সালে আমার পছন্দনিয় সিনেমা যা ছিল, তা কিন্তু আজ দেখলে ভালো লাগবে না, আর এখন যা আমার ভালো লাগে, তা তো ১৯৮৮ তে ছিলই না, সিনেমা হয়ত না, আমার মানসিকতা তও না-ই, এখন, আমাকে যদি অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিংয়ের আলোকে দেখা যায়, তাহলে আমার পছন্দের সিনেমা হবে একটি প্রপার্টি, যার মান সময়ের সাথে সাথে পরিবর্তিত হয়, কিন্তু ফাংশনাল প্রোগ্রামিংয়ের আলোকে, সময়ের সাথে সাথে আমার সম্পূর্ণ আইডেন্টিটির একটি করে কপির সৃষ্টি হয়, যা আমার সর্বশেষ সময়ের &amp;ldquo;আমাকে&amp;rdquo; নির্দেশ করে। এই টপিকের আলোচ্য বিষয় না, কিন্তু গারবেজ কালেক্টর থাকার কারণে অত বেশি লোড পরবে না মেমরির উপর।&lt;/p&gt;
&lt;p&gt;আরেকটা আছে লজিক প্রোগ্রামিং, যা সত্য/মিথ্যা স্টেটমেন্ট এর উপর ভিত্তি করে প্রোগ্রামের দিক নির্দেশনা চালায়। আর এই মন্ত্রে বিশ্বাসী ল্যাঙ্গুয়েজগুলির লাইন থাকে যেন একেকটি ঘোষণা। যেমন &amp;ldquo;ক&amp;rdquo; হল &amp;ldquo;খ&amp;rdquo; এর বাবা, &amp;ldquo;গ&amp;rdquo; হল &amp;ldquo;ক&amp;rdquo; এর ভাই। অতএব &amp;ldquo;গ&amp;rdquo; হল &amp;ldquo;খ&amp;rdquo; এর চাচা।&lt;/p&gt;
&lt;p&gt;আর প্রসিডিউরাল প্রোগ্রামিং তো আছেই, যাকে আমি বলি, অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং যেখানে কোন অবজেক্ট নেই, অথবা ফাংশনাল প্রোগ্রামিং যা তত্ত্ব মানে না।&lt;/p&gt;
&lt;p&gt;যাই হোক, সি, প্যাস্কাল ইত্যাদি প্রসিডিউরাল প্রোগ্রামিং ল্যাঙ্গুয়েজ রয়েছে, জাভা, আইফেল, স্মলটক, রুবী, পাইথন ইত্যাদি অবজেক্ট ওরিয়েন্টেড হিসাবে প্রসিদ্ধ, আর ফাংশনাল প্রোগ্রামারদের জন্য রয়েছে লিস্পসমূহ, ও-কামেল (এম এল সমূহ), হ্যাস্কেল, এরলাং ইত্যাদি। প্রলগ হল একটি লজিক ল্যাঙ্গুয়েজ। আবার কিছু ল্যাঙ্গুয়েজ, যেমন স্কালা, কমন লিস্প, এফ শার্প রয়েছে যারা অবজেক্ট ওরিয়েন্টেড ও ফাংশনাল দুটোই, যদিও বর্তমান যুগের অন্যান্য ল্যাঙ্গুয়েজের মত নিজেকে ফাংশনাল বলে দাবী বেশি করে।&lt;/p&gt;
&lt;p&gt;আবার এদের মধ্যে কোন কোন ল্যাঙ্গুয়েজ স্ট্যাটিকালি টাইপড, যেমনঃ জাভা, স্কালা, সি/সি++, অর্থাৎ আপনার সমস্ত ডাটার টাইপ হতে হবে পূর্ব ঘোষিত। আর যাকে জা খুশি আসাইন করতে পারেন ডাইন্যামিক্যালি টাইপড ল্যাঙ্গুয়েজে, টাইপ সরাসরি দেওয়া লাগে না, যেমন, রুবী, পাইথন, ক্লোজার, পি এইচ পি।&lt;/p&gt;
&lt;p&gt;এতগুলি ল্যাঙ্গুয়েজের কথা যে বললাম, এদের অনেকেই কিন্তু জেনারেল পারপাস, অর্থাৎ এদের দিয়ে যে কোন কাজ করানো যায়। এদের নিজস্ব প্রোগ্রামার বেইস আছে হোল এদের কোড দর্শন গুণে। একেকজন একেকভাবে চিন্তা করতে ভালবাসে, আর তার চিন্তার সাথে যখন তার ল্যাঙ্গুয়েজ এর চিন্তা মিলে যায়, তখন সেই ল্যাঙ্গুয়েজে সে হয়ে উঠে প্রডাক্টিভ। আবার প্রতিটি ল্যাঙ্গুয়েজ কমিউনিটির আচে নিজস্ব কিছু আচার। যেমন, রুবী প্রোগ্রামাররা টেস্টিং ও ডি এস এল এ ঝোঁক বেশি দেন। লিস্প প্রোগ্রামাররা মেটা প্রোগ্রামিং ভালবাসেন, জাভা প্রোগ্রামাররা ডিজাইন প্যাটার্নে চিন্তা করতে ভালবাসেন। আমি মূলত পাইথন প্রোগ্রামার, কিন্তু এক সময়ে আমার কিছু রুবী প্রোগ্রামারদের সাথে যোগাযোগ হয়, আর কিছুদিন পর তাঁদের দ্বারা ইন্সপায়ারড হয়ে আমি টেস্টিং এর প্রতি আকৃষ্ট হই যা আজ অবধী কম বেশী চলছে। লিস্পের সান্নিধ্যে আসার পর (ক্লোজারের মাধ্যমে) আমি পরিচিত হই মেটা প্রোগ্রামিঙয়ের সাথে, আর কিছু ফাংশনাল প্রোগ্রামিং কনসেপ্টের সাথে, যদিও আমি কেবল কিছুদিন হল প্রফেসনালী ক্লোজার করছি, এর আগ পর্যন্ত আমার প্রোগ্রামিং লজিককে অনেক ভালো করেছে লিস্পের ছোঁয়া। আর যখন, আমি সি শার্পের ডেলিগেট শিখি, তা আমার ক্লোজার ও হায়ার অর্ডার ফাংশন কনসেপ্টকে উপকৃত করে আর পারত পক্ষে যা আমার কঙ্কারেন্ট সিস্টেম তৈরীতে সহায়তা করে।&lt;/p&gt;
&lt;p&gt;কোন ল্যাঙ্গুয়েজ একরোখা নয়। তারা হয়ত একটি নির্দিষ্ট ব্যবস্থাকে সাপোর্ট করে, কিন্তু, প্রবলেমভেদে আপনি এক প্যারাডাইমের ল্যাঙ্গুয়েজে আরেক প্যারাডাইমের মিশ্রণ ঘটাতে পারেন। এই কারণেই জাভা এনেছে ল্যাম্বডাকে, আর লিস্প ঢুকিয়েছিল ক্লাসকে। অন্য ল্যাঙ্গুয়েজের সংস্পর্শে আসলে আপনি পাবেন অন্য একটি পারস্পেক্টিভ, দৃষ্টিভঙ্গি, যার ফলশ্রুতিতে আপনি যখন আপনার প্রিয় ল্যাঙ্গুয়েজে ফিরে আসবেন, তখন সে ল্যাঙ্গুয়েজকে দেখবেন নতুন আলোকে, হয়ে উঠবেন আরও ভালো প্রোগ্রামার, কারণ আপনার থাকবে তখন নতুন হাতিয়ার, নতুনভাবে চিন্তা করার শক্তি। যদিও আপনি প্রোফেসনাল লাইফে একটি মাত্র ল্যাঙ্গুয়েজ কাজ করে থাকেন, একাধিক ল্যাঙ্গুয়েজ শিখলে আপনি পাবেন প্রোগ্রামিং করার নতুনত্বের আনন্দ আর সৃজন শক্তির ভিন্ন এক মাত্রা, আর আমি মনে করি, এই দুটো ঐতিহাসিকভাবে আমাদের চালিকাশক্তি হিসাবে চলে আসছে প্রোগ্রামারদের মাঝে।&lt;/p&gt;
&lt;p&gt;উৎসাহঃ &lt;a href="http://www.catb.org/esr/faqs/hacker-howto.html" target="_blank"&gt;How to Become a Hacker&lt;/a&gt;&lt;a href="http://www.catb.org/esr/faqs/hacker-howto.html" title="How to Become a Hacker" target="_blank"&gt;&lt;br/&gt;&lt;/a&gt;&lt;/p&gt;</regular-body><tag>programming</tag><tag>polyglot</tag><tag>oop</tag><tag>functionalprogramming</tag></post><post id="97156135835" url="http://code-shoily.tumblr.com/post/97156135835" url-with-slug="http://code-shoily.tumblr.com/post/97156135835/i-decry-the-current-tendency-to-seek-patents-on" type="quote" date-gmt="2014-09-10 19:22:00 GMT" date="Thu, 11 Sep 2014 01:22:00" unix-timestamp="1410376920" format="html" reblog-key="44OWkf3n" slug="i-decry-the-current-tendency-to-seek-patents-on" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>I decry the current tendency to seek patents on algorithms. There are better ways to earn a living than to prevent other people from making use of one&amp;rsquo;s contributions to computer science.</quote-text><quote-source>Donald Knuth</quote-source><tag>quote</tag><tag>computer-science</tag></post><post id="97155391680" url="http://code-shoily.tumblr.com/post/97155391680" url-with-slug="http://code-shoily.tumblr.com/post/97155391680/how-programming-relates-with-psychiatry" type="regular" date-gmt="2014-09-10 19:11:00 GMT" date="Thu, 11 Sep 2014 01:11:00" unix-timestamp="1410376260" format="html" reblog-key="NdprNnqT" slug="how-programming-relates-with-psychiatry" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>How Programming Relates with Psychiatry</regular-title><regular-body>&lt;p&gt;&lt;strong&gt;Recursion&lt;/strong&gt; | &lt;em&gt;Narcissism&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Iteration&lt;/strong&gt; | &lt;em&gt;Obsessive Compulsive Disorder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Inheritance&lt;/strong&gt; | Oedipus/Electra Complex&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt; | &lt;em&gt;Dissociative Identity Disorder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Greedy Algorithm&lt;/strong&gt; | &lt;em&gt;Attention Deficit Disorder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Functional Programming&lt;/strong&gt; |&lt;em&gt; Anxiolytic&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt; | &lt;em&gt;Schizophrenia&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;COBOL&lt;/strong&gt; | &lt;em&gt;Masochistic Personality Disorder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; | &lt;em&gt;Paranoid Personality Disorder&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Benchmarks&lt;/strong&gt; | &lt;em&gt;Pseudologia Fantastica&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Algorithm Analysis&lt;/strong&gt; | &lt;em&gt;Melancholic Personality Disorder&lt;/em&gt;&lt;/p&gt;</regular-body><tag>joke</tag><tag>computerscience</tag></post><post id="97153263980" url="http://code-shoily.tumblr.com/post/97153263980" url-with-slug="http://code-shoily.tumblr.com/post/97153263980/চমৎক-র-একট-প-রয়-স" type="regular" date-gmt="2014-09-10 18:37:00 GMT" date="Thu, 11 Sep 2014 00:37:00" unix-timestamp="1410374220" format="html" reblog-key="TTbImKB9" slug="চমৎক-র-একট-প-রয়-স" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>চমৎকার একটি প্রয়াস</regular-title><regular-body>&lt;p&gt;কিছুদিন আগে ফেইসবুকে মাসনুনের সাথে কথা বলছিলাম, কথার মাঝে ক্লোজার নিয়ে কথা হয় আর তখন ও আমাকে বলল আমি ক্লোজার নিয়ে বই লিখলে পারি। একটা খুব ভাল পদক্ষেপ নেওয়া হয়েছে কিছুদিন আগে যা নিয়ে আমার ফ্রেন্ড লিস্টের অনেক প্রোগ্রামাররাই কথা বলত দেখতাম। আর তা হোল &lt;a href="http://howtocode.com.bd" target="_blank"&gt;http://howtocode.com.bd&lt;/a&gt; । আমি দেখতাম সাইটটি, অনেক বই আর কোর্সের ছড়াছড়ি দেখা যেত, কিন্তু কখনও সিরিয়াসলি দেখা হয়নি। কিন্তু কেন যেন মনে হোল, ট্রাই করে দেখা যেতে পারে, খারাপ কি? ক্লোজার (অথবা যে কোন লিস্প) এর প্রোগ্রামারকে ভিন্নভাবে চিন্তা করাতে শিখায়, আর আমাদের ইন্ডাস্ট্রিতে চিন্তা শক্তিকে যত কচলানো যাবে, ততই তাঁরা উপকৃত হবেন মানসিক (ও আর্থিক) ভাবে। আর আমি যদি আমার ছিটে ফোটা এক্সপিরিয়েন্স থেকে একজন ক্লোজারিয়ানও বানাতে পারি, খারাপ কি? কাজেই, রাজি হয়ে গেলাম মাসনুনের কথায় আর পরিচিত হলাম নুহিল ভাইয়ের সাথে।&lt;/p&gt;
&lt;p&gt;&lt;a href="http://howtocode.com.bd" target="_blank"&gt;http://howtocode.com.bd&lt;/a&gt; এর সাথে আমার সম্পর্ক স্ট্রিক্টলি বইয়ের কন্টেন্ট পুশ পর্যন্ত (অন্তত এই ২/৩ দিন)। কিন্তু যা শুনেছি, এই সাইটটি হোল বাংলায় প্রোগ্রামিং সম্পর্কিত বই, কোর্সে ইত্যাদি লিখার একটি কমন প্ল্যাটফরম। আমরা অনেকেই চিন্তা করেছিলাম এমন কিছু করার, কিন্তু করা হয়ে উঠেনি। আমার এক্সকিউস সবসময়ের মতই, আলস্য। কিন্তু নুহিল ভাই ও তাঁর টীম এই প্রয়াসের মাধ্যমে আমাদের অনেকের ইচ্ছাকেই বাস্তবায়িত করেছেন এবং আমি নিশ্চিত বহু প্রোগ্রামারের দোয়াও পেয়েছেন (ও পাবেন)। আমাদের ভাষা অত্যন্ত সমৃদ্ধ। যদিও আমি মানি যে ভাল প্রোগ্রামার হতে হলে ভাল ইংলিশ জানা বাঞ্ছনীয় আর প্রোগ্রামিংয়ের বহু টার্ম আছে যার বাংলা করতে গেলে হয়ত হাসির পাত্র হতে হবে, কিন্তু কোন একটি কনসেপ্টের ব্যাখ্যা নিজের মাতৃভাষায় বুঝতে ও বুঝাতে যেমন ভাল লাগে তা অন্য কোন ভাষায় লাগে না। তাই যদি এই প্রয়াস সফল হয় (এবং আমার অনুরোধ থাকবে প্রোগ্রামারদের প্রতি একে সফল করার) তাহলে আমাদের প্রোগ্রামিং কালচারেও আসবে বৈচিত্র্য। দুর্বোধ্য কনসেপ্টকে সবাই মিলে জয় করতে পারব এবং লেখনীর মাধ্যমে নিশ্চিত করতে পারব যে পরবর্তীতে যারা একই সমস্যার সম্মুখীন হবেন, তাঁরা আমাদের এক্সপিরিয়েন্স থেকে জেনে নিবেন। একে অপরকে সাহায্যের মধ্য দিয়ে আমরা গড়ে তুলব শক্তিশালী ও ইফেক্টিভ একটি কমিউনিটি।&lt;/p&gt;
&lt;p&gt;এবার সাইটটির কথা বলা যাক, অনেক ধরনের বই/কোর্স দেখলাম, লারাভেল, গিটফ্লো, পাইথন, রুবী, সফটওয়্যার আর্কিটেকচার, জাভা, এমনকি স্ক্যালা নিয়েও একটি বই দেখা গেল। বেশিরভাগ বই লিখা হচ্ছে আর বুঝাই যাচ্ছে যে সময়ের সাথে আরও যুক্ত হবে বই ও কন্টেন্ট। আমি নজর রেখেছি বিশেষভাবে স্ক্যালার বইটির দিকে, আমার একটি বিশেষ দুর্বলতা কাজ করে এই ল্যাঙ্গুয়েজটির প্রতি অনেক আগে থেকেই, ক্লোজার দিয়েই আমি সন্তুষ্ট বিধায় আমার সিরিয়াসলি শিখা হয়ে উঠেনি, তবে আমি এই বইটিকে ফলো করব। বজলুর রহমান রোকন খুব ভাল একজন জাভা বিশারদ তাই তার লিখার উপর আমার ভালোই আস্থা রয়েছে। গুড জব ডুড।&lt;/p&gt;
&lt;p&gt;এবার আসি আমার রোল নিয়ে। আমি আগেই বলেছি আমি ক্লোজার নিয়ে লিখছি। আমার চেষ্টা থাকবে এর ফাংশনাল প্রোগ্রামিং ও কঙ্কারেন্সি নিয়ে বেশি কথা বলার। এর ফাকে আমার ফাংশনাল প্রোগ্রামিং পেশী প্রসারণের সুযোগ হবে। আমি আরও চিন্তা করছিলাম পাইথন ও জি আই এস (ভৌগলিক তথ্য প্রযুক্তি) নিয়ে কিছু লিখার, ক্লোজার নিয়ে মোটামোটি অগ্রসর হওয়ার পর হয়ত ওটা স্টার্ট করব। আরও ইচ্ছা আছে অ্যাডভান্সড জ্যাঙ্গগো নিয়ে লিখার। কিন্তু এই মুহূর্তে আমার প্রাধান্য পাবে ক্লোজার। আমি অমনিতেও মাল্টীটাস্কিং কমানোর কথা চিন্তা করছি, মাল্টীটাস্কিং করবে আমার প্রোগ্রাম, আমি না!&lt;/p&gt;
&lt;p&gt;যাই হোক, আমি রেগুলার পুশ করব আমার বইটিতে, আর মাঝে মাঝে কিছু লিখালিখি করব এখানেও। ভুলে যাবার আগে বলে রাখি, &lt;a href="http://clojure.howtocode.com.bd" target="_blank"&gt;http://clojure.howtocode.com.bd&lt;/a&gt; হোল আমার বইয়ের লিঙ্ক। আমার চেস্টা থাকবে একটি সম্পূর্ণ লার্নিং এক্সপিরিয়েন্স দিতে ফাংশনাল প্রোগ্রামিং, মডার্ন কঙ্কারেন্সি এবং লিস্পের উপর।&lt;/p&gt;
&lt;p&gt;অন্যান্য ইন্ডাস্ট্রি থেকে আমরা ভিন্ন এই দিক দিয়ে যে আমাদের ইন্ডাস্ট্রিতে ওপেন সোর্স নামে একটি কনসেপ্ট রয়েছে যার মাধ্যমে খুব কম স্বার্থ নিয়েই এক্সপার্টরা সময় দিয়ে থাকেন ও কল্যাবোরেট করে থাকেন, আর এই সময় ও কল্যাবোরেশনের ফলস্রুতিতে সৃষ্টি হয়েছে অসংখ্য মুক্ত প্রোডাক্ট যাদের টাকাতে মাপতে গেলে হয় অনেক অনেক বেশি। আর আমাদের, প্রোগ্রামারদের মাঝে যে পারস্পরিক সম্মান ও আন্ডারস্ট্যান্ডিং গ্লোবালী তাও হয়ত অন্য কোন ডিসিপ্লিনে নেই। সে দিক থেকে আমরা ওপেন সোর্স প্রোগ্রামাররা লাকী ও এই কালচারের প্রতি আমাদের গর্বিত থাকা উচিত। আজকে &lt;a href="http://howtocode.com.bd" target="_blank"&gt;http://howtocode.com.bd&lt;/a&gt; এর মাধ্যমে বাংলাদেশে ওপেন সোর্স অ্যাটিটুড ও মানসিকতাকে দৃঢ়তর করার আরেকটি প্রয়াস শুরু হোল এবং আশা করব ভবিষ্যতে এরই থেকে ছড়িয়ে উঠবে চমৎকার আরও প্রজেক্ট।&lt;/p&gt;</regular-body><tag>clojure</tag><tag>howtocodedotcomdotbd</tag><tag>programmingbook</tag><tag>opensource</tag></post><post id="93668493500" url="http://code-shoily.tumblr.com/post/93668493500" url-with-slug="http://code-shoily.tumblr.com/post/93668493500/প-ন-ড-স-পর-চ-ত-২" type="link" date-gmt="2014-08-03 09:21:00 GMT" date="Sun, 03 Aug 2014 15:21:00" unix-timestamp="1407057660" format="html" reblog-key="KpwSbc4B" slug="প-ন-ড-স-পর-চ-ত-২" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>পান্ডাস পরিচিতি ২ </link-text><link-url>http://goo.gl/C1thwh</link-url><tag>tutorial</tag><tag>python</tag><tag>data</tag><tag>pandas</tag><tag>nb</tag></post><post id="93668396195" url="http://code-shoily.tumblr.com/post/93668396195" url-with-slug="http://code-shoily.tumblr.com/post/93668396195/প-ন-ড-স-পর-চ-ত-১" type="link" date-gmt="2014-08-03 09:18:00 GMT" date="Sun, 03 Aug 2014 15:18:00" unix-timestamp="1407057480" format="html" reblog-key="CtPEUXpM" slug="প-ন-ড-স-পর-চ-ত-১" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>পান্ডাস পরিচিতি ১</link-text><link-url>http://goo.gl/4QpoJu</link-url><tag>tutorial</tag><tag>python</tag><tag>pandas</tag><tag>data</tag><tag>nb</tag></post><post id="93306766390" url="http://code-shoily.tumblr.com/post/93306766390" url-with-slug="http://code-shoily.tumblr.com/post/93306766390/ম-য-টপ-লটল-ব" type="link" date-gmt="2014-07-30 13:33:00 GMT" date="Wed, 30 Jul 2014 19:33:00" unix-timestamp="1406727180" format="html" reblog-key="Bk9raKxY" slug="ম-য-টপ-লটল-ব" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>ম্যাটপ্লটলিব</link-text><link-url>http://goo.gl/unYD3g</link-url><tag>tutorial</tag><tag>python</tag><tag>matplotlib</tag><tag>data</tag><tag>nb</tag></post><post id="93231150780" url="http://code-shoily.tumblr.com/post/93231150780" url-with-slug="http://code-shoily.tumblr.com/post/93231150780/ন-মপ-ই-পর-চ-ত-১" type="link" date-gmt="2014-07-29 18:58:00 GMT" date="Wed, 30 Jul 2014 00:58:00" unix-timestamp="1406660280" format="html" reblog-key="9ZnH0gbZ" slug="ন-মপ-ই-পর-চ-ত-১" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>নামপাই পরিচিতি ১</link-text><link-url>http://goo.gl/gMkxo2</link-url><tag>tutorial</tag><tag>python</tag><tag>numpy</tag><tag>data</tag><tag>nb</tag></post><post id="88286063220" url="http://code-shoily.tumblr.com/post/88286063220" url-with-slug="http://code-shoily.tumblr.com/post/88286063220/you-cant-just-turn-on-creativity-like-a-faucet" type="quote" date-gmt="2014-06-09 16:55:36 GMT" date="Mon, 09 Jun 2014 22:55:36" unix-timestamp="1402332936" format="html" reblog-key="34n1sMZn" slug="you-cant-just-turn-on-creativity-like-a-faucet" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>You can&amp;rsquo;t just turn on creativity like a faucet. You have to be in the right mood. &lt;br/&gt;
What mood is that? &lt;br/&gt;
Last-minute panic.</quote-text><quote-source>&lt;a href="http://www.goodreads.com/author/show/13778.Bill_Watterson" target="_blank"&gt;Bill Watterson&lt;/a&gt;</quote-source><tag>quote</tag><tag>procrastination</tag></post><post id="88157494060" url="http://code-shoily.tumblr.com/post/88157494060" url-with-slug="http://code-shoily.tumblr.com/post/88157494060/php-emptying-my-cup" type="regular" date-gmt="2014-06-08 08:40:00 GMT" date="Sun, 08 Jun 2014 14:40:00" unix-timestamp="1402216800" format="html" reblog-key="2ZIvSSuu" slug="php-emptying-my-cup" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>PHP: Emptying my Cup</regular-title><regular-body>&lt;p&gt;Yes, I have started to learn PHP. Those who know me might get surprised or even put a smug smirk on, but that&amp;rsquo;s that. For the first time in my 14 years of knowing about the art of Programming, I am making an attempt to actually learn the language.&lt;/p&gt;
&lt;p&gt;Being exposed to (and inspired by) Eric Raymonds&amp;rsquo; writings from a very young age, I had developed this habit of collecting programming languages, at least one per year. In that journey, came (in chronological order), C#, Java, Python, JavaScript, Perl, Common Lisp, Scheme, Ruby, C++, C (that came late in my life), Clojure, Scala, and Go. Granted, of them, only Python, Clojure (and other Lisps here and now), and Java stuck. Now, it&amp;rsquo;s PHP&amp;rsquo;s turn to be learnt instead of having thrust upon.&lt;/p&gt;
&lt;p&gt;I never really &amp;ldquo;learnt&amp;rdquo; PHP, I had always been force-fed it. It was at my first, second and partially the third work-places. My fellow colleagues (and from now on, I shall remember NEVER to talk about my first and second work-places) weren&amp;rsquo;t as proficient in the language to have me inspired to show me the friendlier path of doing things. I ended up being bitter, and having to regularly view messy and unmanaged code, upset and hateful towards the tool, instead of understanding the shortcomings of the workmen (me included, Google had always been there at my disposal). As a result, my posts, comments, and statuses had always been against the language, at times in mockery, at others, in criticism. One fact remained however, I had never &amp;ldquo;learnt&amp;rdquo; the language, not in the way I had &amp;ldquo;learnt&amp;rdquo; 14 others, while if I have forgotten most- I did make attempts, with no pressures or promises. Reading posts in /r/lolphp or articles tagged &amp;ldquo;PHP Sucks&amp;rdquo; is hardly educational. And to hurt someones toolkit that facilitates the creation of something, and been so for decades is hardly respectful. So, that stage stops from here. Sorry guys.&lt;/p&gt;
&lt;p&gt;Recently, I have been getting some pro-PHP articles and after a recent DevCon, I got some pointers towards what PHP has become (and also, saw for the first time PHP in the eyes of its worthy admirers). That got me wondering, a language may have its deficiencies, bad design decisions, or decisions conflicting with the mindset of a certain set of people; it is true for any tool, JavaScript suffers from it badly, as does, to a certain few, Objective-C, but those still remained staple (Although I hope Swift does something to Objective-C&amp;rsquo;s semi-monopoly, it is a bad habit Apple needs to kick). PHP is no different, whether it is more or less prone to design specific idiosyncracies is not my place to judge, as long as I know I can create with it through avoiding it, and promote it to others so that they do the same. This last statement actually motivated me to learn PHP.&lt;/p&gt;
&lt;p&gt;I am not saying I am a good programmer, I am just a person who took &amp;ldquo;Learn a programming language per year&amp;rdquo; too seriously. And wherever I look, I see people being interested in PHP or its toolkits. Shoving Python or Ruby onto their face is not an answer. Shoving programming in general is, and if the vessel therein is PHP, it&amp;rsquo;s well and good, because PHP done right can yield greatness just as the way Python done right can, the converse is also true, it may be that in case of PHP it becomes truer at times, but it is also true that there are way more PHP programmers than any other, if you bring varying skill-set and non-programming background into account. And I recently felt, since I collect one language per year any way, why not make an attempt to minimize it and fetch good stuff both into my skill-set and to certain others, if I can.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t have to write a whole blog post to justify my learning PHP, since as far as I know, few (Non-PHP-Lang)-to-PHP converts exist. And this is by no means a mean to make myself convinced to start all this. But this is my way of doing something vocal and positively so about PHP. This is about emptying my cup and starting to learn a skill, only this time, a skill that is already spread and enjoy a great community to learn from and owning an opportunity to give something back instead of partially educated criticism. Perhaps I might shed light on this piece of technology from a different perspective, given my background (Empty cup, eh?). Let time tell that.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I shall be posting about my learnings on a regular basis and perhaps be bugging the people I know, a lot maybe. I know, they wouldn&amp;rsquo;t mind. Also, my promise about writing a tutorialish post about DRF + Restangular + Good intentions still exist. I still love Python and nothing will change that.&lt;/p&gt;</regular-body><tag>php</tag></post><post id="88152484915" url="http://code-shoily.tumblr.com/post/88152484915" url-with-slug="http://code-shoily.tumblr.com/post/88152484915/when-any-real-progress-is-made-we-unlearn-and" type="quote" date-gmt="2014-06-08 06:56:08 GMT" date="Sun, 08 Jun 2014 12:56:08" unix-timestamp="1402210568" format="html" reblog-key="HrApbhdu" slug="when-any-real-progress-is-made-we-unlearn-and" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>When any real progress is made, we unlearn and learn anew what we thought we knew before.</quote-text><quote-source>Henry David Thoreau</quote-source><tag>quote</tag></post><post id="86102714725" url="http://www.tumblr.com/blog/code-shoily/submissions?86102714725" url-with-slug="http://www.tumblr.com/blog/code-shoily/submissions?86102714725" type="answer" date-gmt="2014-05-18 13:00:02 GMT" date="Sun, 18 May 2014 19:00:02" unix-timestamp="1400418002" format="html" reblog-key="atZb7yFZ" slug="what-is-your-favorite-inanimate-object" state="submission" is_reblog="false" tumblelog="code-shoily"><question>WHAT IS YOUR FAVORITE INANIMATE OBJECT?</question></post><post id="71755865839" url="http://code-shoily.tumblr.com/post/71755865839" url-with-slug="http://code-shoily.tumblr.com/post/71755865839/প-ইথন-ও-আম-২০০২-থ-ক-২০১৩-ব-শ-ষভ-ব-২০১৩" type="regular" date-gmt="2013-12-31 15:56:00 GMT" date="Tue, 31 Dec 2013 21:56:00" unix-timestamp="1388505360" format="html" reblog-key="Z1UL3lrX" slug="প-ইথন-ও-আম-২০০২-থ-ক-২০১৩-ব-শ-ষভ-ব-২০১৩" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>পাইথন ও আমিঃ ২০০২ থেকে ২০১৩ (বিশেষভাবে ২০১৩)</regular-title><regular-body>&lt;p class="p1"&gt;২০১৩ শেষ হয়ে যাবে আর কয়েক ঘণ্টা পরই। ব্যাক্তিগত জীবন যেমনি কাটুক এই বছর, প্রোগ্রামিং এর দিক থেকে চিন্তা করতে গেলে আমার অনেক বৈচিত্র্যময় দিন-মাস কেটেছে এই বছর, বিশেষ করে পাইথন প্রোগ্রামিং করা হয়েছে প্রচুর, যদি সবচেয়ে বেশি লাইন লিখেছি বলি তাহলে হয়ত ভুল হবে তবে সবচেয়ে বিচিত্র কাজ করা হয়েছে এই বছর। এই পোস্টে ২০১৩ নিয়ে লিখব ভেবে বসলেও মনে হল, এই উপলক্ষে আমার পাইথন অভিজ্ঞতার একটা ছোটখাটো সারমর্ম প্রদর্শন করে দেই। তাহলে শুরু করা যাক। তবে আগেই বলে রাখি, এটি হবে সম্পূর্ণ অভিজ্ঞতা সংক্রান্ত পোস্ট, তত্ত্ব সংক্রান্ত নয়। তো আসুন শুরু করি।&lt;/p&gt;
&lt;p class="p2"&gt;২০০২। তখন কোর্সের প্রয়োজন হিসাবে জাভা, সি, আর সি++ শিখা এবং ব্যাক্তিগত প্রচেষ্টায় জাভাস্ক্রিপ্ট আর বেসিক। একটা আর্টিকেল চোখে আসল, এরিক রেমন্ডের “How to Become a Hacker”। কম্পিউটার সায়েন্সের দ্বিতীয় বর্ষের ছাত্র হিসাবে স্বাভাবিকভাবেই হ্যাকার শব্দের প্রতি দুর্বলতা ছিল (হ্যাকার শব্দের ভুল ব্যাখ্যার কারণে, যা পরিষ্কার হয়ে যায় আর্টিকেলটি পরার পর)। যাই হোক, ওখানে দেখলাম পাইথন শিখার কথা বলা হয়, আমার মনে নেই ঠিকমত, কিন্তু হয় ওইদিন, অথবা তার আগেরদিনি আমি “Charming Python” সিরিজে চোখ বুলাই। তো করলাম ডাউনলোড (তখনকার দিনে কয়েক মেগাবাইট মানে অনেক সময়ের ডাউনলোড) আর সবচেয়ে অবাক হলাম যখন দেখলাম যে ইনপুট দেওয়া মাত্র অউটপুট বের হয়ে আসে পাইথন শেলে। আর CHM মোডের টুটরিয়াল অনেক কাজে আসল। আর কাজে আসল “How to think Like a Computer Scientist” বইটি। আসলে তখনকার দিনে ফেইসবুক ছিল না, আর গ্রুপ বলতে রাজত্ব করত ইয়াহু গ্রুপ আর ওখানেও আমার খোজ করা হয়নি, ছিল কিছু আর্টিকেল, চ্যাট রুম, আর প্রেরণা। কিছুদূর যাওয়ার পরপর রেগুলার এক্সপ্রেশনের ব্যবহার নির্বিচারে শুরু করলাম, আর যখন যেই কোর্স আসত ওই কোর্সের হোমওয়ার্ক করার চেষ্টা একবার হলে পাইথনে করতাম। সেই হিসাবে আমার শিখা হল টুইস্টেড ফ্রেমওয়ার্ক, Zope (এটি ছিল ব্যর্থ চেষ্টা), Tkinter, পি এস পি (Spyce, JSP for Python সার্চ করতে গিয়ে পেয়েছিলাম), আর পেটার নরভিগের লিখা কিছু AI রিলেটেড আর্টিকেল। পরবর্তীতে যখন আমার CSC325: Programming Language Principles কোর্সে পাইথন শিখানো হয় তখন বিনা কষ্টে ল্যাব শেষ করি। তারপর এলো Numpy আর PIL। দেখতে দেখতে গ্রাডুয়েট হলাম, আর শুরু হল CFML আর PHP নামক টর্চার।&lt;/p&gt;
&lt;p class="p2"&gt;বেশ কিছুদিন টর্চারের পর আমি ভাবলাম, ভিন্নধর্মী কিছু করা যাক, তো IBA তে গেলাম MBA করতে, আমি মোটেও MBA করার যোগ্য না, কিন্তু তখন পাইথন অনেক কাজে এসেছে, যেমন, সার্ভেগুলর রেজাল্ট বের করা, কিছু ফেক সার্ভে তৈরি করা, পরিসংখ্যানে কিছু এদিক ওদিক (আবার Numpy আর Scipy)। চলে গেল ২০০৭ আর ২০০৮, আমার মাথায় MBA এর কোর্সগুল ঢুকত না (MIS ও না), তাই পাশাপাশি কিছু অউটসরসিং করা হতো, ২০০৯ এ শুরু করলাম পাইথন, বাংলাদেশের এক কোম্পানিতে। আমি ২০০৯ এ মনিকো টেকনোলজিসে যোগ দেই প্রোগ্রামার হিসাবে। ওরা মূলত ভেহিকল ট্র্যাকিং করে থাকে এবং তাদের নিজস্ব ডিজিটাল ম্যাপ ছিল। আমার প্রথম কাজ ছিল একটি সার্ভার তৈরি করা, আর দ্বিতীয় কাজ ছিল ওখানকার পিএইচপি কে বিতাড়িত করা। আসলে, পিএইচপি খারাপ ল্যাঙ্গুয়েজ না, মানে, অতটা খারাপ না, কিন্তু পিএইচপি ভুল জায়গায় অনেক ক্ষমাশীল, যা যে কোন প্রোগ্রামারের সঠিক দিকে অগ্রগতিতে বাঁধা সৃষ্টি করতে পারে যদি সে সতর্ক না থাকে। যাই হোক, পিএইচপি থেকে ট্র্যাকার অ্যাপ্লিকেশান নিয়ে এলাম জ্যাঙ্গোতে, ৩ মাসে (আর ওই অ্যাপ্লিকেশান এখন পর্যন্ত চলছে!) ২০০৯ এর শেষের দিকে, আর এরপর একটি ম্যাপ সার্ভার লিখলাম পাইথনে (Tilecache ক্লোন mod_wsgi এর জন্য), এবং একটি নিরস বিজনেস অটোমেশান, আরও ৩ টি ট্র্যাকিং, আর একটি সোশ্যাল নেটওয়ার্কিং অ্যাপ্লিকেশান, বলতে পারেন অনেক ব্যস্ত ছিলাম এই কয় বছর। ২০১২ এর শেষের দিকে আবার এক হ্যাকাথনে মেন্টর হওয়ার অভিজ্ঞতা হয়, দুঃখজনকভাবে, ওখানে কোন পাইথন হ্যাকারের দেখা মিলেনি (সামনের বার তা হবে না আশা করি)। গেলো ২০০৯ - ২০১২।&lt;/p&gt;
&lt;p class="p2"&gt;২০১৩। মনিকো ছেড়ে প্যানাসিয়া এলাম। এখানেও পাইথন। কিন্তু কাউকে বিতাড়িত করে নয়, প্রথম থেকেই। বিগত কিছু বছর মূলত জি আই এস এর উপর জোড় দেওয়া হয়েছে (সোশ্যাল নেটওয়ার্কিং অ্যাপ্লিকেশানও ছিল ম্যাপ ভিত্তিক)। আর এবার মোটামোটি সব ধরনের কাজই করা হয়েছে। এমনকি SRS ও তৈরি করেছি পাইথনে! এখানে বেশ কিছু ডাটা এনালাইসিস দিয়ে শুরু করলেও পরবর্তীতে একটি জ্যাঙ্গো ভিত্তিক ফ্রেমওয়ার্ক, কিছু টেক্সট এনালাইসিস, মাইগ্রেশান টুল, ভীম প্লাগিন, অনেকগুলো ফর্ম হেল্পার, কিছু বিজনেস অ্যাপ, আর অনেক, অনেক ট্রেনিং (কিছু পাইথন, আর কিছু জাভাস্ক্রিপ্ট)। বেশিরভাগ কাজই ছিল মেটাপ্রোগ্রামিং আর ফ্রেমওয়ার্ক নির্মাণ বিষয়ক। বেশ আরামদায়ক বলতে পারেন, কিন্তু সবচেয়ে বড় কথা হল, শিখা হচ্ছে অনেক কিছু, যার বিকল্প নেই, বিশেষ করে আমাদের শিল্পে।&lt;/p&gt;
&lt;p class="p2"&gt;এগুলো তো গেল ইউনিভার্সিটি আর অফিসের কাহিনী। এবার আশা যাক ব্যক্তিগত জীবনে। এই ব্যাপারে আমি শুধু ২০১৩ নিয়েই কথা বলবো, অন্যগুলো মনে নেই। ২০১২ এর শেষের দিকে ভাবলাম, কিছু সামাজিক হওয়া যাক, তাই ফেইসবুকে BD Pythonista নামে একটি গ্রুপ খুললাম, কিন্তু পরে দেখি Pycharmers নামক আরেকটি গ্রুপ রয়েছে যা মনে হল আরও অ্যাক্টিভ, আমি চাইছিলাম না যে পাইথনের আগন্তুক কনফিউজড হোক, তাই BD Pythonista বন্ধ করে ওখান থেকে Pycharmers এ আসি এবং ওখানে পরিচয় হয় কিছু ভাল প্রোগ্রামারের সাথে, আর কাজ কর্মের পাশাপাশি এই গ্রুপে শেয়ার ও কথাবার্তা চলে অন্যান্য প্রোগ্রামারদের সাথে। আরও একটি গ্রুপ, Polyglot Programmers Bangladesh খুলি যা কিনা বহুমাত্রিক প্রোগ্রামিং (ল্যাঙ্গুয়েজ অনুযায়ী) প্রেমীদের জন্য করা। বলতে গেলে, ২০১৩ তে আমার পরিচয় হয় বেশ কিছু প্রোগ্রামারের সাথে। এদের মধ্যে খুব কম মানুষের সাথেই দেখা হয়েছে, কিন্তু অনলাইনে রেগুলার যোগাযোগ চলে। আর এটি আমার ২০১৩ এর খুব গুরুত্বপূর্ণ একটি অধ্যায়। আমি আগে ছিলাম খুবই অসামাজিক, কিন্তু এই বছর, অন্ততপক্ষে টেকনোলজি জগতে হলেও, ওটির অবসান ঘটেছে। আর এই ব্লগটি তো রয়েছেই!&lt;/p&gt;
&lt;p class="p2"&gt;নতুন কি কি শিখেছি এই বছর? যেহেতু এই পোস্টটি পাইথন ভিত্তিক (আমার মুড নেই অন্য বিষয়ে কথা বলার আজকে), তাই পাইথন নিয়েই বলি। আমার অনেক, অনেক মেটা প্রোগ্রামিং করা হয়েছে, সাথে সাথে Twistd আর Tornado দিয়ে অনেক ইন্টেরেস্টিং কাজ, নিজের ফ্রেমওয়ার্ক তৈরি করতে গিয়ে শিখেছি ফাইল ম্যানেজমেন্ট, কোড জেনারেশন, WSGI, টেমপ্লাটিং আর ইদানীং ডাটা এনালাইসিস টুল, যেমন Pandas, Numpy, Scipy, Matplotlib, PyPy, Sympy, NLTK ইত্যাদি। আমি অনেক ব্যস্ত ছিলাম বলতে পারেন। একটি কথা বলে রাখি, আমি কিন্তু অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং কম আর ফাংসনাল প্রোগ্রামিং বেশি করে থাকি পাইথনে। অর্থাৎ ক্লাস কম, ডিকশনারি বেশি, ফর/হোআইল কম, ম্যাপ/ফিল্টার বেশি। হয়ত আমার আগের পোস্ট থেকে বুঝা গিয়েছে।&lt;/p&gt;
&lt;p class="p2"&gt;অনেক বলা হল, আর কয়েক ঘণ্টা পর শেষ হয়ে যাবে ২০১৩, আমি জানি ২০১৪ আরও ব্যস্ত করে তুলবে আমাকে (আশা করি আমাদের সবাইকে), আর আমরা শিখতে/শিখাতে পারব অনেক কিছু, আর বিশেষভাবে আমি আরও বেশি সামাজিক হয়ে উঠব (টেকনোলজি অনুযায়ী :p)। শুভ ২০১৪ সবাইকে, আরও বেশি দেখা হবে সামনে!&lt;/p&gt;</regular-body><tag>python</tag><tag>personal</tag></post><post id="70795360066" url="http://code-shoily.tumblr.com/post/70795360066" url-with-slug="http://code-shoily.tumblr.com/post/70795360066/my-first-ipython-notebook" type="link" date-gmt="2013-12-22 16:32:00 GMT" date="Sun, 22 Dec 2013 22:32:00" unix-timestamp="1387729920" format="html" reblog-key="7YoJgE3S" slug="my-first-ipython-notebook" state="published" is_reblog="false" tumblelog="code-shoily"><link-text>My First ipython Notebook</link-text><link-url>http://nbviewer.ipython.org/gist/code-shoily/8084957</link-url><link-description>&lt;blockquote class="link_og_blockquote"&gt;
&lt;div&gt;&lt;a href="http://nbviewer.ipython.org/gist/code-shoily/8084957" target="_blank"&gt;http://nbviewer.ipython.org/gist/code-shoily/8084957&lt;/a&gt;&lt;/div&gt;
&lt;/blockquote&gt;</link-description><tag>ipython</tag><tag>python</tag><tag>tutorial</tag><tag>nb</tag></post><post id="68692262720" url="http://code-shoily.tumblr.com/post/68692262720" url-with-slug="http://code-shoily.tumblr.com/post/68692262720/when-someone-says-i-want-a-programming-language" type="quote" date-gmt="2013-12-01 18:50:00 GMT" date="Mon, 02 Dec 2013 00:50:00" unix-timestamp="1385923800" format="html" reblog-key="JCktskzN" slug="when-someone-says-i-want-a-programming-language" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>When someone says, &amp;ldquo;I want a programming language in which I need only say what I want done,&amp;rdquo; give him a lollipop.</quote-text><quote-source>Alan Perlis</quote-source><tag>quote</tag><tag>computerscience</tag></post><post id="68687495458" url="http://code-shoily.tumblr.com/post/68687495458" url-with-slug="http://code-shoily.tumblr.com/post/68687495458/প-র-গ-র-ম-প-য-র-ড-ইম-এব-আমর-২" type="regular" date-gmt="2013-12-01 18:02:00 GMT" date="Mon, 02 Dec 2013 00:02:00" unix-timestamp="1385920920" format="html" reblog-key="htmDUEtk" slug="প-র-গ-র-ম-প-য-র-ড-ইম-এব-আমর-২" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>প্রোগ্রামিং প্যারাডাইম এবং আমরা - ২</regular-title><regular-body>&lt;p&gt;প্রোগ্রামিং করার সময়ে কোডেররা কখনও &amp;ldquo;কি&amp;rdquo; এবং কখন &amp;ldquo;কিভাবে&amp;rdquo; এর উত্তর দেওয়ার মাধ্যমে তাদের জাদু দেখান। কেউ কেউ বহু ডাটা ধারক তৈরি করে ওই ধারকের অবস্থা পরিবর্তন করে প্রোগ্রামিং এ এগিয়ে যান, আবার কেউ কেউ কর্ম কারকে, অর্থাৎ কি কাজ করা হচ্ছে কার উপর এবং ওই কাজের পরিণাম কি হল, সেই হিশাব করে প্রোগ্রামিং এ এগিয়ে যান। অন্যভাবে বলতে গেলে, কারও কাছে ক্রিয়াপদ গুরুত্বপূর্ণ অপরদিকে কার কাছে বিশেষ্য। এই অভ্যাস নিয়ন্ত্রণ করে মূলত তার পছন্দের প্রোগ্রামিং ল্যাঙ্গুয়েজ। বেশিরভাগ অবজেক্ট ওরিয়েন্টেড ল্যাঙ্গুয়েজ উৎসাহিত করে অবজেক্ট ব্যবহার করতে, অন্যভাবে, তারা বিশেষভাবে বিশেষ্য পদের ভক্ত। অন্যদিকে, ফংশনাল প্রোগ্রামারদের ক্রীড়া চলে ক্রিয়াপদ নিয়ে।&lt;/p&gt;
&lt;p&gt;আরেকটু ভালভাবে বলতে গেলে, &lt;strong&gt;বিড়াল-&amp;gt;&lt;/strong&gt;খেল(&lt;strong&gt;ইদুর&lt;/strong&gt;) এর অর্থ হলও, &lt;strong&gt;বিড়াল &lt;/strong&gt;বিশেষ্য পদটিতে &amp;ldquo;খেল&amp;rdquo; ম্যাসেজ পাঠান হলও &lt;strong&gt;ইঁদুর &lt;/strong&gt;বিশেষ্যটি। হয়ত এর পরে, &lt;strong&gt;বিড়াল &lt;/strong&gt;এর &lt;strong&gt;পেট &lt;/strong&gt;বিশেষ্যের মান ০ থেকে ১ হয়ে যাবে এবং &lt;strong&gt;ইঁদুর &lt;/strong&gt;বিশেষ্যের &lt;strong&gt;জীবন &lt;/strong&gt;বিশেষ্য ১ থেকে ০ হয়ে যাবে। প্রোগ্রামিং করার সময়ে খেয়াল করুন আপনি কতটুকু জোড় দিচ্ছেন &lt;strong&gt;কি &lt;/strong&gt;এর উপর।&lt;/p&gt;
&lt;p&gt;এবার পয়সার ওপিঠ। &lt;strong&gt;অবস্থা_লিখ&lt;/strong&gt;(&lt;strong&gt;খেল(&lt;/strong&gt;বিড়াল, ইঁদুর&lt;strong&gt;)) &lt;/strong&gt;যেখানে &lt;strong&gt;অবস্থা-লিখ&lt;/strong&gt; ক্রিয়ার কাজ হলও তাকে দেওয়া ইনপুটকে বোধগম্য করে, &lt;strong&gt;খেল &lt;/strong&gt;কর্ম তার প্রথম ইনপুটকে দ্বিতীয় ইনপুট এর সাথে সম্পৃক্ত করে এবং উভয় ইনপুটের নতুন অবস্থা সৃষ্টি করে ফেরত দেয়। হয়ত &lt;strong&gt;খেল &lt;/strong&gt;এর অউতপুত হবে একটি গঠন বিড়াল_১ ও ইঁদুর_১, যাকে &lt;strong&gt;অবস্থা_লিখ &lt;/strong&gt;গঠিত করে দিবে অন্য কোনও কর্মকে দেওয়ার জন্য। অবস্থা যাই হোক, এইখানে কিন্তু জোর পাচ্ছে কর্ম, অথবা ক্রিয়াপদ। &lt;/p&gt;
&lt;p&gt;বোঝাই যাচ্ছে যে প্রথমে আমি অবজেক্ট (অর্থাৎ বিশেষ্য) এবং পরবর্তীতে ফংশন (অর্থাৎ ক্রিয়া) নির্ভর প্রোগ্রামিং অভ্যাসকে বুঝিয়েছি। বহু ল্যাঙ্গুয়েজ দুইটির কোনও একটিকে উৎসাহিত করে। কিন্তু উলটটাও হয়, যখন যার দরকার পরে, কিন্তু খেয়াল রাখা জরুরি যেন আমাদের মস্তিষ্ক কোনও এক প্রকার ব্যবহারের উপর নির্ভরশীল না হয়ে উঠে। এখানে কোনও এক প্রকারের শ্রেষ্ঠত্ব গুরুত্বপূর্ণ নয়, গুরুত্বপূর্ণ হলও জেনে রাখা উভয় কৌশল এবং এদের উপযোগিতা। আরও মজার হয় বিষয়টা যখন আপনি এক পারাডাইম নির্ভর ল্যাঙ্গুয়েজে অন্য পারাডাইমের মিশ্রণ ঘটান। শুধু মজার জন্য হলেও তা করা উচিত। &lt;/p&gt;</regular-body><tag>programming</tag><tag>polyglot</tag><tag>oop</tag><tag>functionalprogramming</tag></post><post id="68678550012" url="http://code-shoily.tumblr.com/post/68678550012" url-with-slug="http://code-shoily.tumblr.com/post/68678550012/if-someone-claims-to-have-the-perfect-programming" type="quote" date-gmt="2013-12-01 16:25:00 GMT" date="Sun, 01 Dec 2013 22:25:00" unix-timestamp="1385915100" format="html" reblog-key="drgtW7hz" slug="if-someone-claims-to-have-the-perfect-programming" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>If someone claims to have the perfect programming language, he is either a fool or a salesman or both.</quote-text><quote-source>Bjarne Stroustrup</quote-source><tag>quote</tag><tag>computerscience</tag></post><post id="68678334090" url="http://code-shoily.tumblr.com/post/68678334090" url-with-slug="http://code-shoily.tumblr.com/post/68678334090/প-র-গ-র-ম-প-য-র-ড-ইম-এব-আমর" type="regular" date-gmt="2013-12-01 16:23:00 GMT" date="Sun, 01 Dec 2013 22:23:00" unix-timestamp="1385914980" format="html" reblog-key="OQsbKozS" slug="প-র-গ-র-ম-প-য-র-ড-ইম-এব-আমর" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>প্রোগ্রামিং প্যারাডাইম এবং আমরা</regular-title><regular-body>&lt;p&gt;এখনকার যুগে হয়ত প্রোগ্রামার মাত্রই অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং সম্পর্কে ওয়াকিফহাল। জানারই কথা, জাভা বলুন আর রুবী বলুন, সব ল্যাঙ্গুয়েজ ই অবজেক্ট ওরিয়েন্টেড স্টাইলকে গুরুত্ব দিয়ে থাকে। আর বড় বড় সিস্টেম বোধগম্যভাবে নির্মাণ করতেও এই পারাডাইমের জুরি নাই। তাহলে অন্যান্য পারাডাইমের শক্তি কোথায়? অবজেক্ট ওরিয়েন্টেড এর দুর্বলতাও বা কি?&lt;/p&gt;
&lt;p&gt;আসলে এখানে কথা শক্তি অথবা দুর্বলতা না, বিভিন্ন প্রকার পারাডাইম রয়েছে প্রোগ্রামিং এর কারণ একেক সমস্যা সমাধান এ একেক ব্যবস্থা উপযোগী। না, তাও ঠিক না, আসলে বিভিন্ন প্রোগ্রামার এর পছন্দ বিভিন্ন। অনেকেই আছেন যারা জাভাকে অপছন্দ করেন কারণ অনেক বেশি টাইপ করতে হয়। আবার অনেকে পাইথন অপছন্দ করেন কারণ সামনের স্পেস এর যেমন ইচ্ছা ব্যবহার করলেই বিপদ। সবাই যার যার পছন্দে সঠিক এবং কাওকে তার পছন্দের সমালোচনা করা ঠিক না। কিন্তু, আমার মতে, প্রতিটি পারাডাইম সম্পর্কে জানাটা খুব জরুরি। এতে করে আপনার জ্ঞানের পরিধি যেমন বাড়বে, তেমনি আপনি এক ল্যাঙ্গুয়েজ এর শক্তিকে কাজে লাগাতে পারবেন আরেক ল্যাঙ্গুয়েজে।&lt;/p&gt;
&lt;p&gt;আজকাল হ্যাকার কমিউনিটিতে ফাংশনাল প্রোগ্রামিং এর কথা অনেক শোনা যায়। যাওয়ারই কথা, মাল্টিকোর সিস্টেম ও কনকারেন্সিতে এই পারাডাইম এর সুবিধা অনেক। ওই এলাকায় আবার অবজেক্ট ওরিয়েন্টেড সিস্টেম এ হাল্কা প্রব্লেম হয়, কারণ অবজেক্ট এর স্থিতি পরিবর্তনের উপর যত নির্ভরশীল থাকা হয়, কনকারেন্সিতে ততই মুশকিল হয়। রেস কন্ডিশন, লক ইত্যাদি নানা সমস্যা। ফাংশনাল প্রোগ্রামিং জোর দেয় ফাংশন এর উপর, এক ফাংশন আরেক ফাংশনকে কল করবে ও যা পাবে, তাকে হয়ত আরেক ফাংশন এ ঢুকাবে। এখানে পরিবর্তনশীল কিছু নেই, ফাংশন ইনপুট কে পরিবর্তন করবে না, বরং আউটপুট ছুড়ে মারবে আরেক ফাংশনের জন্য। এটি খুবি সহজ করে দেয় পারাল্যাল প্রোগ্রামিংকে, বহুল আলোচিত ম্যাপ/রেডিউস এই ফাংশনাল প্রোগ্রামিং থেকেই নেওয়া। তার মানে কি অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং এই কাজে পারদর্শী না? সেরকম না ঠিক, জাভা কিন্তু মোটামটি সবাইকেই পরিচিত করিয়েছে কনকারেন্সির সাথে, কথা হল, কিছু ফাংশনাল কনসেপ্ট আপনার অবজেক্ট ওরিয়েন্টেড স্কিলকে আরও ধারাল করবে। এর উলটাটাও প্রযোজ্য। আপনার যদি ফাংশনাল প্রোগ্রামিং দিয়ে যাত্রা শুরু হয়, তাহলে অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং আপনাকে করবে আরও শক্তিশালী। কারণ তখন আপনি একটি প্রবলেমকে বিভিন্ন আলোকে দেখতে পাবেন এবং আপনার সমস্যা সমাধানের তুখড়তা হবে আরও প্রচ্ছন্ন।&lt;/p&gt;
&lt;p&gt;আমি আবার অলস মানুষ। বেশি একটা লিখালিখি পছন্দ করি না। তাই আমার পছন্দের পারাডাইম আসলে ফাংশনাল প্রোগ্রামিং। আমি চুপচাপ বসে এক একটি ফাংশন লিখব, এরপর একটার ভিতর আরেকটা বসিয়ে এবং ইনপুট/আউটপুট শিকল নির্মাণ করে সঙ্গে সঙ্গে জবাব পেতে আমি পছন্দ করি! ঠিক সেই কারণেই হয়ত লিস্প এর মত ল্যাঙ্গুয়েজ আমার কাছে ভাল লাগে। কিন্তু আসলে কি কোনও এক পারাডাইম এ থাকা যায়? শুধু ফাংশনাল প্রোগ্রামিং এ থাকলে আমি মনে করি আমার প্রোগ্রামিং বিশ্বের বিরাট এক অংশের সাথে পরিচয় হলই না, তাই আমি মনে করি, অন্তত বিভিন্ন পারাডাইম এর ল্যাঙ্গুয়েজ একটি হলে শিখে রাখা উচিত। সেই হিসাবে আমি এরিক রেমন্ড এর সাথে একমত (তার লেখাই আমাকে উৎসাহিত করেছিল প্রোগ্রামিং শিখার)ঃ &lt;a href="http://www.catb.org/esr/faqs/hacker-howto.html%C2%A0" target="_blank"&gt;http://www.catb.org/esr/faqs/hacker-howto.html &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;পারাডাইম সম্পর্কে জেনে রাখা ভাল। অনেক পারাডাইম রয়েছে প্রোগ্রামিং এর, কিন্তু ফাংশনাল প্রোগ্রামিং ও অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং বেশি পরিচিত ও ব্যবহৃত। আমার মতে, অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং গদ্য লিখার মত, যেখানে ফাংশনাল প্রোগ্রামিং কমবেশি পদ্য টাইপের। এ সম্পর্কে আমার পরবর্তী পোস্টগুলোতে দেখতে পাবেন। আমি ফাংশনাল প্রোগ্রামিং এর দিকে নজর দিব বেশি কারণ অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং নিয়ে অনেক ভাল ভাল ব্লগ রয়েছে বাংলায়। আমি চেষ্টা করব ভাল লিখার, সাধ্যমত। হয়ত একটি লিস্প প্রোগ্রামিং ল্যাঙ্গুয়েজ এর টিউটোরিয়াল শুরু করে দিব? দেখা যাক! &lt;/p&gt;</regular-body><tag>programming</tag><tag>polyglot</tag><tag>oop</tag><tag>functionalprogramming</tag></post><post id="68672508914" url="http://code-shoily.tumblr.com/post/68672508914" url-with-slug="http://code-shoily.tumblr.com/post/68672508914/স-ব-গতম" type="regular" date-gmt="2013-12-01 15:08:00 GMT" date="Sun, 01 Dec 2013 21:08:00" unix-timestamp="1385910480" format="html" reblog-key="0KKrEfwK" slug="স-ব-গতম" state="published" is_reblog="false" tumblelog="code-shoily"><regular-title>স্বাগতম </regular-title><regular-body>&lt;p&gt;বহুদিন পর লিখতে বসলাম আজকে। অনেক দিনের চিন্তা ছিল যে একটি ব্লগ রাখব যেখানে প্রোগ্রামিং নিয়ে কিছু লিখব কিন্তু সময় হয়ে উঠেনি এতদিন। আজকে ভাবলাম শুরু করেই ফেলি। আজকে থেকে এখানে আমি শুরু করব প্রোগ্রামিংকে আমি যেভাবে জানি ও বুঝি তার প্রতিফলনস্বরূপ কিছু কথাবার্তা।&lt;/p&gt;
&lt;p&gt;প্রথমেই বলে রাখি, এই ব্লগ কোনও নির্দিষ্ট ল্যাঙ্গুয়েজ নিয়ে কথা বলবে না। আমি সবসময়েই মনে করি যে একজন প্রোগ্রামার কখনো একটি ল্যাঙ্গুয়েজ এর উপর নির্ভরশীল হয়ে থাকেন না, তার মুল লক্ষ্য থাকে সমস্যা, আনুষঙ্গিক সমাধান, এবং ওই প্রক্রিয়ায় যথাসম্ভব জ্ঞান ও আনন্দ আহরণ। এই ব্লগ সেই প্রোগ্রামারদের জন্য যারা এই কলাকে পয়সা উপার্জনের জন্য শুধু নয়, বরং নতুন কিছু শিখার জন্য, নতুন কোনও সমাধান এর জন্য, নতুন কিছু সৃষ্টির জন্য ব্যবহার করে থাকেন। আমি বলতে পারিনা আমি কতটুকু ওই শ্রেণীর একজন প্রোগ্রামার কিন্তু আমি চেষ্টা করব এই ব্লগ এ আমার কোড দর্শন তুলে ধরতে সম্পূর্ণ আমার দৃষ্টিতে। আর সেই সাথে আপনাদের পরিচয় করিয়ে দিতে কিছু প্রোগ্রামিং ল্যাঙ্গুয়েজ এর সাথে, কিছু প্রোগ্রাম শৈলীর সাথে, এবং সাথেকার কৃষ্টির সাথে; আমার ভাষায়, আমার নজরে।&lt;/p&gt;
&lt;p&gt;তাহলে কি আশা করা যায় এখান থেকে? অনেককিছু নিয়েই আমি লিখব যেহেতু কোনও নির্দিষ্ট প্রোগ্রামিং ল্যাঙ্গুয়েজ অথবা পারাডাইমে আমি সীমাবদ্ধ আমি থাকব না। কিন্তু কিছু বিষয়ের উপর আমি খানিক বায়াসট থাকব, যেমন ফাংশন্যাল প্রোগ্রামিং, কনকারেন্সি ও ম্যাপিং। ল্যাঙ্গুয়েজ বলতে আমি হয়ত কথা বলব লিস্প, পাইথন, এরল্যাং, হাস্কেল অথবা গ্রুভী নিয়ে (আমি যা যা পারি আরকি)। দেখা যাক কতটুকু কী করতে পারি।&lt;/p&gt;
&lt;p&gt;যাই হোক, স্বাগতম জানাই আপনাকে কোড-শৈলীতে। আশা করি আমার পরবর্তী পোস্ট কারো না কারো কাজে আসবে। ধন্যবাদ।&lt;/p&gt;</regular-body><tag>welcomenote</tag></post><post id="64413562576" url="http://code-shoily.tumblr.com/post/64413562576" url-with-slug="http://code-shoily.tumblr.com/post/64413562576/simplicity-does-not-precede-complexity-but" type="quote" date-gmt="2013-10-18 20:36:00 GMT" date="Sat, 19 Oct 2013 02:36:00" unix-timestamp="1382128560" format="html" reblog-key="aCr1l1eO" slug="simplicity-does-not-precede-complexity-but" state="published" is_reblog="false" tumblelog="code-shoily"><quote-text>Simplicity does not precede complexity, but follows it.</quote-text><quote-source>&lt;a href="http://en.wikipedia.org/wiki/Alan_Perlis" target="_blank"&gt;Alan Perlis&lt;/a&gt;</quote-source><tag>quote</tag></post></posts></tumblr>